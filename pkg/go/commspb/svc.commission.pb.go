// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.26.0
// 	protoc        v3.15.8
// source: svc.commission.proto

package commspb

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// UserBindOrder
type UserBindOrderReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserID  string `protobuf:"bytes,1,opt,name=userID,proto3" json:"userID,omitempty"`
	OrderSN string `protobuf:"bytes,2,opt,name=orderSN,proto3" json:"orderSN,omitempty"` // 用户在vendor后台可见的订单号
}

func (x *UserBindOrderReq) Reset() {
	*x = UserBindOrderReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_svc_commission_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UserBindOrderReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserBindOrderReq) ProtoMessage() {}

func (x *UserBindOrderReq) ProtoReflect() protoreflect.Message {
	mi := &file_svc_commission_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserBindOrderReq.ProtoReflect.Descriptor instead.
func (*UserBindOrderReq) Descriptor() ([]byte, []int) {
	return file_svc_commission_proto_rawDescGZIP(), []int{0}
}

func (x *UserBindOrderReq) GetUserID() string {
	if x != nil {
		return x.UserID
	}
	return ""
}

func (x *UserBindOrderReq) GetOrderSN() string {
	if x != nil {
		return x.OrderSN
	}
	return ""
}

type UserBindOrderRes struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code int32  `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Msg  string `protobuf:"bytes,2,opt,name=msg,proto3" json:"msg,omitempty"`
}

func (x *UserBindOrderRes) Reset() {
	*x = UserBindOrderRes{}
	if protoimpl.UnsafeEnabled {
		mi := &file_svc_commission_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UserBindOrderRes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserBindOrderRes) ProtoMessage() {}

func (x *UserBindOrderRes) ProtoReflect() protoreflect.Message {
	mi := &file_svc_commission_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserBindOrderRes.ProtoReflect.Descriptor instead.
func (*UserBindOrderRes) Descriptor() ([]byte, []int) {
	return file_svc_commission_proto_rawDescGZIP(), []int{1}
}

func (x *UserBindOrderRes) GetCode() int32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *UserBindOrderRes) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

// UserBindPhone
type UserBindPhoneReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserID string `protobuf:"bytes,1,opt,name=userID,proto3" json:"userID,omitempty"`
	Phone  string `protobuf:"bytes,2,opt,name=phone,proto3" json:"phone,omitempty"`
}

func (x *UserBindPhoneReq) Reset() {
	*x = UserBindPhoneReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_svc_commission_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UserBindPhoneReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserBindPhoneReq) ProtoMessage() {}

func (x *UserBindPhoneReq) ProtoReflect() protoreflect.Message {
	mi := &file_svc_commission_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserBindPhoneReq.ProtoReflect.Descriptor instead.
func (*UserBindPhoneReq) Descriptor() ([]byte, []int) {
	return file_svc_commission_proto_rawDescGZIP(), []int{2}
}

func (x *UserBindPhoneReq) GetUserID() string {
	if x != nil {
		return x.UserID
	}
	return ""
}

func (x *UserBindPhoneReq) GetPhone() string {
	if x != nil {
		return x.Phone
	}
	return ""
}

type UserBindPhoneRes struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code int32  `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Msg  string `protobuf:"bytes,2,opt,name=msg,proto3" json:"msg,omitempty"`
}

func (x *UserBindPhoneRes) Reset() {
	*x = UserBindPhoneRes{}
	if protoimpl.UnsafeEnabled {
		mi := &file_svc_commission_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UserBindPhoneRes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserBindPhoneRes) ProtoMessage() {}

func (x *UserBindPhoneRes) ProtoReflect() protoreflect.Message {
	mi := &file_svc_commission_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserBindPhoneRes.ProtoReflect.Descriptor instead.
func (*UserBindPhoneRes) Descriptor() ([]byte, []int) {
	return file_svc_commission_proto_rawDescGZIP(), []int{3}
}

func (x *UserBindPhoneRes) GetCode() int32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *UserBindPhoneRes) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

// UserGetOrders
type UserDividendOrder struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserID          string `protobuf:"bytes,1,opt,name=userID,proto3" json:"userID,omitempty"`                   // user id
	OrderSN         string `protobuf:"bytes,2,opt,name=orderSN,proto3" json:"orderSN,omitempty"`                 // 用户后台可见的订单号
	OrderStatus     int32  `protobuf:"varint,3,opt,name=orderStatus,proto3" json:"orderStatus,omitempty"`        // 订单状态：-1 无效订单（未支付，退货，无佣金， 商家审核失败）1-有效但商家未结算订单（预估金额，用户可能退货）2-已结算订单（用户可提现）
	OrderVendor     int32  `protobuf:"varint,4,opt,name=orderVendor,proto3" json:"orderVendor,omitempty"`        // 订单Vendor
	PayStauts       int32  `protobuf:"varint,5,opt,name=payStauts,proto3" json:"payStauts,omitempty"`            // 支付状态： 0-未支付; 1-用户已提交提现申请，审核中; 2-审核未通过; 3-已审核通过，待支付处理中; 4-支付失败; 99-已支付;
	CashReqSN       string `protobuf:"bytes,6,opt,name=cashReqSN,proto3" json:"cashReqSN,omitempty"`             // 已支付的用户请求提现流水号
	Amount          int32  `protobuf:"varint,7,opt,name=amount,proto3" json:"amount,omitempty"`                  // 用户分配到的佣金额，单位为分
	OrderAmount     int32  `protobuf:"varint,8,opt,name=orderAmount,proto3" json:"orderAmount,omitempty"`        // 实际支付金额，单位为分
	OrderCreateTime string `protobuf:"bytes,9,opt,name=orderCreateTime,proto3" json:"orderCreateTime,omitempty"` // 订单生成时间，格式yyyy-MM-dd HH:mm:ss
}

func (x *UserDividendOrder) Reset() {
	*x = UserDividendOrder{}
	if protoimpl.UnsafeEnabled {
		mi := &file_svc_commission_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UserDividendOrder) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserDividendOrder) ProtoMessage() {}

func (x *UserDividendOrder) ProtoReflect() protoreflect.Message {
	mi := &file_svc_commission_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserDividendOrder.ProtoReflect.Descriptor instead.
func (*UserDividendOrder) Descriptor() ([]byte, []int) {
	return file_svc_commission_proto_rawDescGZIP(), []int{4}
}

func (x *UserDividendOrder) GetUserID() string {
	if x != nil {
		return x.UserID
	}
	return ""
}

func (x *UserDividendOrder) GetOrderSN() string {
	if x != nil {
		return x.OrderSN
	}
	return ""
}

func (x *UserDividendOrder) GetOrderStatus() int32 {
	if x != nil {
		return x.OrderStatus
	}
	return 0
}

func (x *UserDividendOrder) GetOrderVendor() int32 {
	if x != nil {
		return x.OrderVendor
	}
	return 0
}

func (x *UserDividendOrder) GetPayStauts() int32 {
	if x != nil {
		return x.PayStauts
	}
	return 0
}

func (x *UserDividendOrder) GetCashReqSN() string {
	if x != nil {
		return x.CashReqSN
	}
	return ""
}

func (x *UserDividendOrder) GetAmount() int32 {
	if x != nil {
		return x.Amount
	}
	return 0
}

func (x *UserDividendOrder) GetOrderAmount() int32 {
	if x != nil {
		return x.OrderAmount
	}
	return 0
}

func (x *UserDividendOrder) GetOrderCreateTime() string {
	if x != nil {
		return x.OrderCreateTime
	}
	return ""
}

type UserGetOrdersReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserID string `protobuf:"bytes,1,opt,name=userID,proto3" json:"userID,omitempty"`
}

func (x *UserGetOrdersReq) Reset() {
	*x = UserGetOrdersReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_svc_commission_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UserGetOrdersReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserGetOrdersReq) ProtoMessage() {}

func (x *UserGetOrdersReq) ProtoReflect() protoreflect.Message {
	mi := &file_svc_commission_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserGetOrdersReq.ProtoReflect.Descriptor instead.
func (*UserGetOrdersReq) Descriptor() ([]byte, []int) {
	return file_svc_commission_proto_rawDescGZIP(), []int{5}
}

func (x *UserGetOrdersReq) GetUserID() string {
	if x != nil {
		return x.UserID
	}
	return ""
}

type UserGetOrdersRes struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code int32                `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Msg  string               `protobuf:"bytes,2,opt,name=msg,proto3" json:"msg,omitempty"`
	Data []*UserDividendOrder `protobuf:"bytes,3,rep,name=data,proto3" json:"data,omitempty"`
}

func (x *UserGetOrdersRes) Reset() {
	*x = UserGetOrdersRes{}
	if protoimpl.UnsafeEnabled {
		mi := &file_svc_commission_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UserGetOrdersRes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserGetOrdersRes) ProtoMessage() {}

func (x *UserGetOrdersRes) ProtoReflect() protoreflect.Message {
	mi := &file_svc_commission_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserGetOrdersRes.ProtoReflect.Descriptor instead.
func (*UserGetOrdersRes) Descriptor() ([]byte, []int) {
	return file_svc_commission_proto_rawDescGZIP(), []int{6}
}

func (x *UserGetOrdersRes) GetCode() int32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *UserGetOrdersRes) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

func (x *UserGetOrdersRes) GetData() []*UserDividendOrder {
	if x != nil {
		return x.Data
	}
	return nil
}

// query money
type Balance struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Unliquidated float32 `protobuf:"fixed32,1,opt,name=unliquidated,proto3" json:"unliquidated,omitempty"` // 未结算金额
	Payable      float32 `protobuf:"fixed32,2,opt,name=payable,proto3" json:"payable,omitempty"`           // 可提现金额
	Processing   float32 `protobuf:"fixed32,3,opt,name=processing,proto3" json:"processing,omitempty"`     // 支付处理中金额（已冻结，待支付）
	Paid         float32 `protobuf:"fixed32,4,opt,name=paid,proto3" json:"paid,omitempty"`                 // 已支付（用户已提现成功）
}

func (x *Balance) Reset() {
	*x = Balance{}
	if protoimpl.UnsafeEnabled {
		mi := &file_svc_commission_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Balance) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Balance) ProtoMessage() {}

func (x *Balance) ProtoReflect() protoreflect.Message {
	mi := &file_svc_commission_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Balance.ProtoReflect.Descriptor instead.
func (*Balance) Descriptor() ([]byte, []int) {
	return file_svc_commission_proto_rawDescGZIP(), []int{7}
}

func (x *Balance) GetUnliquidated() float32 {
	if x != nil {
		return x.Unliquidated
	}
	return 0
}

func (x *Balance) GetPayable() float32 {
	if x != nil {
		return x.Payable
	}
	return 0
}

func (x *Balance) GetProcessing() float32 {
	if x != nil {
		return x.Processing
	}
	return 0
}

func (x *Balance) GetPaid() float32 {
	if x != nil {
		return x.Paid
	}
	return 0
}

type UserQueryBalanceReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserID string `protobuf:"bytes,1,opt,name=userID,proto3" json:"userID,omitempty"`
}

func (x *UserQueryBalanceReq) Reset() {
	*x = UserQueryBalanceReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_svc_commission_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UserQueryBalanceReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserQueryBalanceReq) ProtoMessage() {}

func (x *UserQueryBalanceReq) ProtoReflect() protoreflect.Message {
	mi := &file_svc_commission_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserQueryBalanceReq.ProtoReflect.Descriptor instead.
func (*UserQueryBalanceReq) Descriptor() ([]byte, []int) {
	return file_svc_commission_proto_rawDescGZIP(), []int{8}
}

func (x *UserQueryBalanceReq) GetUserID() string {
	if x != nil {
		return x.UserID
	}
	return ""
}

type UserQueryBalanceRes struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code int32    `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Msg  string   `protobuf:"bytes,2,opt,name=msg,proto3" json:"msg,omitempty"`
	Data *Balance `protobuf:"bytes,3,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *UserQueryBalanceRes) Reset() {
	*x = UserQueryBalanceRes{}
	if protoimpl.UnsafeEnabled {
		mi := &file_svc_commission_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UserQueryBalanceRes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserQueryBalanceRes) ProtoMessage() {}

func (x *UserQueryBalanceRes) ProtoReflect() protoreflect.Message {
	mi := &file_svc_commission_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserQueryBalanceRes.ProtoReflect.Descriptor instead.
func (*UserQueryBalanceRes) Descriptor() ([]byte, []int) {
	return file_svc_commission_proto_rawDescGZIP(), []int{9}
}

func (x *UserQueryBalanceRes) GetCode() int32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *UserQueryBalanceRes) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

func (x *UserQueryBalanceRes) GetData() *Balance {
	if x != nil {
		return x.Data
	}
	return nil
}

// withdraw money
type DrawMoneyDetail struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Amount float64              `protobuf:"fixed64,1,opt,name=amount,proto3" json:"amount,omitempty"`
	Orders []*UserDividendOrder `protobuf:"bytes,2,rep,name=orders,proto3" json:"orders,omitempty"`
}

func (x *DrawMoneyDetail) Reset() {
	*x = DrawMoneyDetail{}
	if protoimpl.UnsafeEnabled {
		mi := &file_svc_commission_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DrawMoneyDetail) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DrawMoneyDetail) ProtoMessage() {}

func (x *DrawMoneyDetail) ProtoReflect() protoreflect.Message {
	mi := &file_svc_commission_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DrawMoneyDetail.ProtoReflect.Descriptor instead.
func (*DrawMoneyDetail) Descriptor() ([]byte, []int) {
	return file_svc_commission_proto_rawDescGZIP(), []int{10}
}

func (x *DrawMoneyDetail) GetAmount() float64 {
	if x != nil {
		return x.Amount
	}
	return 0
}

func (x *DrawMoneyDetail) GetOrders() []*UserDividendOrder {
	if x != nil {
		return x.Orders
	}
	return nil
}

type UserDrawMoneyReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserID string `protobuf:"bytes,1,opt,name=userID,proto3" json:"userID,omitempty"`
	Phone  string `protobuf:"bytes,2,opt,name=phone,proto3" json:"phone,omitempty"`
}

func (x *UserDrawMoneyReq) Reset() {
	*x = UserDrawMoneyReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_svc_commission_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UserDrawMoneyReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserDrawMoneyReq) ProtoMessage() {}

func (x *UserDrawMoneyReq) ProtoReflect() protoreflect.Message {
	mi := &file_svc_commission_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserDrawMoneyReq.ProtoReflect.Descriptor instead.
func (*UserDrawMoneyReq) Descriptor() ([]byte, []int) {
	return file_svc_commission_proto_rawDescGZIP(), []int{11}
}

func (x *UserDrawMoneyReq) GetUserID() string {
	if x != nil {
		return x.UserID
	}
	return ""
}

func (x *UserDrawMoneyReq) GetPhone() string {
	if x != nil {
		return x.Phone
	}
	return ""
}

type UserDrawMoneyRes struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code int32            `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Msg  string           `protobuf:"bytes,2,opt,name=msg,proto3" json:"msg,omitempty"`
	Data *DrawMoneyDetail `protobuf:"bytes,3,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *UserDrawMoneyRes) Reset() {
	*x = UserDrawMoneyRes{}
	if protoimpl.UnsafeEnabled {
		mi := &file_svc_commission_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UserDrawMoneyRes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserDrawMoneyRes) ProtoMessage() {}

func (x *UserDrawMoneyRes) ProtoReflect() protoreflect.Message {
	mi := &file_svc_commission_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserDrawMoneyRes.ProtoReflect.Descriptor instead.
func (*UserDrawMoneyRes) Descriptor() ([]byte, []int) {
	return file_svc_commission_proto_rawDescGZIP(), []int{12}
}

func (x *UserDrawMoneyRes) GetCode() int32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *UserDrawMoneyRes) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

func (x *UserDrawMoneyRes) GetData() *DrawMoneyDetail {
	if x != nil {
		return x.Data
	}
	return nil
}

var File_svc_commission_proto protoreflect.FileDescriptor

var file_svc_commission_proto_rawDesc = []byte{
	0x0a, 0x14, 0x73, 0x76, 0x63, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x07, 0x63, 0x6f, 0x6d, 0x6d, 0x73, 0x70, 0x62, 0x22,
	0x44, 0x0a, 0x10, 0x55, 0x73, 0x65, 0x72, 0x42, 0x69, 0x6e, 0x64, 0x4f, 0x72, 0x64, 0x65, 0x72,
	0x52, 0x65, 0x71, 0x12, 0x16, 0x0a, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x44, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x44, 0x12, 0x18, 0x0a, 0x07, 0x6f,
	0x72, 0x64, 0x65, 0x72, 0x53, 0x4e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6f, 0x72,
	0x64, 0x65, 0x72, 0x53, 0x4e, 0x22, 0x38, 0x0a, 0x10, 0x55, 0x73, 0x65, 0x72, 0x42, 0x69, 0x6e,
	0x64, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x52, 0x65, 0x73, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64,
	0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x10, 0x0a,
	0x03, 0x6d, 0x73, 0x67, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6d, 0x73, 0x67, 0x22,
	0x40, 0x0a, 0x10, 0x55, 0x73, 0x65, 0x72, 0x42, 0x69, 0x6e, 0x64, 0x50, 0x68, 0x6f, 0x6e, 0x65,
	0x52, 0x65, 0x71, 0x12, 0x16, 0x0a, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x44, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x44, 0x12, 0x14, 0x0a, 0x05, 0x70,
	0x68, 0x6f, 0x6e, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x70, 0x68, 0x6f, 0x6e,
	0x65, 0x22, 0x38, 0x0a, 0x10, 0x55, 0x73, 0x65, 0x72, 0x42, 0x69, 0x6e, 0x64, 0x50, 0x68, 0x6f,
	0x6e, 0x65, 0x52, 0x65, 0x73, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x6d, 0x73, 0x67,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6d, 0x73, 0x67, 0x22, 0xa9, 0x02, 0x0a, 0x11,
	0x55, 0x73, 0x65, 0x72, 0x44, 0x69, 0x76, 0x69, 0x64, 0x65, 0x6e, 0x64, 0x4f, 0x72, 0x64, 0x65,
	0x72, 0x12, 0x16, 0x0a, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x44, 0x12, 0x18, 0x0a, 0x07, 0x6f, 0x72, 0x64,
	0x65, 0x72, 0x53, 0x4e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6f, 0x72, 0x64, 0x65,
	0x72, 0x53, 0x4e, 0x12, 0x20, 0x0a, 0x0b, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x53, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0b, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x53,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x20, 0x0a, 0x0b, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x56, 0x65,
	0x6e, 0x64, 0x6f, 0x72, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0b, 0x6f, 0x72, 0x64, 0x65,
	0x72, 0x56, 0x65, 0x6e, 0x64, 0x6f, 0x72, 0x12, 0x1c, 0x0a, 0x09, 0x70, 0x61, 0x79, 0x53, 0x74,
	0x61, 0x75, 0x74, 0x73, 0x18, 0x05, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x70, 0x61, 0x79, 0x53,
	0x74, 0x61, 0x75, 0x74, 0x73, 0x12, 0x1c, 0x0a, 0x09, 0x63, 0x61, 0x73, 0x68, 0x52, 0x65, 0x71,
	0x53, 0x4e, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x63, 0x61, 0x73, 0x68, 0x52, 0x65,
	0x71, 0x53, 0x4e, 0x12, 0x16, 0x0a, 0x06, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x07, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x06, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x20, 0x0a, 0x0b, 0x6f,
	0x72, 0x64, 0x65, 0x72, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x08, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x0b, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x28, 0x0a,
	0x0f, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65,
	0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x43, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x22, 0x2a, 0x0a, 0x10, 0x55, 0x73, 0x65, 0x72, 0x47,
	0x65, 0x74, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x73, 0x52, 0x65, 0x71, 0x12, 0x16, 0x0a, 0x06, 0x75,
	0x73, 0x65, 0x72, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x75, 0x73, 0x65,
	0x72, 0x49, 0x44, 0x22, 0x68, 0x0a, 0x10, 0x55, 0x73, 0x65, 0x72, 0x47, 0x65, 0x74, 0x4f, 0x72,
	0x64, 0x65, 0x72, 0x73, 0x52, 0x65, 0x73, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x6d,
	0x73, 0x67, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6d, 0x73, 0x67, 0x12, 0x2e, 0x0a,
	0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x63, 0x6f,
	0x6d, 0x6d, 0x73, 0x70, 0x62, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x44, 0x69, 0x76, 0x69, 0x64, 0x65,
	0x6e, 0x64, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x22, 0x7b, 0x0a,
	0x07, 0x42, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x12, 0x22, 0x0a, 0x0c, 0x75, 0x6e, 0x6c, 0x69,
	0x71, 0x75, 0x69, 0x64, 0x61, 0x74, 0x65, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x02, 0x52, 0x0c,
	0x75, 0x6e, 0x6c, 0x69, 0x71, 0x75, 0x69, 0x64, 0x61, 0x74, 0x65, 0x64, 0x12, 0x18, 0x0a, 0x07,
	0x70, 0x61, 0x79, 0x61, 0x62, 0x6c, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x02, 0x52, 0x07, 0x70,
	0x61, 0x79, 0x61, 0x62, 0x6c, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x70, 0x72, 0x6f, 0x63, 0x65, 0x73,
	0x73, 0x69, 0x6e, 0x67, 0x18, 0x03, 0x20, 0x01, 0x28, 0x02, 0x52, 0x0a, 0x70, 0x72, 0x6f, 0x63,
	0x65, 0x73, 0x73, 0x69, 0x6e, 0x67, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x61, 0x69, 0x64, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x02, 0x52, 0x04, 0x70, 0x61, 0x69, 0x64, 0x22, 0x2d, 0x0a, 0x13, 0x55, 0x73,
	0x65, 0x72, 0x51, 0x75, 0x65, 0x72, 0x79, 0x42, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x52, 0x65,
	0x71, 0x12, 0x16, 0x0a, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x44, 0x22, 0x61, 0x0a, 0x13, 0x55, 0x73, 0x65,
	0x72, 0x51, 0x75, 0x65, 0x72, 0x79, 0x42, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x52, 0x65, 0x73,
	0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04,
	0x63, 0x6f, 0x64, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x6d, 0x73, 0x67, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x03, 0x6d, 0x73, 0x67, 0x12, 0x24, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x73, 0x70, 0x62, 0x2e, 0x42,
	0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x22, 0x5d, 0x0a, 0x0f,
	0x44, 0x72, 0x61, 0x77, 0x4d, 0x6f, 0x6e, 0x65, 0x79, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x12,
	0x16, 0x0a, 0x06, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x01, 0x52,
	0x06, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x32, 0x0a, 0x06, 0x6f, 0x72, 0x64, 0x65, 0x72,
	0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x73, 0x70,
	0x62, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x44, 0x69, 0x76, 0x69, 0x64, 0x65, 0x6e, 0x64, 0x4f, 0x72,
	0x64, 0x65, 0x72, 0x52, 0x06, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x73, 0x22, 0x40, 0x0a, 0x10, 0x55,
	0x73, 0x65, 0x72, 0x44, 0x72, 0x61, 0x77, 0x4d, 0x6f, 0x6e, 0x65, 0x79, 0x52, 0x65, 0x71, 0x12,
	0x16, 0x0a, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x44, 0x12, 0x14, 0x0a, 0x05, 0x70, 0x68, 0x6f, 0x6e, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x70, 0x68, 0x6f, 0x6e, 0x65, 0x22, 0x66, 0x0a,
	0x10, 0x55, 0x73, 0x65, 0x72, 0x44, 0x72, 0x61, 0x77, 0x4d, 0x6f, 0x6e, 0x65, 0x79, 0x52, 0x65,
	0x73, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x6d, 0x73, 0x67, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x03, 0x6d, 0x73, 0x67, 0x12, 0x2c, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x73, 0x70, 0x62, 0x2e,
	0x44, 0x72, 0x61, 0x77, 0x4d, 0x6f, 0x6e, 0x65, 0x79, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x52,
	0x04, 0x64, 0x61, 0x74, 0x61, 0x32, 0xc4, 0x02, 0x0a, 0x11, 0x43, 0x6f, 0x6d, 0x6d, 0x69, 0x73,
	0x73, 0x69, 0x6f, 0x6e, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x47, 0x0a, 0x0d, 0x55,
	0x73, 0x65, 0x72, 0x42, 0x69, 0x6e, 0x64, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x12, 0x19, 0x2e, 0x63,
	0x6f, 0x6d, 0x6d, 0x73, 0x70, 0x62, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x42, 0x69, 0x6e, 0x64, 0x4f,
	0x72, 0x64, 0x65, 0x72, 0x52, 0x65, 0x71, 0x1a, 0x19, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x73, 0x70,
	0x62, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x42, 0x69, 0x6e, 0x64, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x52,
	0x65, 0x73, 0x22, 0x00, 0x12, 0x47, 0x0a, 0x0d, 0x55, 0x73, 0x65, 0x72, 0x42, 0x69, 0x6e, 0x64,
	0x50, 0x68, 0x6f, 0x6e, 0x65, 0x12, 0x19, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x73, 0x70, 0x62, 0x2e,
	0x55, 0x73, 0x65, 0x72, 0x42, 0x69, 0x6e, 0x64, 0x50, 0x68, 0x6f, 0x6e, 0x65, 0x52, 0x65, 0x71,
	0x1a, 0x19, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x73, 0x70, 0x62, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x42,
	0x69, 0x6e, 0x64, 0x50, 0x68, 0x6f, 0x6e, 0x65, 0x52, 0x65, 0x73, 0x22, 0x00, 0x12, 0x50, 0x0a,
	0x10, 0x55, 0x73, 0x65, 0x72, 0x51, 0x75, 0x65, 0x72, 0x79, 0x42, 0x61, 0x6c, 0x61, 0x6e, 0x63,
	0x65, 0x12, 0x1c, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x73, 0x70, 0x62, 0x2e, 0x55, 0x73, 0x65, 0x72,
	0x51, 0x75, 0x65, 0x72, 0x79, 0x42, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x52, 0x65, 0x71, 0x1a,
	0x1c, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x73, 0x70, 0x62, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x51, 0x75,
	0x65, 0x72, 0x79, 0x42, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x52, 0x65, 0x73, 0x22, 0x00, 0x12,
	0x4b, 0x0a, 0x11, 0x55, 0x73, 0x65, 0x72, 0x57, 0x69, 0x74, 0x68, 0x64, 0x72, 0x61, 0x77, 0x4d,
	0x6f, 0x6e, 0x65, 0x79, 0x12, 0x19, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x73, 0x70, 0x62, 0x2e, 0x55,
	0x73, 0x65, 0x72, 0x44, 0x72, 0x61, 0x77, 0x4d, 0x6f, 0x6e, 0x65, 0x79, 0x52, 0x65, 0x71, 0x1a,
	0x19, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x73, 0x70, 0x62, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x44, 0x72,
	0x61, 0x77, 0x4d, 0x6f, 0x6e, 0x65, 0x79, 0x52, 0x65, 0x71, 0x22, 0x00, 0x42, 0x0a, 0x5a, 0x08,
	0x2f, 0x63, 0x6f, 0x6d, 0x6d, 0x73, 0x70, 0x62, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_svc_commission_proto_rawDescOnce sync.Once
	file_svc_commission_proto_rawDescData = file_svc_commission_proto_rawDesc
)

func file_svc_commission_proto_rawDescGZIP() []byte {
	file_svc_commission_proto_rawDescOnce.Do(func() {
		file_svc_commission_proto_rawDescData = protoimpl.X.CompressGZIP(file_svc_commission_proto_rawDescData)
	})
	return file_svc_commission_proto_rawDescData
}

var file_svc_commission_proto_msgTypes = make([]protoimpl.MessageInfo, 13)
var file_svc_commission_proto_goTypes = []interface{}{
	(*UserBindOrderReq)(nil),    // 0: commspb.UserBindOrderReq
	(*UserBindOrderRes)(nil),    // 1: commspb.UserBindOrderRes
	(*UserBindPhoneReq)(nil),    // 2: commspb.UserBindPhoneReq
	(*UserBindPhoneRes)(nil),    // 3: commspb.UserBindPhoneRes
	(*UserDividendOrder)(nil),   // 4: commspb.UserDividendOrder
	(*UserGetOrdersReq)(nil),    // 5: commspb.UserGetOrdersReq
	(*UserGetOrdersRes)(nil),    // 6: commspb.UserGetOrdersRes
	(*Balance)(nil),             // 7: commspb.Balance
	(*UserQueryBalanceReq)(nil), // 8: commspb.UserQueryBalanceReq
	(*UserQueryBalanceRes)(nil), // 9: commspb.UserQueryBalanceRes
	(*DrawMoneyDetail)(nil),     // 10: commspb.DrawMoneyDetail
	(*UserDrawMoneyReq)(nil),    // 11: commspb.UserDrawMoneyReq
	(*UserDrawMoneyRes)(nil),    // 12: commspb.UserDrawMoneyRes
}
var file_svc_commission_proto_depIdxs = []int32{
	4,  // 0: commspb.UserGetOrdersRes.data:type_name -> commspb.UserDividendOrder
	7,  // 1: commspb.UserQueryBalanceRes.data:type_name -> commspb.Balance
	4,  // 2: commspb.DrawMoneyDetail.orders:type_name -> commspb.UserDividendOrder
	10, // 3: commspb.UserDrawMoneyRes.data:type_name -> commspb.DrawMoneyDetail
	0,  // 4: commspb.CommissionService.UserBindOrder:input_type -> commspb.UserBindOrderReq
	2,  // 5: commspb.CommissionService.UserBindPhone:input_type -> commspb.UserBindPhoneReq
	8,  // 6: commspb.CommissionService.UserQueryBalance:input_type -> commspb.UserQueryBalanceReq
	11, // 7: commspb.CommissionService.UserWithdrawMoney:input_type -> commspb.UserDrawMoneyReq
	1,  // 8: commspb.CommissionService.UserBindOrder:output_type -> commspb.UserBindOrderRes
	3,  // 9: commspb.CommissionService.UserBindPhone:output_type -> commspb.UserBindPhoneRes
	9,  // 10: commspb.CommissionService.UserQueryBalance:output_type -> commspb.UserQueryBalanceRes
	11, // 11: commspb.CommissionService.UserWithdrawMoney:output_type -> commspb.UserDrawMoneyReq
	8,  // [8:12] is the sub-list for method output_type
	4,  // [4:8] is the sub-list for method input_type
	4,  // [4:4] is the sub-list for extension type_name
	4,  // [4:4] is the sub-list for extension extendee
	0,  // [0:4] is the sub-list for field type_name
}

func init() { file_svc_commission_proto_init() }
func file_svc_commission_proto_init() {
	if File_svc_commission_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_svc_commission_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UserBindOrderReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_svc_commission_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UserBindOrderRes); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_svc_commission_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UserBindPhoneReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_svc_commission_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UserBindPhoneRes); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_svc_commission_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UserDividendOrder); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_svc_commission_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UserGetOrdersReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_svc_commission_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UserGetOrdersRes); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_svc_commission_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Balance); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_svc_commission_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UserQueryBalanceReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_svc_commission_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UserQueryBalanceRes); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_svc_commission_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DrawMoneyDetail); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_svc_commission_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UserDrawMoneyReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_svc_commission_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UserDrawMoneyRes); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_svc_commission_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   13,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_svc_commission_proto_goTypes,
		DependencyIndexes: file_svc_commission_proto_depIdxs,
		MessageInfos:      file_svc_commission_proto_msgTypes,
	}.Build()
	File_svc_commission_proto = out.File
	file_svc_commission_proto_rawDesc = nil
	file_svc_commission_proto_goTypes = nil
	file_svc_commission_proto_depIdxs = nil
}
