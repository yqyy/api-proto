// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.26.0
// 	protoc        v3.15.8
// source: api.tb.ddx.proto

package tbpb

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type SmallImages struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	String_ []string `protobuf:"bytes,1,rep,name=string,proto3" json:"string,omitempty"`
}

func (x *SmallImages) Reset() {
	*x = SmallImages{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_tb_ddx_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SmallImages) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SmallImages) ProtoMessage() {}

func (x *SmallImages) ProtoReflect() protoreflect.Message {
	mi := &file_api_tb_ddx_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SmallImages.ProtoReflect.Descriptor instead.
func (*SmallImages) Descriptor() ([]byte, []int) {
	return file_api_tb_ddx_proto_rawDescGZIP(), []int{0}
}

func (x *SmallImages) GetString_() []string {
	if x != nil {
		return x.String_
	}
	return nil
}

type GoodsDetail struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CategoryId             uint64       `protobuf:"varint,1,opt,name=category_id,json=categoryId,proto3" json:"category_id,omitempty"`
	CategoryName           string       `protobuf:"bytes,2,opt,name=category_name,json=categoryName,proto3" json:"category_name,omitempty"`
	CommissionRate         string       `protobuf:"bytes,3,opt,name=commission_rate,json=commissionRate,proto3" json:"commission_rate,omitempty"`
	CommissionType         string       `protobuf:"bytes,4,opt,name=commission_type,json=commissionType,proto3" json:"commission_type,omitempty"`
	CouponAmount           string       `protobuf:"bytes,5,opt,name=coupon_amount,json=couponAmount,proto3" json:"coupon_amount,omitempty"`
	CouponEndTime          string       `protobuf:"bytes,6,opt,name=coupon_end_time,json=couponEndTime,proto3" json:"coupon_end_time,omitempty"`
	CouponId               string       `protobuf:"bytes,7,opt,name=coupon_id,json=couponId,proto3" json:"coupon_id,omitempty"`
	CouponInfo             string       `protobuf:"bytes,8,opt,name=coupon_info,json=couponInfo,proto3" json:"coupon_info,omitempty"`
	CouponRemainCount      int32        `protobuf:"varint,9,opt,name=coupon_remain_count,json=couponRemainCount,proto3" json:"coupon_remain_count,omitempty"`
	CouponShareUrl         string       `protobuf:"bytes,10,opt,name=coupon_share_url,json=couponShareUrl,proto3" json:"coupon_share_url,omitempty"`
	CouponStartFee         string       `protobuf:"bytes,11,opt,name=coupon_start_fee,json=couponStartFee,proto3" json:"coupon_start_fee,omitempty"`
	CouponStartTime        string       `protobuf:"bytes,12,opt,name=coupon_start_time,json=couponStartTime,proto3" json:"coupon_start_time,omitempty"`
	CouponTotalCount       int32        `protobuf:"varint,13,opt,name=coupon_total_count,json=couponTotalCount,proto3" json:"coupon_total_count,omitempty"`
	IncludeDxjh            string       `protobuf:"bytes,14,opt,name=include_dxjh,json=includeDxjh,proto3" json:"include_dxjh,omitempty"`
	IncludeMkt             string       `protobuf:"bytes,15,opt,name=include_mkt,json=includeMkt,proto3" json:"include_mkt,omitempty"`
	InfoDxjh               string       `protobuf:"bytes,16,opt,name=info_dxjh,json=infoDxjh,proto3" json:"info_dxjh,omitempty"`
	ItemDescription        string       `protobuf:"bytes,17,opt,name=item_description,json=itemDescription,proto3" json:"item_description,omitempty"`
	ItemId                 uint64       `protobuf:"varint,18,opt,name=item_id,json=itemId,proto3" json:"item_id,omitempty"`
	ItemUrl                string       `protobuf:"bytes,19,opt,name=item_url,json=itemUrl,proto3" json:"item_url,omitempty"`
	LevelOneCategoryId     uint64       `protobuf:"varint,20,opt,name=level_one_category_id,json=levelOneCategoryId,proto3" json:"level_one_category_id,omitempty"`
	LevelOneCategoryName   string       `protobuf:"bytes,21,opt,name=level_one_category_name,json=levelOneCategoryName,proto3" json:"level_one_category_name,omitempty"`
	Nick                   string       `protobuf:"bytes,22,opt,name=nick,proto3" json:"nick,omitempty"`
	NumIid                 uint64       `protobuf:"varint,23,opt,name=num_iid,json=numIid,proto3" json:"num_iid,omitempty"`
	PictUrl                string       `protobuf:"bytes,24,opt,name=pict_url,json=pictUrl,proto3" json:"pict_url,omitempty"`
	PresaleDeposit         string       `protobuf:"bytes,25,opt,name=presale_deposit,json=presaleDeposit,proto3" json:"presale_deposit,omitempty"`
	PresaleEndTime         uint64       `protobuf:"varint,26,opt,name=presale_end_time,json=presaleEndTime,proto3" json:"presale_end_time,omitempty"`
	PresaleStartTime       uint64       `protobuf:"varint,27,opt,name=presale_start_time,json=presaleStartTime,proto3" json:"presale_start_time,omitempty"`
	PresaleTailEndTime     uint64       `protobuf:"varint,28,opt,name=presale_tail_end_time,json=presaleTailEndTime,proto3" json:"presale_tail_end_time,omitempty"`
	PresaleTailStartTime   uint64       `protobuf:"varint,29,opt,name=presale_tail_start_time,json=presaleTailStartTime,proto3" json:"presale_tail_start_time,omitempty"`
	PresaleDiscountFeeText string       `protobuf:"bytes,30,opt,name=presale_discount_fee_text,json=presaleDiscountFeeText,proto3" json:"presale_discount_fee_text,omitempty"`
	Provcity               string       `protobuf:"bytes,31,opt,name=provcity,proto3" json:"provcity,omitempty"`
	RealPostFee            string       `protobuf:"bytes,32,opt,name=real_post_fee,json=realPostFee,proto3" json:"real_post_fee,omitempty"`
	ReservePrice           string       `protobuf:"bytes,33,opt,name=reserve_price,json=reservePrice,proto3" json:"reserve_price,omitempty"`
	SellerId               uint64       `protobuf:"varint,34,opt,name=seller_id,json=sellerId,proto3" json:"seller_id,omitempty"`
	ShopDsr                uint64       `protobuf:"varint,35,opt,name=shop_dsr,json=shopDsr,proto3" json:"shop_dsr,omitempty"`
	ShortTitle             string       `protobuf:"bytes,36,opt,name=short_title,json=shortTitle,proto3" json:"short_title,omitempty"`
	SmallImages            *SmallImages `protobuf:"bytes,37,opt,name=small_images,json=smallImages,proto3" json:"small_images,omitempty"`
	SuperiorBrand          string       `protobuf:"bytes,38,opt,name=superior_brand,json=superiorBrand,proto3" json:"superior_brand,omitempty"`
	Title                  string       `protobuf:"bytes,39,opt,name=title,proto3" json:"title,omitempty"`
	TkTotalCommi           string       `protobuf:"bytes,40,opt,name=tk_total_commi,json=tkTotalCommi,proto3" json:"tk_total_commi,omitempty"`
	TkTotalSales           string       `protobuf:"bytes,41,opt,name=tk_total_sales,json=tkTotalSales,proto3" json:"tk_total_sales,omitempty"`
	Url                    string       `protobuf:"bytes,42,opt,name=url,proto3" json:"url,omitempty"`
	UserType               int32        `protobuf:"varint,43,opt,name=user_type,json=userType,proto3" json:"user_type,omitempty"`
	Volume                 int32        `protobuf:"varint,44,opt,name=volume,proto3" json:"volume,omitempty"`
	WhiteImage             string       `protobuf:"bytes,45,opt,name=white_image,json=whiteImage,proto3" json:"white_image,omitempty"`
	XId                    string       `protobuf:"bytes,46,opt,name=x_id,json=xId,proto3" json:"x_id,omitempty"`
	ZkFinalPrice           string       `protobuf:"bytes,47,opt,name=zk_final_price,json=zkFinalPrice,proto3" json:"zk_final_price,omitempty"`
	ShopTitle              string       `protobuf:"bytes,48,opt,name=shop_title,json=shopTitle,proto3" json:"shop_title,omitempty"`
	Oetime                 string       `protobuf:"bytes,49,opt,name=oetime,proto3" json:"oetime,omitempty"`
	Ostime                 string       `protobuf:"bytes,50,opt,name=ostime,proto3" json:"ostime,omitempty"`
	JddNum                 int32        `protobuf:"varint,51,opt,name=jdd_num,json=jddNum,proto3" json:"jdd_num,omitempty"`
	JddPrice               string       `protobuf:"bytes,52,opt,name=jdd_price,json=jddPrice,proto3" json:"jdd_price,omitempty"`
	Coupon                 string       `protobuf:"bytes,53,opt,name=coupon,proto3" json:"coupon,omitempty"`
	UvSumPreSale           string       `protobuf:"bytes,54,opt,name=uv_sum_pre_sale,json=uvSumPreSale,proto3" json:"uv_sum_pre_sale,omitempty"`
	OrigPrice              string       `protobuf:"bytes,55,opt,name=orig_price,json=origPrice,proto3" json:"orig_price,omitempty"`
	TotalStock             int32        `protobuf:"varint,56,opt,name=total_stock,json=totalStock,proto3" json:"total_stock,omitempty"`
	SellNum                int32        `protobuf:"varint,57,opt,name=sell_num,json=sellNum,proto3" json:"sell_num,omitempty"`
	Stock                  int32        `protobuf:"varint,58,opt,name=stock,proto3" json:"stock,omitempty"`
	TmallPlayActivityInfo  string       `protobuf:"bytes,59,opt,name=tmall_play_activity_info,json=tmallPlayActivityInfo,proto3" json:"tmall_play_activity_info,omitempty"`
	LockRateEndTime        uint64       `protobuf:"varint,60,opt,name=lock_rate_end_time,json=lockRateEndTime,proto3" json:"lock_rate_end_time,omitempty"`
	LockRateStartTime      uint64       `protobuf:"varint,61,opt,name=lock_rate_start_time,json=lockRateStartTime,proto3" json:"lock_rate_start_time,omitempty"`
	LockRate               string       `protobuf:"bytes,62,opt,name=lock_rate,json=lockRate,proto3" json:"lock_rate,omitempty"`
	YsylTljSendTime        string       `protobuf:"bytes,63,opt,name=ysyl_tlj_send_time,json=ysylTljSendTime,proto3" json:"ysyl_tlj_send_time,omitempty"`
	YsylClickUrl           string       `protobuf:"bytes,64,opt,name=ysyl_click_url,json=ysylClickUrl,proto3" json:"ysyl_click_url,omitempty"`
	YsylCommissionRate     string       `protobuf:"bytes,65,opt,name=ysyl_commission_rate,json=ysylCommissionRate,proto3" json:"ysyl_commission_rate,omitempty"`
	YsylTljFace            string       `protobuf:"bytes,66,opt,name=ysyl_tlj_face,json=ysylTljFace,proto3" json:"ysyl_tlj_face,omitempty"`
	YsylTljUseEndTime      string       `protobuf:"bytes,67,opt,name=ysyl_tlj_use_end_time,json=ysylTljUseEndTime,proto3" json:"ysyl_tlj_use_end_time,omitempty"`
	YsylTljUseStartTime    string       `protobuf:"bytes,68,opt,name=ysyl_tlj_use_start_time,json=ysylTljUseStartTime,proto3" json:"ysyl_tlj_use_start_time,omitempty"`
	SalePrice              string       `protobuf:"bytes,69,opt,name=sale_price,json=salePrice,proto3" json:"sale_price,omitempty"`
	KuadianPromotionInfo   string       `protobuf:"bytes,70,opt,name=kuadian_promotion_info,json=kuadianPromotionInfo,proto3" json:"kuadian_promotion_info,omitempty"`
	CommiScore             string       `protobuf:"bytes,71,opt,name=commi_score,json=commiScore,proto3" json:"commi_score,omitempty"`
	MatchScore             string       `protobuf:"bytes,72,opt,name=match_score,json=matchScore,proto3" json:"match_score,omitempty"`
}

func (x *GoodsDetail) Reset() {
	*x = GoodsDetail{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_tb_ddx_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GoodsDetail) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GoodsDetail) ProtoMessage() {}

func (x *GoodsDetail) ProtoReflect() protoreflect.Message {
	mi := &file_api_tb_ddx_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GoodsDetail.ProtoReflect.Descriptor instead.
func (*GoodsDetail) Descriptor() ([]byte, []int) {
	return file_api_tb_ddx_proto_rawDescGZIP(), []int{1}
}

func (x *GoodsDetail) GetCategoryId() uint64 {
	if x != nil {
		return x.CategoryId
	}
	return 0
}

func (x *GoodsDetail) GetCategoryName() string {
	if x != nil {
		return x.CategoryName
	}
	return ""
}

func (x *GoodsDetail) GetCommissionRate() string {
	if x != nil {
		return x.CommissionRate
	}
	return ""
}

func (x *GoodsDetail) GetCommissionType() string {
	if x != nil {
		return x.CommissionType
	}
	return ""
}

func (x *GoodsDetail) GetCouponAmount() string {
	if x != nil {
		return x.CouponAmount
	}
	return ""
}

func (x *GoodsDetail) GetCouponEndTime() string {
	if x != nil {
		return x.CouponEndTime
	}
	return ""
}

func (x *GoodsDetail) GetCouponId() string {
	if x != nil {
		return x.CouponId
	}
	return ""
}

func (x *GoodsDetail) GetCouponInfo() string {
	if x != nil {
		return x.CouponInfo
	}
	return ""
}

func (x *GoodsDetail) GetCouponRemainCount() int32 {
	if x != nil {
		return x.CouponRemainCount
	}
	return 0
}

func (x *GoodsDetail) GetCouponShareUrl() string {
	if x != nil {
		return x.CouponShareUrl
	}
	return ""
}

func (x *GoodsDetail) GetCouponStartFee() string {
	if x != nil {
		return x.CouponStartFee
	}
	return ""
}

func (x *GoodsDetail) GetCouponStartTime() string {
	if x != nil {
		return x.CouponStartTime
	}
	return ""
}

func (x *GoodsDetail) GetCouponTotalCount() int32 {
	if x != nil {
		return x.CouponTotalCount
	}
	return 0
}

func (x *GoodsDetail) GetIncludeDxjh() string {
	if x != nil {
		return x.IncludeDxjh
	}
	return ""
}

func (x *GoodsDetail) GetIncludeMkt() string {
	if x != nil {
		return x.IncludeMkt
	}
	return ""
}

func (x *GoodsDetail) GetInfoDxjh() string {
	if x != nil {
		return x.InfoDxjh
	}
	return ""
}

func (x *GoodsDetail) GetItemDescription() string {
	if x != nil {
		return x.ItemDescription
	}
	return ""
}

func (x *GoodsDetail) GetItemId() uint64 {
	if x != nil {
		return x.ItemId
	}
	return 0
}

func (x *GoodsDetail) GetItemUrl() string {
	if x != nil {
		return x.ItemUrl
	}
	return ""
}

func (x *GoodsDetail) GetLevelOneCategoryId() uint64 {
	if x != nil {
		return x.LevelOneCategoryId
	}
	return 0
}

func (x *GoodsDetail) GetLevelOneCategoryName() string {
	if x != nil {
		return x.LevelOneCategoryName
	}
	return ""
}

func (x *GoodsDetail) GetNick() string {
	if x != nil {
		return x.Nick
	}
	return ""
}

func (x *GoodsDetail) GetNumIid() uint64 {
	if x != nil {
		return x.NumIid
	}
	return 0
}

func (x *GoodsDetail) GetPictUrl() string {
	if x != nil {
		return x.PictUrl
	}
	return ""
}

func (x *GoodsDetail) GetPresaleDeposit() string {
	if x != nil {
		return x.PresaleDeposit
	}
	return ""
}

func (x *GoodsDetail) GetPresaleEndTime() uint64 {
	if x != nil {
		return x.PresaleEndTime
	}
	return 0
}

func (x *GoodsDetail) GetPresaleStartTime() uint64 {
	if x != nil {
		return x.PresaleStartTime
	}
	return 0
}

func (x *GoodsDetail) GetPresaleTailEndTime() uint64 {
	if x != nil {
		return x.PresaleTailEndTime
	}
	return 0
}

func (x *GoodsDetail) GetPresaleTailStartTime() uint64 {
	if x != nil {
		return x.PresaleTailStartTime
	}
	return 0
}

func (x *GoodsDetail) GetPresaleDiscountFeeText() string {
	if x != nil {
		return x.PresaleDiscountFeeText
	}
	return ""
}

func (x *GoodsDetail) GetProvcity() string {
	if x != nil {
		return x.Provcity
	}
	return ""
}

func (x *GoodsDetail) GetRealPostFee() string {
	if x != nil {
		return x.RealPostFee
	}
	return ""
}

func (x *GoodsDetail) GetReservePrice() string {
	if x != nil {
		return x.ReservePrice
	}
	return ""
}

func (x *GoodsDetail) GetSellerId() uint64 {
	if x != nil {
		return x.SellerId
	}
	return 0
}

func (x *GoodsDetail) GetShopDsr() uint64 {
	if x != nil {
		return x.ShopDsr
	}
	return 0
}

func (x *GoodsDetail) GetShortTitle() string {
	if x != nil {
		return x.ShortTitle
	}
	return ""
}

func (x *GoodsDetail) GetSmallImages() *SmallImages {
	if x != nil {
		return x.SmallImages
	}
	return nil
}

func (x *GoodsDetail) GetSuperiorBrand() string {
	if x != nil {
		return x.SuperiorBrand
	}
	return ""
}

func (x *GoodsDetail) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *GoodsDetail) GetTkTotalCommi() string {
	if x != nil {
		return x.TkTotalCommi
	}
	return ""
}

func (x *GoodsDetail) GetTkTotalSales() string {
	if x != nil {
		return x.TkTotalSales
	}
	return ""
}

func (x *GoodsDetail) GetUrl() string {
	if x != nil {
		return x.Url
	}
	return ""
}

func (x *GoodsDetail) GetUserType() int32 {
	if x != nil {
		return x.UserType
	}
	return 0
}

func (x *GoodsDetail) GetVolume() int32 {
	if x != nil {
		return x.Volume
	}
	return 0
}

func (x *GoodsDetail) GetWhiteImage() string {
	if x != nil {
		return x.WhiteImage
	}
	return ""
}

func (x *GoodsDetail) GetXId() string {
	if x != nil {
		return x.XId
	}
	return ""
}

func (x *GoodsDetail) GetZkFinalPrice() string {
	if x != nil {
		return x.ZkFinalPrice
	}
	return ""
}

func (x *GoodsDetail) GetShopTitle() string {
	if x != nil {
		return x.ShopTitle
	}
	return ""
}

func (x *GoodsDetail) GetOetime() string {
	if x != nil {
		return x.Oetime
	}
	return ""
}

func (x *GoodsDetail) GetOstime() string {
	if x != nil {
		return x.Ostime
	}
	return ""
}

func (x *GoodsDetail) GetJddNum() int32 {
	if x != nil {
		return x.JddNum
	}
	return 0
}

func (x *GoodsDetail) GetJddPrice() string {
	if x != nil {
		return x.JddPrice
	}
	return ""
}

func (x *GoodsDetail) GetCoupon() string {
	if x != nil {
		return x.Coupon
	}
	return ""
}

func (x *GoodsDetail) GetUvSumPreSale() string {
	if x != nil {
		return x.UvSumPreSale
	}
	return ""
}

func (x *GoodsDetail) GetOrigPrice() string {
	if x != nil {
		return x.OrigPrice
	}
	return ""
}

func (x *GoodsDetail) GetTotalStock() int32 {
	if x != nil {
		return x.TotalStock
	}
	return 0
}

func (x *GoodsDetail) GetSellNum() int32 {
	if x != nil {
		return x.SellNum
	}
	return 0
}

func (x *GoodsDetail) GetStock() int32 {
	if x != nil {
		return x.Stock
	}
	return 0
}

func (x *GoodsDetail) GetTmallPlayActivityInfo() string {
	if x != nil {
		return x.TmallPlayActivityInfo
	}
	return ""
}

func (x *GoodsDetail) GetLockRateEndTime() uint64 {
	if x != nil {
		return x.LockRateEndTime
	}
	return 0
}

func (x *GoodsDetail) GetLockRateStartTime() uint64 {
	if x != nil {
		return x.LockRateStartTime
	}
	return 0
}

func (x *GoodsDetail) GetLockRate() string {
	if x != nil {
		return x.LockRate
	}
	return ""
}

func (x *GoodsDetail) GetYsylTljSendTime() string {
	if x != nil {
		return x.YsylTljSendTime
	}
	return ""
}

func (x *GoodsDetail) GetYsylClickUrl() string {
	if x != nil {
		return x.YsylClickUrl
	}
	return ""
}

func (x *GoodsDetail) GetYsylCommissionRate() string {
	if x != nil {
		return x.YsylCommissionRate
	}
	return ""
}

func (x *GoodsDetail) GetYsylTljFace() string {
	if x != nil {
		return x.YsylTljFace
	}
	return ""
}

func (x *GoodsDetail) GetYsylTljUseEndTime() string {
	if x != nil {
		return x.YsylTljUseEndTime
	}
	return ""
}

func (x *GoodsDetail) GetYsylTljUseStartTime() string {
	if x != nil {
		return x.YsylTljUseStartTime
	}
	return ""
}

func (x *GoodsDetail) GetSalePrice() string {
	if x != nil {
		return x.SalePrice
	}
	return ""
}

func (x *GoodsDetail) GetKuadianPromotionInfo() string {
	if x != nil {
		return x.KuadianPromotionInfo
	}
	return ""
}

func (x *GoodsDetail) GetCommiScore() string {
	if x != nil {
		return x.CommiScore
	}
	return ""
}

func (x *GoodsDetail) GetMatchScore() string {
	if x != nil {
		return x.MatchScore
	}
	return ""
}

type SearchGoodsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Keyword           string  `protobuf:"bytes,1,opt,name=keyword,proto3" json:"keyword,omitempty"`
	Category          *string `protobuf:"bytes,2,opt,name=category,proto3,oneof" json:"category,omitempty"`
	HasCoupon         *bool   `protobuf:"varint,3,opt,name=has_coupon,json=hasCoupon,proto3,oneof" json:"has_coupon,omitempty"`
	Sort              *string `protobuf:"bytes,4,opt,name=sort,proto3,oneof" json:"sort,omitempty"`
	Platform          *string `protobuf:"bytes,5,opt,name=platform,proto3,oneof" json:"platform,omitempty"`
	PageSize          *int32  `protobuf:"varint,6,opt,name=page_size,json=pageSize,proto3,oneof" json:"page_size,omitempty"`
	PageNo            *int32  `protobuf:"varint,7,opt,name=page_no,json=pageNo,proto3,oneof" json:"page_no,omitempty"`
	StartDsr          *int32  `protobuf:"varint,8,opt,name=start_dsr,json=startDsr,proto3,oneof" json:"start_dsr,omitempty"`
	EndTkRate         *int32  `protobuf:"varint,9,opt,name=end_tk_rate,json=endTkRate,proto3,oneof" json:"end_tk_rate,omitempty"`
	StartTkRate       *int32  `protobuf:"varint,10,opt,name=start_tk_rate,json=startTkRate,proto3,oneof" json:"start_tk_rate,omitempty"`
	EndPrice          *int32  `protobuf:"varint,11,opt,name=end_price,json=endPrice,proto3,oneof" json:"end_price,omitempty"`
	StartPrice        *int32  `protobuf:"varint,12,opt,name=start_price,json=startPrice,proto3,oneof" json:"start_price,omitempty"`
	IsOverseas        *bool   `protobuf:"varint,13,opt,name=is_overseas,json=isOverseas,proto3,oneof" json:"is_overseas,omitempty"`
	IsTmall           *bool   `protobuf:"varint,14,opt,name=is_tmall,json=isTmall,proto3,oneof" json:"is_tmall,omitempty"`
	ItemLoc           *string `protobuf:"bytes,15,opt,name=item_loc,json=itemLoc,proto3,oneof" json:"item_loc,omitempty"`
	MaterialId        *int32  `protobuf:"varint,16,opt,name=material_id,json=materialId,proto3,oneof" json:"material_id,omitempty"`
	Ip                *string `protobuf:"bytes,17,opt,name=ip,proto3,oneof" json:"ip,omitempty"`
	IncludeRfdRate    *bool   `protobuf:"varint,18,opt,name=include_rfd_rate,json=includeRfdRate,proto3,oneof" json:"include_rfd_rate,omitempty"`
	IncludeGoodRate   *bool   `protobuf:"varint,19,opt,name=include_good_rate,json=includeGoodRate,proto3,oneof" json:"include_good_rate,omitempty"`
	IncludePayRate    *bool   `protobuf:"varint,20,opt,name=include_pay_rate,json=includePayRate,proto3,oneof" json:"include_pay_rate,omitempty"`
	NeedPrepay        *bool   `protobuf:"varint,21,opt,name=need_prepay,json=needPrepay,proto3,oneof" json:"need_prepay,omitempty"`
	NeedFreeShipment  *bool   `protobuf:"varint,22,opt,name=need_free_shipment,json=needFreeShipment,proto3,oneof" json:"need_free_shipment,omitempty"`
	NpxLevel          *int32  `protobuf:"varint,23,opt,name=npx_level,json=npxLevel,proto3,oneof" json:"npx_level,omitempty"`
	EndKaTkRate       *int32  `protobuf:"varint,24,opt,name=end_ka_tk_rate,json=endKaTkRate,proto3,oneof" json:"end_ka_tk_rate,omitempty"`
	StartKaTkRate     *int32  `protobuf:"varint,25,opt,name=start_ka_tk_rate,json=startKaTkRate,proto3,oneof" json:"start_ka_tk_rate,omitempty"`
	LockRateEndTime   *uint64 `protobuf:"varint,26,opt,name=lock_rate_end_time,json=lockRateEndTime,proto3,oneof" json:"lock_rate_end_time,omitempty"`
	LockRateStartTime *uint64 `protobuf:"varint,27,opt,name=lock_rate_start_time,json=lockRateStartTime,proto3,oneof" json:"lock_rate_start_time,omitempty"`
	RelationId        *string `protobuf:"bytes,28,opt,name=relation_id,json=relationId,proto3,oneof" json:"relation_id,omitempty"`
	SpecialId         *string `protobuf:"bytes,29,opt,name=special_id,json=specialId,proto3,oneof" json:"special_id,omitempty"`
}

func (x *SearchGoodsRequest) Reset() {
	*x = SearchGoodsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_tb_ddx_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SearchGoodsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SearchGoodsRequest) ProtoMessage() {}

func (x *SearchGoodsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_tb_ddx_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SearchGoodsRequest.ProtoReflect.Descriptor instead.
func (*SearchGoodsRequest) Descriptor() ([]byte, []int) {
	return file_api_tb_ddx_proto_rawDescGZIP(), []int{2}
}

func (x *SearchGoodsRequest) GetKeyword() string {
	if x != nil {
		return x.Keyword
	}
	return ""
}

func (x *SearchGoodsRequest) GetCategory() string {
	if x != nil && x.Category != nil {
		return *x.Category
	}
	return ""
}

func (x *SearchGoodsRequest) GetHasCoupon() bool {
	if x != nil && x.HasCoupon != nil {
		return *x.HasCoupon
	}
	return false
}

func (x *SearchGoodsRequest) GetSort() string {
	if x != nil && x.Sort != nil {
		return *x.Sort
	}
	return ""
}

func (x *SearchGoodsRequest) GetPlatform() string {
	if x != nil && x.Platform != nil {
		return *x.Platform
	}
	return ""
}

func (x *SearchGoodsRequest) GetPageSize() int32 {
	if x != nil && x.PageSize != nil {
		return *x.PageSize
	}
	return 0
}

func (x *SearchGoodsRequest) GetPageNo() int32 {
	if x != nil && x.PageNo != nil {
		return *x.PageNo
	}
	return 0
}

func (x *SearchGoodsRequest) GetStartDsr() int32 {
	if x != nil && x.StartDsr != nil {
		return *x.StartDsr
	}
	return 0
}

func (x *SearchGoodsRequest) GetEndTkRate() int32 {
	if x != nil && x.EndTkRate != nil {
		return *x.EndTkRate
	}
	return 0
}

func (x *SearchGoodsRequest) GetStartTkRate() int32 {
	if x != nil && x.StartTkRate != nil {
		return *x.StartTkRate
	}
	return 0
}

func (x *SearchGoodsRequest) GetEndPrice() int32 {
	if x != nil && x.EndPrice != nil {
		return *x.EndPrice
	}
	return 0
}

func (x *SearchGoodsRequest) GetStartPrice() int32 {
	if x != nil && x.StartPrice != nil {
		return *x.StartPrice
	}
	return 0
}

func (x *SearchGoodsRequest) GetIsOverseas() bool {
	if x != nil && x.IsOverseas != nil {
		return *x.IsOverseas
	}
	return false
}

func (x *SearchGoodsRequest) GetIsTmall() bool {
	if x != nil && x.IsTmall != nil {
		return *x.IsTmall
	}
	return false
}

func (x *SearchGoodsRequest) GetItemLoc() string {
	if x != nil && x.ItemLoc != nil {
		return *x.ItemLoc
	}
	return ""
}

func (x *SearchGoodsRequest) GetMaterialId() int32 {
	if x != nil && x.MaterialId != nil {
		return *x.MaterialId
	}
	return 0
}

func (x *SearchGoodsRequest) GetIp() string {
	if x != nil && x.Ip != nil {
		return *x.Ip
	}
	return ""
}

func (x *SearchGoodsRequest) GetIncludeRfdRate() bool {
	if x != nil && x.IncludeRfdRate != nil {
		return *x.IncludeRfdRate
	}
	return false
}

func (x *SearchGoodsRequest) GetIncludeGoodRate() bool {
	if x != nil && x.IncludeGoodRate != nil {
		return *x.IncludeGoodRate
	}
	return false
}

func (x *SearchGoodsRequest) GetIncludePayRate() bool {
	if x != nil && x.IncludePayRate != nil {
		return *x.IncludePayRate
	}
	return false
}

func (x *SearchGoodsRequest) GetNeedPrepay() bool {
	if x != nil && x.NeedPrepay != nil {
		return *x.NeedPrepay
	}
	return false
}

func (x *SearchGoodsRequest) GetNeedFreeShipment() bool {
	if x != nil && x.NeedFreeShipment != nil {
		return *x.NeedFreeShipment
	}
	return false
}

func (x *SearchGoodsRequest) GetNpxLevel() int32 {
	if x != nil && x.NpxLevel != nil {
		return *x.NpxLevel
	}
	return 0
}

func (x *SearchGoodsRequest) GetEndKaTkRate() int32 {
	if x != nil && x.EndKaTkRate != nil {
		return *x.EndKaTkRate
	}
	return 0
}

func (x *SearchGoodsRequest) GetStartKaTkRate() int32 {
	if x != nil && x.StartKaTkRate != nil {
		return *x.StartKaTkRate
	}
	return 0
}

func (x *SearchGoodsRequest) GetLockRateEndTime() uint64 {
	if x != nil && x.LockRateEndTime != nil {
		return *x.LockRateEndTime
	}
	return 0
}

func (x *SearchGoodsRequest) GetLockRateStartTime() uint64 {
	if x != nil && x.LockRateStartTime != nil {
		return *x.LockRateStartTime
	}
	return 0
}

func (x *SearchGoodsRequest) GetRelationId() string {
	if x != nil && x.RelationId != nil {
		return *x.RelationId
	}
	return ""
}

func (x *SearchGoodsRequest) GetSpecialId() string {
	if x != nil && x.SpecialId != nil {
		return *x.SpecialId
	}
	return ""
}

type SearchGoodsMsgData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TotalResults int32          `protobuf:"varint,1,opt,name=total_results,json=totalResults,proto3" json:"total_results,omitempty"`
	Data         []*GoodsDetail `protobuf:"bytes,2,rep,name=data,proto3" json:"data,omitempty"`
}

func (x *SearchGoodsMsgData) Reset() {
	*x = SearchGoodsMsgData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_tb_ddx_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SearchGoodsMsgData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SearchGoodsMsgData) ProtoMessage() {}

func (x *SearchGoodsMsgData) ProtoReflect() protoreflect.Message {
	mi := &file_api_tb_ddx_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SearchGoodsMsgData.ProtoReflect.Descriptor instead.
func (*SearchGoodsMsgData) Descriptor() ([]byte, []int) {
	return file_api_tb_ddx_proto_rawDescGZIP(), []int{3}
}

func (x *SearchGoodsMsgData) GetTotalResults() int32 {
	if x != nil {
		return x.TotalResults
	}
	return 0
}

func (x *SearchGoodsMsgData) GetData() []*GoodsDetail {
	if x != nil {
		return x.Data
	}
	return nil
}

type SearchGoodsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code int32               `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Msg  string              `protobuf:"bytes,2,opt,name=msg,proto3" json:"msg,omitempty"`
	Data *SearchGoodsMsgData `protobuf:"bytes,3,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *SearchGoodsResponse) Reset() {
	*x = SearchGoodsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_tb_ddx_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SearchGoodsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SearchGoodsResponse) ProtoMessage() {}

func (x *SearchGoodsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_tb_ddx_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SearchGoodsResponse.ProtoReflect.Descriptor instead.
func (*SearchGoodsResponse) Descriptor() ([]byte, []int) {
	return file_api_tb_ddx_proto_rawDescGZIP(), []int{4}
}

func (x *SearchGoodsResponse) GetCode() int32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *SearchGoodsResponse) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

func (x *SearchGoodsResponse) GetData() *SearchGoodsMsgData {
	if x != nil {
		return x.Data
	}
	return nil
}

type DdxTbApiSearchGoodsRes struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code         int32          `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Msg          string         `protobuf:"bytes,2,opt,name=msg,proto3" json:"msg,omitempty"`
	TotalResults int32          `protobuf:"varint,3,opt,name=total_results,json=totalResults,proto3" json:"total_results,omitempty"`
	Data         []*GoodsDetail `protobuf:"bytes,4,rep,name=data,proto3" json:"data,omitempty"`
}

func (x *DdxTbApiSearchGoodsRes) Reset() {
	*x = DdxTbApiSearchGoodsRes{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_tb_ddx_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DdxTbApiSearchGoodsRes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DdxTbApiSearchGoodsRes) ProtoMessage() {}

func (x *DdxTbApiSearchGoodsRes) ProtoReflect() protoreflect.Message {
	mi := &file_api_tb_ddx_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DdxTbApiSearchGoodsRes.ProtoReflect.Descriptor instead.
func (*DdxTbApiSearchGoodsRes) Descriptor() ([]byte, []int) {
	return file_api_tb_ddx_proto_rawDescGZIP(), []int{5}
}

func (x *DdxTbApiSearchGoodsRes) GetCode() int32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *DdxTbApiSearchGoodsRes) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

func (x *DdxTbApiSearchGoodsRes) GetTotalResults() int32 {
	if x != nil {
		return x.TotalResults
	}
	return 0
}

func (x *DdxTbApiSearchGoodsRes) GetData() []*GoodsDetail {
	if x != nil {
		return x.Data
	}
	return nil
}

type PromoteURLByIDRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id          string  `protobuf:"bytes,2,opt,name=id,proto3" json:"id,omitempty"`                                             // mandatory 商品id
	Signature   *string `protobuf:"bytes,3,opt,name=signature,proto3,oneof" json:"signature,omitempty"`                         // optional  接口签名，查看创建规则，（可在后台开启或关闭，关闭状态可不需要此参数）
	Pid         *string `protobuf:"bytes,4,opt,name=pid,proto3,oneof" json:"pid,omitempty"`                                     // ptional   淘宝联盟推广位pid，必须为在本平台授权淘宝账号下的pid，否则无效。如不传该参数则默认走后台填写的pid
	RelationId  *string `protobuf:"bytes,5,opt,name=relation_id,json=relationId,proto3,oneof" json:"relation_id,omitempty"`     // optional  渠道关系ID，即备案到该合作方下面的唯一的渠道关系ID，通过此关系ID进行转链即可实现订单的数据追踪，查看渠道订单数据; 注意：转链时候所传pid参数必须是您“渠道专属推广位”内的专属pid才可以，否则订单接口中无法返回渠道id信息。
	Tpwd        *bool   `protobuf:"varint,6,opt,name=tpwd,proto3,oneof" json:"tpwd,omitempty"`                                  // optional  是否生成淘口令，true 或false, 默认不生成，可生成优惠券口令和商品链接口令
	ActivityId  *string `protobuf:"bytes,7,opt,name=activity_id,json=activityId,proto3,oneof" json:"activity_id,omitempty"`     // optional  阿里妈妈推广券ID，如果传该参数，则高佣链接将展现此券信息，不传会自动查找其它券。
	Logo        *string `protobuf:"bytes,8,opt,name=logo,proto3,oneof" json:"logo,omitempty"`                                   // optional  要生成口令的图片, 默认使用商品主图
	Text        *string `protobuf:"bytes,9,opt,name=text,proto3,oneof" json:"text,omitempty"`                                   // optional  要生成口令的标题，默认使用商品标题
	ItemInfo    *bool   `protobuf:"varint,10,opt,name=item_info,json=itemInfo,proto3,oneof" json:"item_info,omitempty"`         // optional  true或false，是否返回商品信息，包含标题、一口价、折扣价、券后价、券后佣金，是否天猫, 默认false
	Extspk      *bool   `protobuf:"varint,11,opt,name=extspk,proto3,oneof" json:"extspk,omitempty"`                             // optional  true或false，是否同时去查私有券、猫超券，默认false不开启，开启后可能稍微增加转链响应速度，请合理使用。
	LeftSymbol  *string `protobuf:"bytes,12,opt,name=left_symbol,json=leftSymbol,proto3,oneof" json:"left_symbol,omitempty"`    // optional  淘口令左边符号，默认￥
	RightSymbol *string `protobuf:"bytes,13,opt,name=right_symbol,json=rightSymbol,proto3,oneof" json:"right_symbol,omitempty"` // optional  淘口令右边符号，默认￥
	ShortUrl    *bool   `protobuf:"varint,14,opt,name=short_url,json=shortUrl,proto3,oneof" json:"short_url,omitempty"`         // optional  coupon_click_url 和 item_url 是否生成短连接（默认生成的链接为长链接）
}

func (x *PromoteURLByIDRequest) Reset() {
	*x = PromoteURLByIDRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_tb_ddx_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PromoteURLByIDRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PromoteURLByIDRequest) ProtoMessage() {}

func (x *PromoteURLByIDRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_tb_ddx_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PromoteURLByIDRequest.ProtoReflect.Descriptor instead.
func (*PromoteURLByIDRequest) Descriptor() ([]byte, []int) {
	return file_api_tb_ddx_proto_rawDescGZIP(), []int{6}
}

func (x *PromoteURLByIDRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *PromoteURLByIDRequest) GetSignature() string {
	if x != nil && x.Signature != nil {
		return *x.Signature
	}
	return ""
}

func (x *PromoteURLByIDRequest) GetPid() string {
	if x != nil && x.Pid != nil {
		return *x.Pid
	}
	return ""
}

func (x *PromoteURLByIDRequest) GetRelationId() string {
	if x != nil && x.RelationId != nil {
		return *x.RelationId
	}
	return ""
}

func (x *PromoteURLByIDRequest) GetTpwd() bool {
	if x != nil && x.Tpwd != nil {
		return *x.Tpwd
	}
	return false
}

func (x *PromoteURLByIDRequest) GetActivityId() string {
	if x != nil && x.ActivityId != nil {
		return *x.ActivityId
	}
	return ""
}

func (x *PromoteURLByIDRequest) GetLogo() string {
	if x != nil && x.Logo != nil {
		return *x.Logo
	}
	return ""
}

func (x *PromoteURLByIDRequest) GetText() string {
	if x != nil && x.Text != nil {
		return *x.Text
	}
	return ""
}

func (x *PromoteURLByIDRequest) GetItemInfo() bool {
	if x != nil && x.ItemInfo != nil {
		return *x.ItemInfo
	}
	return false
}

func (x *PromoteURLByIDRequest) GetExtspk() bool {
	if x != nil && x.Extspk != nil {
		return *x.Extspk
	}
	return false
}

func (x *PromoteURLByIDRequest) GetLeftSymbol() string {
	if x != nil && x.LeftSymbol != nil {
		return *x.LeftSymbol
	}
	return ""
}

func (x *PromoteURLByIDRequest) GetRightSymbol() string {
	if x != nil && x.RightSymbol != nil {
		return *x.RightSymbol
	}
	return ""
}

func (x *PromoteURLByIDRequest) GetShortUrl() bool {
	if x != nil && x.ShortUrl != nil {
		return *x.ShortUrl
	}
	return false
}

type PromoteURLByTKLRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Tkl         string  `protobuf:"bytes,2,opt,name=tkl,proto3" json:"tkl,omitempty"`                                           // mandatory 商品TKL
	Signature   *string `protobuf:"bytes,3,opt,name=signature,proto3,oneof" json:"signature,omitempty"`                         // optional  接口签名，查看创建规则，（可在后台开启或关闭，关闭状态可不需要此参数）
	Pid         *string `protobuf:"bytes,4,opt,name=pid,proto3,oneof" json:"pid,omitempty"`                                     // ptional   淘宝联盟推广位pid，必须为在本平台授权淘宝账号下的pid，否则无效。如不传该参数则默认走后台填写的pid
	RelationId  *string `protobuf:"bytes,5,opt,name=relation_id,json=relationId,proto3,oneof" json:"relation_id,omitempty"`     // optional  渠道关系ID，即备案到该合作方下面的唯一的渠道关系ID，通过此关系ID进行转链即可实现订单的数据追踪，查看渠道订单数据; 注意：转链时候所传pid参数必须是您“渠道专属推广位”内的专属pid才可以，否则订单接口中无法返回渠道id信息。
	Tpwd        *bool   `protobuf:"varint,6,opt,name=tpwd,proto3,oneof" json:"tpwd,omitempty"`                                  // optional  是否生成淘口令，true 或false, 默认不生成，可生成优惠券口令和商品链接口令
	ActivityId  *string `protobuf:"bytes,7,opt,name=activity_id,json=activityId,proto3,oneof" json:"activity_id,omitempty"`     // optional  阿里妈妈推广券ID，如果传该参数，则高佣链接将展现此券信息，不传会自动查找其它券。
	Logo        *string `protobuf:"bytes,8,opt,name=logo,proto3,oneof" json:"logo,omitempty"`                                   // optional  要生成口令的图片, 默认使用商品主图
	Text        *string `protobuf:"bytes,9,opt,name=text,proto3,oneof" json:"text,omitempty"`                                   // optional  要生成口令的标题，默认使用商品标题
	ItemInfo    *bool   `protobuf:"varint,10,opt,name=item_info,json=itemInfo,proto3,oneof" json:"item_info,omitempty"`         // optional  true或false，是否返回商品信息，包含标题、一口价、折扣价、券后价、券后佣金，是否天猫, 默认false
	Extspk      *bool   `protobuf:"varint,11,opt,name=extspk,proto3,oneof" json:"extspk,omitempty"`                             // optional  true或false，是否同时去查私有券、猫超券，默认false不开启，开启后可能稍微增加转链响应速度，请合理使用。
	LeftSymbol  *string `protobuf:"bytes,12,opt,name=left_symbol,json=leftSymbol,proto3,oneof" json:"left_symbol,omitempty"`    // optional  淘口令左边符号，默认￥
	RightSymbol *string `protobuf:"bytes,13,opt,name=right_symbol,json=rightSymbol,proto3,oneof" json:"right_symbol,omitempty"` // optional  淘口令右边符号，默认￥
	ShortUrl    *bool   `protobuf:"varint,14,opt,name=short_url,json=shortUrl,proto3,oneof" json:"short_url,omitempty"`         // optional  coupon_click_url 和 item_url 是否生成短连接（默认生成的链接为长链接）
}

func (x *PromoteURLByTKLRequest) Reset() {
	*x = PromoteURLByTKLRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_tb_ddx_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PromoteURLByTKLRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PromoteURLByTKLRequest) ProtoMessage() {}

func (x *PromoteURLByTKLRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_tb_ddx_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PromoteURLByTKLRequest.ProtoReflect.Descriptor instead.
func (*PromoteURLByTKLRequest) Descriptor() ([]byte, []int) {
	return file_api_tb_ddx_proto_rawDescGZIP(), []int{7}
}

func (x *PromoteURLByTKLRequest) GetTkl() string {
	if x != nil {
		return x.Tkl
	}
	return ""
}

func (x *PromoteURLByTKLRequest) GetSignature() string {
	if x != nil && x.Signature != nil {
		return *x.Signature
	}
	return ""
}

func (x *PromoteURLByTKLRequest) GetPid() string {
	if x != nil && x.Pid != nil {
		return *x.Pid
	}
	return ""
}

func (x *PromoteURLByTKLRequest) GetRelationId() string {
	if x != nil && x.RelationId != nil {
		return *x.RelationId
	}
	return ""
}

func (x *PromoteURLByTKLRequest) GetTpwd() bool {
	if x != nil && x.Tpwd != nil {
		return *x.Tpwd
	}
	return false
}

func (x *PromoteURLByTKLRequest) GetActivityId() string {
	if x != nil && x.ActivityId != nil {
		return *x.ActivityId
	}
	return ""
}

func (x *PromoteURLByTKLRequest) GetLogo() string {
	if x != nil && x.Logo != nil {
		return *x.Logo
	}
	return ""
}

func (x *PromoteURLByTKLRequest) GetText() string {
	if x != nil && x.Text != nil {
		return *x.Text
	}
	return ""
}

func (x *PromoteURLByTKLRequest) GetItemInfo() bool {
	if x != nil && x.ItemInfo != nil {
		return *x.ItemInfo
	}
	return false
}

func (x *PromoteURLByTKLRequest) GetExtspk() bool {
	if x != nil && x.Extspk != nil {
		return *x.Extspk
	}
	return false
}

func (x *PromoteURLByTKLRequest) GetLeftSymbol() string {
	if x != nil && x.LeftSymbol != nil {
		return *x.LeftSymbol
	}
	return ""
}

func (x *PromoteURLByTKLRequest) GetRightSymbol() string {
	if x != nil && x.RightSymbol != nil {
		return *x.RightSymbol
	}
	return ""
}

func (x *PromoteURLByTKLRequest) GetShortUrl() bool {
	if x != nil && x.ShortUrl != nil {
		return *x.ShortUrl
	}
	return false
}

type ItemInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Title             string       `protobuf:"bytes,1,opt,name=title,proto3" json:"title,omitempty"`
	PictUrl           string       `protobuf:"bytes,2,opt,name=pict_url,json=pictUrl,proto3" json:"pict_url,omitempty"`
	SmallImages       *SmallImages `protobuf:"bytes,3,opt,name=small_images,json=smallImages,proto3" json:"small_images,omitempty"`
	ReservePrice      int32        `protobuf:"varint,4,opt,name=reserve_price,json=reservePrice,proto3" json:"reserve_price,omitempty"`
	ZkFinalPrice      int32        `protobuf:"varint,5,opt,name=zk_final_price,json=zkFinalPrice,proto3" json:"zk_final_price,omitempty"`
	QhFinalPrice      int32        `protobuf:"varint,6,opt,name=qh_final_price,json=qhFinalPrice,proto3" json:"qh_final_price,omitempty"`
	QhFinalCommission float32      `protobuf:"fixed32,7,opt,name=qh_final_commission,json=qhFinalCommission,proto3" json:"qh_final_commission,omitempty"`
	ActivityId        string       `protobuf:"bytes,8,opt,name=activity_id,json=activityId,proto3" json:"activity_id,omitempty"`
	UserType          int32        `protobuf:"varint,9,opt,name=user_type,json=userType,proto3" json:"user_type,omitempty"`
	Volume            int32        `protobuf:"varint,10,opt,name=volume,proto3" json:"volume,omitempty"`
	SellerId          uint64       `protobuf:"varint,11,opt,name=seller_id,json=sellerId,proto3" json:"seller_id,omitempty"`
	Nick              string       `protobuf:"bytes,12,opt,name=nick,proto3" json:"nick,omitempty"`
	MaterialLibType   string       `protobuf:"bytes,13,opt,name=material_lib_type,json=materialLibType,proto3" json:"material_lib_type,omitempty"`
}

func (x *ItemInfo) Reset() {
	*x = ItemInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_tb_ddx_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ItemInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ItemInfo) ProtoMessage() {}

func (x *ItemInfo) ProtoReflect() protoreflect.Message {
	mi := &file_api_tb_ddx_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ItemInfo.ProtoReflect.Descriptor instead.
func (*ItemInfo) Descriptor() ([]byte, []int) {
	return file_api_tb_ddx_proto_rawDescGZIP(), []int{8}
}

func (x *ItemInfo) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *ItemInfo) GetPictUrl() string {
	if x != nil {
		return x.PictUrl
	}
	return ""
}

func (x *ItemInfo) GetSmallImages() *SmallImages {
	if x != nil {
		return x.SmallImages
	}
	return nil
}

func (x *ItemInfo) GetReservePrice() int32 {
	if x != nil {
		return x.ReservePrice
	}
	return 0
}

func (x *ItemInfo) GetZkFinalPrice() int32 {
	if x != nil {
		return x.ZkFinalPrice
	}
	return 0
}

func (x *ItemInfo) GetQhFinalPrice() int32 {
	if x != nil {
		return x.QhFinalPrice
	}
	return 0
}

func (x *ItemInfo) GetQhFinalCommission() float32 {
	if x != nil {
		return x.QhFinalCommission
	}
	return 0
}

func (x *ItemInfo) GetActivityId() string {
	if x != nil {
		return x.ActivityId
	}
	return ""
}

func (x *ItemInfo) GetUserType() int32 {
	if x != nil {
		return x.UserType
	}
	return 0
}

func (x *ItemInfo) GetVolume() int32 {
	if x != nil {
		return x.Volume
	}
	return 0
}

func (x *ItemInfo) GetSellerId() uint64 {
	if x != nil {
		return x.SellerId
	}
	return 0
}

func (x *ItemInfo) GetNick() string {
	if x != nil {
		return x.Nick
	}
	return ""
}

func (x *ItemInfo) GetMaterialLibType() string {
	if x != nil {
		return x.MaterialLibType
	}
	return ""
}

type PromotedURLData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CategoryId          uint64    `protobuf:"varint,1,opt,name=category_id,json=categoryId,proto3" json:"category_id,omitempty"`
	CouponClickUrl      string    `protobuf:"bytes,2,opt,name=coupon_click_url,json=couponClickUrl,proto3" json:"coupon_click_url,omitempty"`
	CouponStartTime     string    `protobuf:"bytes,3,opt,name=coupon_start_time,json=couponStartTime,proto3" json:"coupon_start_time,omitempty"`
	CouponEndTime       string    `protobuf:"bytes,4,opt,name=coupon_end_time,json=couponEndTime,proto3" json:"coupon_end_time,omitempty"`
	CouponInfo          string    `protobuf:"bytes,5,opt,name=coupon_info,json=couponInfo,proto3" json:"coupon_info,omitempty"`
	Coupon              string    `protobuf:"bytes,6,opt,name=coupon,proto3" json:"coupon,omitempty"`
	ItemId              uint64    `protobuf:"varint,7,opt,name=item_id,json=itemId,proto3" json:"item_id,omitempty"`
	MaxCommissionRate   string    `protobuf:"bytes,8,opt,name=max_commission_rate,json=maxCommissionRate,proto3" json:"max_commission_rate,omitempty"`
	CouponTotalCount    int32     `protobuf:"varint,9,opt,name=coupon_total_count,json=couponTotalCount,proto3" json:"coupon_total_count,omitempty"`
	CouponRemainCount   int32     `protobuf:"varint,10,opt,name=coupon_remain_count,json=couponRemainCount,proto3" json:"coupon_remain_count,omitempty"`
	MmCouponRemainCount int32     `protobuf:"varint,11,opt,name=mm_coupon_remain_count,json=mmCouponRemainCount,proto3" json:"mm_coupon_remain_count,omitempty"`
	MmCouponTotalCount  int32     `protobuf:"varint,12,opt,name=mm_coupon_total_count,json=mmCouponTotalCount,proto3" json:"mm_coupon_total_count,omitempty"`
	MmCouponClickUrl    string    `protobuf:"bytes,13,opt,name=mm_coupon_click_url,json=mmCouponClickUrl,proto3" json:"mm_coupon_click_url,omitempty"`
	MmCouponStartTime   string    `protobuf:"bytes,14,opt,name=mm_coupon_start_time,json=mmCouponStartTime,proto3" json:"mm_coupon_start_time,omitempty"`
	MmCouponEndTime     string    `protobuf:"bytes,15,opt,name=mm_coupon_end_time,json=mmCouponEndTime,proto3" json:"mm_coupon_end_time,omitempty"`
	MmCouponInfo        string    `protobuf:"bytes,16,opt,name=mm_coupon_info,json=mmCouponInfo,proto3" json:"mm_coupon_info,omitempty"`
	CouponType          int32     `protobuf:"varint,17,opt,name=coupon_type,json=couponType,proto3" json:"coupon_type,omitempty"`
	ItemUrl             string    `protobuf:"bytes,18,opt,name=item_url,json=itemUrl,proto3" json:"item_url,omitempty"`
	CouponTpwd          string    `protobuf:"bytes,19,opt,name=coupon_tpwd,json=couponTpwd,proto3" json:"coupon_tpwd,omitempty"`
	LongCouponTpwd      string    `protobuf:"bytes,20,opt,name=long_coupon_tpwd,json=longCouponTpwd,proto3" json:"long_coupon_tpwd,omitempty"`
	ItemTpwd            string    `protobuf:"bytes,21,opt,name=item_tpwd,json=itemTpwd,proto3" json:"item_tpwd,omitempty"`
	LongItemTpwd        string    `protobuf:"bytes,22,opt,name=long_item_tpwd,json=longItemTpwd,proto3" json:"long_item_tpwd,omitempty"`
	ItemInfo            *ItemInfo `protobuf:"bytes,23,opt,name=itemInfo,proto3" json:"itemInfo,omitempty"`
	YsylClickUrl        string    `protobuf:"bytes,24,opt,name=ysyl_click_url,json=ysylClickUrl,proto3" json:"ysyl_click_url,omitempty"`
	YsylTljFace         string    `protobuf:"bytes,25,opt,name=ysyl_tlj_face,json=ysylTljFace,proto3" json:"ysyl_tlj_face,omitempty"`
	YsylTljSendTime     string    `protobuf:"bytes,26,opt,name=ysyl_tlj_send_time,json=ysylTljSendTime,proto3" json:"ysyl_tlj_send_time,omitempty"`
	YsylCommissionRate  string    `protobuf:"bytes,27,opt,name=ysyl_commission_rate,json=ysylCommissionRate,proto3" json:"ysyl_commission_rate,omitempty"`
	YsylTljUseStartTime string    `protobuf:"bytes,28,opt,name=ysyl_tlj_use_start_time,json=ysylTljUseStartTime,proto3" json:"ysyl_tlj_use_start_time,omitempty"`
	YsylTljUseEndTime   string    `protobuf:"bytes,29,opt,name=ysyl_tlj_use_end_time,json=ysylTljUseEndTime,proto3" json:"ysyl_tlj_use_end_time,omitempty"`
	MinCommissionRate   string    `protobuf:"bytes,30,opt,name=min_commission_rate,json=minCommissionRate,proto3" json:"min_commission_rate,omitempty"`
	RewardInfo          int32     `protobuf:"varint,31,opt,name=reward_info,json=rewardInfo,proto3" json:"reward_info,omitempty"`
}

func (x *PromotedURLData) Reset() {
	*x = PromotedURLData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_tb_ddx_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PromotedURLData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PromotedURLData) ProtoMessage() {}

func (x *PromotedURLData) ProtoReflect() protoreflect.Message {
	mi := &file_api_tb_ddx_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PromotedURLData.ProtoReflect.Descriptor instead.
func (*PromotedURLData) Descriptor() ([]byte, []int) {
	return file_api_tb_ddx_proto_rawDescGZIP(), []int{9}
}

func (x *PromotedURLData) GetCategoryId() uint64 {
	if x != nil {
		return x.CategoryId
	}
	return 0
}

func (x *PromotedURLData) GetCouponClickUrl() string {
	if x != nil {
		return x.CouponClickUrl
	}
	return ""
}

func (x *PromotedURLData) GetCouponStartTime() string {
	if x != nil {
		return x.CouponStartTime
	}
	return ""
}

func (x *PromotedURLData) GetCouponEndTime() string {
	if x != nil {
		return x.CouponEndTime
	}
	return ""
}

func (x *PromotedURLData) GetCouponInfo() string {
	if x != nil {
		return x.CouponInfo
	}
	return ""
}

func (x *PromotedURLData) GetCoupon() string {
	if x != nil {
		return x.Coupon
	}
	return ""
}

func (x *PromotedURLData) GetItemId() uint64 {
	if x != nil {
		return x.ItemId
	}
	return 0
}

func (x *PromotedURLData) GetMaxCommissionRate() string {
	if x != nil {
		return x.MaxCommissionRate
	}
	return ""
}

func (x *PromotedURLData) GetCouponTotalCount() int32 {
	if x != nil {
		return x.CouponTotalCount
	}
	return 0
}

func (x *PromotedURLData) GetCouponRemainCount() int32 {
	if x != nil {
		return x.CouponRemainCount
	}
	return 0
}

func (x *PromotedURLData) GetMmCouponRemainCount() int32 {
	if x != nil {
		return x.MmCouponRemainCount
	}
	return 0
}

func (x *PromotedURLData) GetMmCouponTotalCount() int32 {
	if x != nil {
		return x.MmCouponTotalCount
	}
	return 0
}

func (x *PromotedURLData) GetMmCouponClickUrl() string {
	if x != nil {
		return x.MmCouponClickUrl
	}
	return ""
}

func (x *PromotedURLData) GetMmCouponStartTime() string {
	if x != nil {
		return x.MmCouponStartTime
	}
	return ""
}

func (x *PromotedURLData) GetMmCouponEndTime() string {
	if x != nil {
		return x.MmCouponEndTime
	}
	return ""
}

func (x *PromotedURLData) GetMmCouponInfo() string {
	if x != nil {
		return x.MmCouponInfo
	}
	return ""
}

func (x *PromotedURLData) GetCouponType() int32 {
	if x != nil {
		return x.CouponType
	}
	return 0
}

func (x *PromotedURLData) GetItemUrl() string {
	if x != nil {
		return x.ItemUrl
	}
	return ""
}

func (x *PromotedURLData) GetCouponTpwd() string {
	if x != nil {
		return x.CouponTpwd
	}
	return ""
}

func (x *PromotedURLData) GetLongCouponTpwd() string {
	if x != nil {
		return x.LongCouponTpwd
	}
	return ""
}

func (x *PromotedURLData) GetItemTpwd() string {
	if x != nil {
		return x.ItemTpwd
	}
	return ""
}

func (x *PromotedURLData) GetLongItemTpwd() string {
	if x != nil {
		return x.LongItemTpwd
	}
	return ""
}

func (x *PromotedURLData) GetItemInfo() *ItemInfo {
	if x != nil {
		return x.ItemInfo
	}
	return nil
}

func (x *PromotedURLData) GetYsylClickUrl() string {
	if x != nil {
		return x.YsylClickUrl
	}
	return ""
}

func (x *PromotedURLData) GetYsylTljFace() string {
	if x != nil {
		return x.YsylTljFace
	}
	return ""
}

func (x *PromotedURLData) GetYsylTljSendTime() string {
	if x != nil {
		return x.YsylTljSendTime
	}
	return ""
}

func (x *PromotedURLData) GetYsylCommissionRate() string {
	if x != nil {
		return x.YsylCommissionRate
	}
	return ""
}

func (x *PromotedURLData) GetYsylTljUseStartTime() string {
	if x != nil {
		return x.YsylTljUseStartTime
	}
	return ""
}

func (x *PromotedURLData) GetYsylTljUseEndTime() string {
	if x != nil {
		return x.YsylTljUseEndTime
	}
	return ""
}

func (x *PromotedURLData) GetMinCommissionRate() string {
	if x != nil {
		return x.MinCommissionRate
	}
	return ""
}

func (x *PromotedURLData) GetRewardInfo() int32 {
	if x != nil {
		return x.RewardInfo
	}
	return 0
}

type PromoteURLResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code int32            `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Msg  string           `protobuf:"bytes,2,opt,name=msg,proto3" json:"msg,omitempty"`
	Data *PromotedURLData `protobuf:"bytes,3,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *PromoteURLResponse) Reset() {
	*x = PromoteURLResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_tb_ddx_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PromoteURLResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PromoteURLResponse) ProtoMessage() {}

func (x *PromoteURLResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_tb_ddx_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PromoteURLResponse.ProtoReflect.Descriptor instead.
func (*PromoteURLResponse) Descriptor() ([]byte, []int) {
	return file_api_tb_ddx_proto_rawDescGZIP(), []int{10}
}

func (x *PromoteURLResponse) GetCode() int32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *PromoteURLResponse) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

func (x *PromoteURLResponse) GetData() *PromotedURLData {
	if x != nil {
		return x.Data
	}
	return nil
}

var File_api_tb_ddx_proto protoreflect.FileDescriptor

var file_api_tb_ddx_proto_rawDesc = []byte{
	0x0a, 0x10, 0x61, 0x70, 0x69, 0x2e, 0x74, 0x62, 0x2e, 0x64, 0x64, 0x78, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x12, 0x04, 0x74, 0x62, 0x70, 0x62, 0x22, 0x25, 0x0a, 0x0b, 0x53, 0x6d, 0x61, 0x6c,
	0x6c, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x73, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x72, 0x69, 0x6e,
	0x67, 0x18, 0x01, 0x20, 0x03, 0x28, 0x09, 0x52, 0x06, 0x73, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x22,
	0xd5, 0x14, 0x0a, 0x0b, 0x47, 0x6f, 0x6f, 0x64, 0x73, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x12,
	0x1f, 0x0a, 0x0b, 0x63, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x5f, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x04, 0x52, 0x0a, 0x63, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x49, 0x64,
	0x12, 0x23, 0x0a, 0x0d, 0x63, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x5f, 0x6e, 0x61, 0x6d,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x63, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72,
	0x79, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x27, 0x0a, 0x0f, 0x63, 0x6f, 0x6d, 0x6d, 0x69, 0x73, 0x73,
	0x69, 0x6f, 0x6e, 0x5f, 0x72, 0x61, 0x74, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e,
	0x63, 0x6f, 0x6d, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x61, 0x74, 0x65, 0x12, 0x27,
	0x0a, 0x0f, 0x63, 0x6f, 0x6d, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x5f, 0x74, 0x79, 0x70,
	0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x63, 0x6f, 0x6d, 0x6d, 0x69, 0x73, 0x73,
	0x69, 0x6f, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x12, 0x23, 0x0a, 0x0d, 0x63, 0x6f, 0x75, 0x70, 0x6f,
	0x6e, 0x5f, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c,
	0x63, 0x6f, 0x75, 0x70, 0x6f, 0x6e, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x26, 0x0a, 0x0f,
	0x63, 0x6f, 0x75, 0x70, 0x6f, 0x6e, 0x5f, 0x65, 0x6e, 0x64, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18,
	0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x63, 0x6f, 0x75, 0x70, 0x6f, 0x6e, 0x45, 0x6e, 0x64,
	0x54, 0x69, 0x6d, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x63, 0x6f, 0x75, 0x70, 0x6f, 0x6e, 0x5f, 0x69,
	0x64, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x63, 0x6f, 0x75, 0x70, 0x6f, 0x6e, 0x49,
	0x64, 0x12, 0x1f, 0x0a, 0x0b, 0x63, 0x6f, 0x75, 0x70, 0x6f, 0x6e, 0x5f, 0x69, 0x6e, 0x66, 0x6f,
	0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x63, 0x6f, 0x75, 0x70, 0x6f, 0x6e, 0x49, 0x6e,
	0x66, 0x6f, 0x12, 0x2e, 0x0a, 0x13, 0x63, 0x6f, 0x75, 0x70, 0x6f, 0x6e, 0x5f, 0x72, 0x65, 0x6d,
	0x61, 0x69, 0x6e, 0x5f, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x09, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x11, 0x63, 0x6f, 0x75, 0x70, 0x6f, 0x6e, 0x52, 0x65, 0x6d, 0x61, 0x69, 0x6e, 0x43, 0x6f, 0x75,
	0x6e, 0x74, 0x12, 0x28, 0x0a, 0x10, 0x63, 0x6f, 0x75, 0x70, 0x6f, 0x6e, 0x5f, 0x73, 0x68, 0x61,
	0x72, 0x65, 0x5f, 0x75, 0x72, 0x6c, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x63, 0x6f,
	0x75, 0x70, 0x6f, 0x6e, 0x53, 0x68, 0x61, 0x72, 0x65, 0x55, 0x72, 0x6c, 0x12, 0x28, 0x0a, 0x10,
	0x63, 0x6f, 0x75, 0x70, 0x6f, 0x6e, 0x5f, 0x73, 0x74, 0x61, 0x72, 0x74, 0x5f, 0x66, 0x65, 0x65,
	0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x63, 0x6f, 0x75, 0x70, 0x6f, 0x6e, 0x53, 0x74,
	0x61, 0x72, 0x74, 0x46, 0x65, 0x65, 0x12, 0x2a, 0x0a, 0x11, 0x63, 0x6f, 0x75, 0x70, 0x6f, 0x6e,
	0x5f, 0x73, 0x74, 0x61, 0x72, 0x74, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x0c, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0f, 0x63, 0x6f, 0x75, 0x70, 0x6f, 0x6e, 0x53, 0x74, 0x61, 0x72, 0x74, 0x54, 0x69,
	0x6d, 0x65, 0x12, 0x2c, 0x0a, 0x12, 0x63, 0x6f, 0x75, 0x70, 0x6f, 0x6e, 0x5f, 0x74, 0x6f, 0x74,
	0x61, 0x6c, 0x5f, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x05, 0x52, 0x10,
	0x63, 0x6f, 0x75, 0x70, 0x6f, 0x6e, 0x54, 0x6f, 0x74, 0x61, 0x6c, 0x43, 0x6f, 0x75, 0x6e, 0x74,
	0x12, 0x21, 0x0a, 0x0c, 0x69, 0x6e, 0x63, 0x6c, 0x75, 0x64, 0x65, 0x5f, 0x64, 0x78, 0x6a, 0x68,
	0x18, 0x0e, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x69, 0x6e, 0x63, 0x6c, 0x75, 0x64, 0x65, 0x44,
	0x78, 0x6a, 0x68, 0x12, 0x1f, 0x0a, 0x0b, 0x69, 0x6e, 0x63, 0x6c, 0x75, 0x64, 0x65, 0x5f, 0x6d,
	0x6b, 0x74, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x69, 0x6e, 0x63, 0x6c, 0x75, 0x64,
	0x65, 0x4d, 0x6b, 0x74, 0x12, 0x1b, 0x0a, 0x09, 0x69, 0x6e, 0x66, 0x6f, 0x5f, 0x64, 0x78, 0x6a,
	0x68, 0x18, 0x10, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x69, 0x6e, 0x66, 0x6f, 0x44, 0x78, 0x6a,
	0x68, 0x12, 0x29, 0x0a, 0x10, 0x69, 0x74, 0x65, 0x6d, 0x5f, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69,
	0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x11, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x69, 0x74, 0x65,
	0x6d, 0x44, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x17, 0x0a, 0x07,
	0x69, 0x74, 0x65, 0x6d, 0x5f, 0x69, 0x64, 0x18, 0x12, 0x20, 0x01, 0x28, 0x04, 0x52, 0x06, 0x69,
	0x74, 0x65, 0x6d, 0x49, 0x64, 0x12, 0x19, 0x0a, 0x08, 0x69, 0x74, 0x65, 0x6d, 0x5f, 0x75, 0x72,
	0x6c, 0x18, 0x13, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x69, 0x74, 0x65, 0x6d, 0x55, 0x72, 0x6c,
	0x12, 0x31, 0x0a, 0x15, 0x6c, 0x65, 0x76, 0x65, 0x6c, 0x5f, 0x6f, 0x6e, 0x65, 0x5f, 0x63, 0x61,
	0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x5f, 0x69, 0x64, 0x18, 0x14, 0x20, 0x01, 0x28, 0x04, 0x52,
	0x12, 0x6c, 0x65, 0x76, 0x65, 0x6c, 0x4f, 0x6e, 0x65, 0x43, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72,
	0x79, 0x49, 0x64, 0x12, 0x35, 0x0a, 0x17, 0x6c, 0x65, 0x76, 0x65, 0x6c, 0x5f, 0x6f, 0x6e, 0x65,
	0x5f, 0x63, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x15,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x14, 0x6c, 0x65, 0x76, 0x65, 0x6c, 0x4f, 0x6e, 0x65, 0x43, 0x61,
	0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x69,
	0x63, 0x6b, 0x18, 0x16, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x69, 0x63, 0x6b, 0x12, 0x17,
	0x0a, 0x07, 0x6e, 0x75, 0x6d, 0x5f, 0x69, 0x69, 0x64, 0x18, 0x17, 0x20, 0x01, 0x28, 0x04, 0x52,
	0x06, 0x6e, 0x75, 0x6d, 0x49, 0x69, 0x64, 0x12, 0x19, 0x0a, 0x08, 0x70, 0x69, 0x63, 0x74, 0x5f,
	0x75, 0x72, 0x6c, 0x18, 0x18, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x70, 0x69, 0x63, 0x74, 0x55,
	0x72, 0x6c, 0x12, 0x27, 0x0a, 0x0f, 0x70, 0x72, 0x65, 0x73, 0x61, 0x6c, 0x65, 0x5f, 0x64, 0x65,
	0x70, 0x6f, 0x73, 0x69, 0x74, 0x18, 0x19, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x70, 0x72, 0x65,
	0x73, 0x61, 0x6c, 0x65, 0x44, 0x65, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x12, 0x28, 0x0a, 0x10, 0x70,
	0x72, 0x65, 0x73, 0x61, 0x6c, 0x65, 0x5f, 0x65, 0x6e, 0x64, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18,
	0x1a, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0e, 0x70, 0x72, 0x65, 0x73, 0x61, 0x6c, 0x65, 0x45, 0x6e,
	0x64, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x2c, 0x0a, 0x12, 0x70, 0x72, 0x65, 0x73, 0x61, 0x6c, 0x65,
	0x5f, 0x73, 0x74, 0x61, 0x72, 0x74, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x1b, 0x20, 0x01, 0x28,
	0x04, 0x52, 0x10, 0x70, 0x72, 0x65, 0x73, 0x61, 0x6c, 0x65, 0x53, 0x74, 0x61, 0x72, 0x74, 0x54,
	0x69, 0x6d, 0x65, 0x12, 0x31, 0x0a, 0x15, 0x70, 0x72, 0x65, 0x73, 0x61, 0x6c, 0x65, 0x5f, 0x74,
	0x61, 0x69, 0x6c, 0x5f, 0x65, 0x6e, 0x64, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x1c, 0x20, 0x01,
	0x28, 0x04, 0x52, 0x12, 0x70, 0x72, 0x65, 0x73, 0x61, 0x6c, 0x65, 0x54, 0x61, 0x69, 0x6c, 0x45,
	0x6e, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x35, 0x0a, 0x17, 0x70, 0x72, 0x65, 0x73, 0x61, 0x6c,
	0x65, 0x5f, 0x74, 0x61, 0x69, 0x6c, 0x5f, 0x73, 0x74, 0x61, 0x72, 0x74, 0x5f, 0x74, 0x69, 0x6d,
	0x65, 0x18, 0x1d, 0x20, 0x01, 0x28, 0x04, 0x52, 0x14, 0x70, 0x72, 0x65, 0x73, 0x61, 0x6c, 0x65,
	0x54, 0x61, 0x69, 0x6c, 0x53, 0x74, 0x61, 0x72, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x39, 0x0a,
	0x19, 0x70, 0x72, 0x65, 0x73, 0x61, 0x6c, 0x65, 0x5f, 0x64, 0x69, 0x73, 0x63, 0x6f, 0x75, 0x6e,
	0x74, 0x5f, 0x66, 0x65, 0x65, 0x5f, 0x74, 0x65, 0x78, 0x74, 0x18, 0x1e, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x16, 0x70, 0x72, 0x65, 0x73, 0x61, 0x6c, 0x65, 0x44, 0x69, 0x73, 0x63, 0x6f, 0x75, 0x6e,
	0x74, 0x46, 0x65, 0x65, 0x54, 0x65, 0x78, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x72, 0x6f, 0x76,
	0x63, 0x69, 0x74, 0x79, 0x18, 0x1f, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x70, 0x72, 0x6f, 0x76,
	0x63, 0x69, 0x74, 0x79, 0x12, 0x22, 0x0a, 0x0d, 0x72, 0x65, 0x61, 0x6c, 0x5f, 0x70, 0x6f, 0x73,
	0x74, 0x5f, 0x66, 0x65, 0x65, 0x18, 0x20, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x72, 0x65, 0x61,
	0x6c, 0x50, 0x6f, 0x73, 0x74, 0x46, 0x65, 0x65, 0x12, 0x23, 0x0a, 0x0d, 0x72, 0x65, 0x73, 0x65,
	0x72, 0x76, 0x65, 0x5f, 0x70, 0x72, 0x69, 0x63, 0x65, 0x18, 0x21, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0c, 0x72, 0x65, 0x73, 0x65, 0x72, 0x76, 0x65, 0x50, 0x72, 0x69, 0x63, 0x65, 0x12, 0x1b, 0x0a,
	0x09, 0x73, 0x65, 0x6c, 0x6c, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x22, 0x20, 0x01, 0x28, 0x04,
	0x52, 0x08, 0x73, 0x65, 0x6c, 0x6c, 0x65, 0x72, 0x49, 0x64, 0x12, 0x19, 0x0a, 0x08, 0x73, 0x68,
	0x6f, 0x70, 0x5f, 0x64, 0x73, 0x72, 0x18, 0x23, 0x20, 0x01, 0x28, 0x04, 0x52, 0x07, 0x73, 0x68,
	0x6f, 0x70, 0x44, 0x73, 0x72, 0x12, 0x1f, 0x0a, 0x0b, 0x73, 0x68, 0x6f, 0x72, 0x74, 0x5f, 0x74,
	0x69, 0x74, 0x6c, 0x65, 0x18, 0x24, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x73, 0x68, 0x6f, 0x72,
	0x74, 0x54, 0x69, 0x74, 0x6c, 0x65, 0x12, 0x34, 0x0a, 0x0c, 0x73, 0x6d, 0x61, 0x6c, 0x6c, 0x5f,
	0x69, 0x6d, 0x61, 0x67, 0x65, 0x73, 0x18, 0x25, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x74,
	0x62, 0x70, 0x62, 0x2e, 0x53, 0x6d, 0x61, 0x6c, 0x6c, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x73, 0x52,
	0x0b, 0x73, 0x6d, 0x61, 0x6c, 0x6c, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x73, 0x12, 0x25, 0x0a, 0x0e,
	0x73, 0x75, 0x70, 0x65, 0x72, 0x69, 0x6f, 0x72, 0x5f, 0x62, 0x72, 0x61, 0x6e, 0x64, 0x18, 0x26,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x73, 0x75, 0x70, 0x65, 0x72, 0x69, 0x6f, 0x72, 0x42, 0x72,
	0x61, 0x6e, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x27, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x12, 0x24, 0x0a, 0x0e, 0x74, 0x6b, 0x5f,
	0x74, 0x6f, 0x74, 0x61, 0x6c, 0x5f, 0x63, 0x6f, 0x6d, 0x6d, 0x69, 0x18, 0x28, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0c, 0x74, 0x6b, 0x54, 0x6f, 0x74, 0x61, 0x6c, 0x43, 0x6f, 0x6d, 0x6d, 0x69, 0x12,
	0x24, 0x0a, 0x0e, 0x74, 0x6b, 0x5f, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x5f, 0x73, 0x61, 0x6c, 0x65,
	0x73, 0x18, 0x29, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x74, 0x6b, 0x54, 0x6f, 0x74, 0x61, 0x6c,
	0x53, 0x61, 0x6c, 0x65, 0x73, 0x12, 0x10, 0x0a, 0x03, 0x75, 0x72, 0x6c, 0x18, 0x2a, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x03, 0x75, 0x72, 0x6c, 0x12, 0x1b, 0x0a, 0x09, 0x75, 0x73, 0x65, 0x72, 0x5f,
	0x74, 0x79, 0x70, 0x65, 0x18, 0x2b, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x75, 0x73, 0x65, 0x72,
	0x54, 0x79, 0x70, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x76, 0x6f, 0x6c, 0x75, 0x6d, 0x65, 0x18, 0x2c,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x76, 0x6f, 0x6c, 0x75, 0x6d, 0x65, 0x12, 0x1f, 0x0a, 0x0b,
	0x77, 0x68, 0x69, 0x74, 0x65, 0x5f, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x18, 0x2d, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0a, 0x77, 0x68, 0x69, 0x74, 0x65, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x12, 0x11, 0x0a,
	0x04, 0x78, 0x5f, 0x69, 0x64, 0x18, 0x2e, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x78, 0x49, 0x64,
	0x12, 0x24, 0x0a, 0x0e, 0x7a, 0x6b, 0x5f, 0x66, 0x69, 0x6e, 0x61, 0x6c, 0x5f, 0x70, 0x72, 0x69,
	0x63, 0x65, 0x18, 0x2f, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x7a, 0x6b, 0x46, 0x69, 0x6e, 0x61,
	0x6c, 0x50, 0x72, 0x69, 0x63, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x73, 0x68, 0x6f, 0x70, 0x5f, 0x74,
	0x69, 0x74, 0x6c, 0x65, 0x18, 0x30, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x73, 0x68, 0x6f, 0x70,
	0x54, 0x69, 0x74, 0x6c, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x6f, 0x65, 0x74, 0x69, 0x6d, 0x65, 0x18,
	0x31, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x6f, 0x65, 0x74, 0x69, 0x6d, 0x65, 0x12, 0x16, 0x0a,
	0x06, 0x6f, 0x73, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x32, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x6f,
	0x73, 0x74, 0x69, 0x6d, 0x65, 0x12, 0x17, 0x0a, 0x07, 0x6a, 0x64, 0x64, 0x5f, 0x6e, 0x75, 0x6d,
	0x18, 0x33, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x6a, 0x64, 0x64, 0x4e, 0x75, 0x6d, 0x12, 0x1b,
	0x0a, 0x09, 0x6a, 0x64, 0x64, 0x5f, 0x70, 0x72, 0x69, 0x63, 0x65, 0x18, 0x34, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x08, 0x6a, 0x64, 0x64, 0x50, 0x72, 0x69, 0x63, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x63,
	0x6f, 0x75, 0x70, 0x6f, 0x6e, 0x18, 0x35, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x63, 0x6f, 0x75,
	0x70, 0x6f, 0x6e, 0x12, 0x25, 0x0a, 0x0f, 0x75, 0x76, 0x5f, 0x73, 0x75, 0x6d, 0x5f, 0x70, 0x72,
	0x65, 0x5f, 0x73, 0x61, 0x6c, 0x65, 0x18, 0x36, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x75, 0x76,
	0x53, 0x75, 0x6d, 0x50, 0x72, 0x65, 0x53, 0x61, 0x6c, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x6f, 0x72,
	0x69, 0x67, 0x5f, 0x70, 0x72, 0x69, 0x63, 0x65, 0x18, 0x37, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09,
	0x6f, 0x72, 0x69, 0x67, 0x50, 0x72, 0x69, 0x63, 0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x74, 0x6f, 0x74,
	0x61, 0x6c, 0x5f, 0x73, 0x74, 0x6f, 0x63, 0x6b, 0x18, 0x38, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0a,
	0x74, 0x6f, 0x74, 0x61, 0x6c, 0x53, 0x74, 0x6f, 0x63, 0x6b, 0x12, 0x19, 0x0a, 0x08, 0x73, 0x65,
	0x6c, 0x6c, 0x5f, 0x6e, 0x75, 0x6d, 0x18, 0x39, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x73, 0x65,
	0x6c, 0x6c, 0x4e, 0x75, 0x6d, 0x12, 0x14, 0x0a, 0x05, 0x73, 0x74, 0x6f, 0x63, 0x6b, 0x18, 0x3a,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x73, 0x74, 0x6f, 0x63, 0x6b, 0x12, 0x37, 0x0a, 0x18, 0x74,
	0x6d, 0x61, 0x6c, 0x6c, 0x5f, 0x70, 0x6c, 0x61, 0x79, 0x5f, 0x61, 0x63, 0x74, 0x69, 0x76, 0x69,
	0x74, 0x79, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x18, 0x3b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x15, 0x74,
	0x6d, 0x61, 0x6c, 0x6c, 0x50, 0x6c, 0x61, 0x79, 0x41, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79,
	0x49, 0x6e, 0x66, 0x6f, 0x12, 0x2b, 0x0a, 0x12, 0x6c, 0x6f, 0x63, 0x6b, 0x5f, 0x72, 0x61, 0x74,
	0x65, 0x5f, 0x65, 0x6e, 0x64, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x3c, 0x20, 0x01, 0x28, 0x04,
	0x52, 0x0f, 0x6c, 0x6f, 0x63, 0x6b, 0x52, 0x61, 0x74, 0x65, 0x45, 0x6e, 0x64, 0x54, 0x69, 0x6d,
	0x65, 0x12, 0x2f, 0x0a, 0x14, 0x6c, 0x6f, 0x63, 0x6b, 0x5f, 0x72, 0x61, 0x74, 0x65, 0x5f, 0x73,
	0x74, 0x61, 0x72, 0x74, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x3d, 0x20, 0x01, 0x28, 0x04, 0x52,
	0x11, 0x6c, 0x6f, 0x63, 0x6b, 0x52, 0x61, 0x74, 0x65, 0x53, 0x74, 0x61, 0x72, 0x74, 0x54, 0x69,
	0x6d, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x6c, 0x6f, 0x63, 0x6b, 0x5f, 0x72, 0x61, 0x74, 0x65, 0x18,
	0x3e, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6c, 0x6f, 0x63, 0x6b, 0x52, 0x61, 0x74, 0x65, 0x12,
	0x2b, 0x0a, 0x12, 0x79, 0x73, 0x79, 0x6c, 0x5f, 0x74, 0x6c, 0x6a, 0x5f, 0x73, 0x65, 0x6e, 0x64,
	0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x3f, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x79, 0x73, 0x79,
	0x6c, 0x54, 0x6c, 0x6a, 0x53, 0x65, 0x6e, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x24, 0x0a, 0x0e,
	0x79, 0x73, 0x79, 0x6c, 0x5f, 0x63, 0x6c, 0x69, 0x63, 0x6b, 0x5f, 0x75, 0x72, 0x6c, 0x18, 0x40,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x79, 0x73, 0x79, 0x6c, 0x43, 0x6c, 0x69, 0x63, 0x6b, 0x55,
	0x72, 0x6c, 0x12, 0x30, 0x0a, 0x14, 0x79, 0x73, 0x79, 0x6c, 0x5f, 0x63, 0x6f, 0x6d, 0x6d, 0x69,
	0x73, 0x73, 0x69, 0x6f, 0x6e, 0x5f, 0x72, 0x61, 0x74, 0x65, 0x18, 0x41, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x12, 0x79, 0x73, 0x79, 0x6c, 0x43, 0x6f, 0x6d, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e,
	0x52, 0x61, 0x74, 0x65, 0x12, 0x22, 0x0a, 0x0d, 0x79, 0x73, 0x79, 0x6c, 0x5f, 0x74, 0x6c, 0x6a,
	0x5f, 0x66, 0x61, 0x63, 0x65, 0x18, 0x42, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x79, 0x73, 0x79,
	0x6c, 0x54, 0x6c, 0x6a, 0x46, 0x61, 0x63, 0x65, 0x12, 0x30, 0x0a, 0x15, 0x79, 0x73, 0x79, 0x6c,
	0x5f, 0x74, 0x6c, 0x6a, 0x5f, 0x75, 0x73, 0x65, 0x5f, 0x65, 0x6e, 0x64, 0x5f, 0x74, 0x69, 0x6d,
	0x65, 0x18, 0x43, 0x20, 0x01, 0x28, 0x09, 0x52, 0x11, 0x79, 0x73, 0x79, 0x6c, 0x54, 0x6c, 0x6a,
	0x55, 0x73, 0x65, 0x45, 0x6e, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x34, 0x0a, 0x17, 0x79, 0x73,
	0x79, 0x6c, 0x5f, 0x74, 0x6c, 0x6a, 0x5f, 0x75, 0x73, 0x65, 0x5f, 0x73, 0x74, 0x61, 0x72, 0x74,
	0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x44, 0x20, 0x01, 0x28, 0x09, 0x52, 0x13, 0x79, 0x73, 0x79,
	0x6c, 0x54, 0x6c, 0x6a, 0x55, 0x73, 0x65, 0x53, 0x74, 0x61, 0x72, 0x74, 0x54, 0x69, 0x6d, 0x65,
	0x12, 0x1d, 0x0a, 0x0a, 0x73, 0x61, 0x6c, 0x65, 0x5f, 0x70, 0x72, 0x69, 0x63, 0x65, 0x18, 0x45,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x73, 0x61, 0x6c, 0x65, 0x50, 0x72, 0x69, 0x63, 0x65, 0x12,
	0x34, 0x0a, 0x16, 0x6b, 0x75, 0x61, 0x64, 0x69, 0x61, 0x6e, 0x5f, 0x70, 0x72, 0x6f, 0x6d, 0x6f,
	0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x18, 0x46, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x14, 0x6b, 0x75, 0x61, 0x64, 0x69, 0x61, 0x6e, 0x50, 0x72, 0x6f, 0x6d, 0x6f, 0x74, 0x69, 0x6f,
	0x6e, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x1f, 0x0a, 0x0b, 0x63, 0x6f, 0x6d, 0x6d, 0x69, 0x5f, 0x73,
	0x63, 0x6f, 0x72, 0x65, 0x18, 0x47, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x63, 0x6f, 0x6d, 0x6d,
	0x69, 0x53, 0x63, 0x6f, 0x72, 0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x6d, 0x61, 0x74, 0x63, 0x68, 0x5f,
	0x73, 0x63, 0x6f, 0x72, 0x65, 0x18, 0x48, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x6d, 0x61, 0x74,
	0x63, 0x68, 0x53, 0x63, 0x6f, 0x72, 0x65, 0x22, 0xa1, 0x0c, 0x0a, 0x12, 0x53, 0x65, 0x61, 0x72,
	0x63, 0x68, 0x47, 0x6f, 0x6f, 0x64, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x18,
	0x0a, 0x07, 0x6b, 0x65, 0x79, 0x77, 0x6f, 0x72, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x07, 0x6b, 0x65, 0x79, 0x77, 0x6f, 0x72, 0x64, 0x12, 0x1f, 0x0a, 0x08, 0x63, 0x61, 0x74, 0x65,
	0x67, 0x6f, 0x72, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x08, 0x63, 0x61,
	0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x88, 0x01, 0x01, 0x12, 0x22, 0x0a, 0x0a, 0x68, 0x61, 0x73,
	0x5f, 0x63, 0x6f, 0x75, 0x70, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x08, 0x48, 0x01, 0x52,
	0x09, 0x68, 0x61, 0x73, 0x43, 0x6f, 0x75, 0x70, 0x6f, 0x6e, 0x88, 0x01, 0x01, 0x12, 0x17, 0x0a,
	0x04, 0x73, 0x6f, 0x72, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x48, 0x02, 0x52, 0x04, 0x73,
	0x6f, 0x72, 0x74, 0x88, 0x01, 0x01, 0x12, 0x1f, 0x0a, 0x08, 0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f,
	0x72, 0x6d, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x48, 0x03, 0x52, 0x08, 0x70, 0x6c, 0x61, 0x74,
	0x66, 0x6f, 0x72, 0x6d, 0x88, 0x01, 0x01, 0x12, 0x20, 0x0a, 0x09, 0x70, 0x61, 0x67, 0x65, 0x5f,
	0x73, 0x69, 0x7a, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x05, 0x48, 0x04, 0x52, 0x08, 0x70, 0x61,
	0x67, 0x65, 0x53, 0x69, 0x7a, 0x65, 0x88, 0x01, 0x01, 0x12, 0x1c, 0x0a, 0x07, 0x70, 0x61, 0x67,
	0x65, 0x5f, 0x6e, 0x6f, 0x18, 0x07, 0x20, 0x01, 0x28, 0x05, 0x48, 0x05, 0x52, 0x06, 0x70, 0x61,
	0x67, 0x65, 0x4e, 0x6f, 0x88, 0x01, 0x01, 0x12, 0x20, 0x0a, 0x09, 0x73, 0x74, 0x61, 0x72, 0x74,
	0x5f, 0x64, 0x73, 0x72, 0x18, 0x08, 0x20, 0x01, 0x28, 0x05, 0x48, 0x06, 0x52, 0x08, 0x73, 0x74,
	0x61, 0x72, 0x74, 0x44, 0x73, 0x72, 0x88, 0x01, 0x01, 0x12, 0x23, 0x0a, 0x0b, 0x65, 0x6e, 0x64,
	0x5f, 0x74, 0x6b, 0x5f, 0x72, 0x61, 0x74, 0x65, 0x18, 0x09, 0x20, 0x01, 0x28, 0x05, 0x48, 0x07,
	0x52, 0x09, 0x65, 0x6e, 0x64, 0x54, 0x6b, 0x52, 0x61, 0x74, 0x65, 0x88, 0x01, 0x01, 0x12, 0x27,
	0x0a, 0x0d, 0x73, 0x74, 0x61, 0x72, 0x74, 0x5f, 0x74, 0x6b, 0x5f, 0x72, 0x61, 0x74, 0x65, 0x18,
	0x0a, 0x20, 0x01, 0x28, 0x05, 0x48, 0x08, 0x52, 0x0b, 0x73, 0x74, 0x61, 0x72, 0x74, 0x54, 0x6b,
	0x52, 0x61, 0x74, 0x65, 0x88, 0x01, 0x01, 0x12, 0x20, 0x0a, 0x09, 0x65, 0x6e, 0x64, 0x5f, 0x70,
	0x72, 0x69, 0x63, 0x65, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x05, 0x48, 0x09, 0x52, 0x08, 0x65, 0x6e,
	0x64, 0x50, 0x72, 0x69, 0x63, 0x65, 0x88, 0x01, 0x01, 0x12, 0x24, 0x0a, 0x0b, 0x73, 0x74, 0x61,
	0x72, 0x74, 0x5f, 0x70, 0x72, 0x69, 0x63, 0x65, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x05, 0x48, 0x0a,
	0x52, 0x0a, 0x73, 0x74, 0x61, 0x72, 0x74, 0x50, 0x72, 0x69, 0x63, 0x65, 0x88, 0x01, 0x01, 0x12,
	0x24, 0x0a, 0x0b, 0x69, 0x73, 0x5f, 0x6f, 0x76, 0x65, 0x72, 0x73, 0x65, 0x61, 0x73, 0x18, 0x0d,
	0x20, 0x01, 0x28, 0x08, 0x48, 0x0b, 0x52, 0x0a, 0x69, 0x73, 0x4f, 0x76, 0x65, 0x72, 0x73, 0x65,
	0x61, 0x73, 0x88, 0x01, 0x01, 0x12, 0x1e, 0x0a, 0x08, 0x69, 0x73, 0x5f, 0x74, 0x6d, 0x61, 0x6c,
	0x6c, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x08, 0x48, 0x0c, 0x52, 0x07, 0x69, 0x73, 0x54, 0x6d, 0x61,
	0x6c, 0x6c, 0x88, 0x01, 0x01, 0x12, 0x1e, 0x0a, 0x08, 0x69, 0x74, 0x65, 0x6d, 0x5f, 0x6c, 0x6f,
	0x63, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x09, 0x48, 0x0d, 0x52, 0x07, 0x69, 0x74, 0x65, 0x6d, 0x4c,
	0x6f, 0x63, 0x88, 0x01, 0x01, 0x12, 0x24, 0x0a, 0x0b, 0x6d, 0x61, 0x74, 0x65, 0x72, 0x69, 0x61,
	0x6c, 0x5f, 0x69, 0x64, 0x18, 0x10, 0x20, 0x01, 0x28, 0x05, 0x48, 0x0e, 0x52, 0x0a, 0x6d, 0x61,
	0x74, 0x65, 0x72, 0x69, 0x61, 0x6c, 0x49, 0x64, 0x88, 0x01, 0x01, 0x12, 0x13, 0x0a, 0x02, 0x69,
	0x70, 0x18, 0x11, 0x20, 0x01, 0x28, 0x09, 0x48, 0x0f, 0x52, 0x02, 0x69, 0x70, 0x88, 0x01, 0x01,
	0x12, 0x2d, 0x0a, 0x10, 0x69, 0x6e, 0x63, 0x6c, 0x75, 0x64, 0x65, 0x5f, 0x72, 0x66, 0x64, 0x5f,
	0x72, 0x61, 0x74, 0x65, 0x18, 0x12, 0x20, 0x01, 0x28, 0x08, 0x48, 0x10, 0x52, 0x0e, 0x69, 0x6e,
	0x63, 0x6c, 0x75, 0x64, 0x65, 0x52, 0x66, 0x64, 0x52, 0x61, 0x74, 0x65, 0x88, 0x01, 0x01, 0x12,
	0x2f, 0x0a, 0x11, 0x69, 0x6e, 0x63, 0x6c, 0x75, 0x64, 0x65, 0x5f, 0x67, 0x6f, 0x6f, 0x64, 0x5f,
	0x72, 0x61, 0x74, 0x65, 0x18, 0x13, 0x20, 0x01, 0x28, 0x08, 0x48, 0x11, 0x52, 0x0f, 0x69, 0x6e,
	0x63, 0x6c, 0x75, 0x64, 0x65, 0x47, 0x6f, 0x6f, 0x64, 0x52, 0x61, 0x74, 0x65, 0x88, 0x01, 0x01,
	0x12, 0x2d, 0x0a, 0x10, 0x69, 0x6e, 0x63, 0x6c, 0x75, 0x64, 0x65, 0x5f, 0x70, 0x61, 0x79, 0x5f,
	0x72, 0x61, 0x74, 0x65, 0x18, 0x14, 0x20, 0x01, 0x28, 0x08, 0x48, 0x12, 0x52, 0x0e, 0x69, 0x6e,
	0x63, 0x6c, 0x75, 0x64, 0x65, 0x50, 0x61, 0x79, 0x52, 0x61, 0x74, 0x65, 0x88, 0x01, 0x01, 0x12,
	0x24, 0x0a, 0x0b, 0x6e, 0x65, 0x65, 0x64, 0x5f, 0x70, 0x72, 0x65, 0x70, 0x61, 0x79, 0x18, 0x15,
	0x20, 0x01, 0x28, 0x08, 0x48, 0x13, 0x52, 0x0a, 0x6e, 0x65, 0x65, 0x64, 0x50, 0x72, 0x65, 0x70,
	0x61, 0x79, 0x88, 0x01, 0x01, 0x12, 0x31, 0x0a, 0x12, 0x6e, 0x65, 0x65, 0x64, 0x5f, 0x66, 0x72,
	0x65, 0x65, 0x5f, 0x73, 0x68, 0x69, 0x70, 0x6d, 0x65, 0x6e, 0x74, 0x18, 0x16, 0x20, 0x01, 0x28,
	0x08, 0x48, 0x14, 0x52, 0x10, 0x6e, 0x65, 0x65, 0x64, 0x46, 0x72, 0x65, 0x65, 0x53, 0x68, 0x69,
	0x70, 0x6d, 0x65, 0x6e, 0x74, 0x88, 0x01, 0x01, 0x12, 0x20, 0x0a, 0x09, 0x6e, 0x70, 0x78, 0x5f,
	0x6c, 0x65, 0x76, 0x65, 0x6c, 0x18, 0x17, 0x20, 0x01, 0x28, 0x05, 0x48, 0x15, 0x52, 0x08, 0x6e,
	0x70, 0x78, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x88, 0x01, 0x01, 0x12, 0x28, 0x0a, 0x0e, 0x65, 0x6e,
	0x64, 0x5f, 0x6b, 0x61, 0x5f, 0x74, 0x6b, 0x5f, 0x72, 0x61, 0x74, 0x65, 0x18, 0x18, 0x20, 0x01,
	0x28, 0x05, 0x48, 0x16, 0x52, 0x0b, 0x65, 0x6e, 0x64, 0x4b, 0x61, 0x54, 0x6b, 0x52, 0x61, 0x74,
	0x65, 0x88, 0x01, 0x01, 0x12, 0x2c, 0x0a, 0x10, 0x73, 0x74, 0x61, 0x72, 0x74, 0x5f, 0x6b, 0x61,
	0x5f, 0x74, 0x6b, 0x5f, 0x72, 0x61, 0x74, 0x65, 0x18, 0x19, 0x20, 0x01, 0x28, 0x05, 0x48, 0x17,
	0x52, 0x0d, 0x73, 0x74, 0x61, 0x72, 0x74, 0x4b, 0x61, 0x54, 0x6b, 0x52, 0x61, 0x74, 0x65, 0x88,
	0x01, 0x01, 0x12, 0x30, 0x0a, 0x12, 0x6c, 0x6f, 0x63, 0x6b, 0x5f, 0x72, 0x61, 0x74, 0x65, 0x5f,
	0x65, 0x6e, 0x64, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x1a, 0x20, 0x01, 0x28, 0x04, 0x48, 0x18,
	0x52, 0x0f, 0x6c, 0x6f, 0x63, 0x6b, 0x52, 0x61, 0x74, 0x65, 0x45, 0x6e, 0x64, 0x54, 0x69, 0x6d,
	0x65, 0x88, 0x01, 0x01, 0x12, 0x34, 0x0a, 0x14, 0x6c, 0x6f, 0x63, 0x6b, 0x5f, 0x72, 0x61, 0x74,
	0x65, 0x5f, 0x73, 0x74, 0x61, 0x72, 0x74, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x1b, 0x20, 0x01,
	0x28, 0x04, 0x48, 0x19, 0x52, 0x11, 0x6c, 0x6f, 0x63, 0x6b, 0x52, 0x61, 0x74, 0x65, 0x53, 0x74,
	0x61, 0x72, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x88, 0x01, 0x01, 0x12, 0x24, 0x0a, 0x0b, 0x72, 0x65,
	0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x1c, 0x20, 0x01, 0x28, 0x09, 0x48,
	0x1a, 0x52, 0x0a, 0x72, 0x65, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x88, 0x01, 0x01,
	0x12, 0x22, 0x0a, 0x0a, 0x73, 0x70, 0x65, 0x63, 0x69, 0x61, 0x6c, 0x5f, 0x69, 0x64, 0x18, 0x1d,
	0x20, 0x01, 0x28, 0x09, 0x48, 0x1b, 0x52, 0x09, 0x73, 0x70, 0x65, 0x63, 0x69, 0x61, 0x6c, 0x49,
	0x64, 0x88, 0x01, 0x01, 0x42, 0x0b, 0x0a, 0x09, 0x5f, 0x63, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72,
	0x79, 0x42, 0x0d, 0x0a, 0x0b, 0x5f, 0x68, 0x61, 0x73, 0x5f, 0x63, 0x6f, 0x75, 0x70, 0x6f, 0x6e,
	0x42, 0x07, 0x0a, 0x05, 0x5f, 0x73, 0x6f, 0x72, 0x74, 0x42, 0x0b, 0x0a, 0x09, 0x5f, 0x70, 0x6c,
	0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x42, 0x0c, 0x0a, 0x0a, 0x5f, 0x70, 0x61, 0x67, 0x65, 0x5f,
	0x73, 0x69, 0x7a, 0x65, 0x42, 0x0a, 0x0a, 0x08, 0x5f, 0x70, 0x61, 0x67, 0x65, 0x5f, 0x6e, 0x6f,
	0x42, 0x0c, 0x0a, 0x0a, 0x5f, 0x73, 0x74, 0x61, 0x72, 0x74, 0x5f, 0x64, 0x73, 0x72, 0x42, 0x0e,
	0x0a, 0x0c, 0x5f, 0x65, 0x6e, 0x64, 0x5f, 0x74, 0x6b, 0x5f, 0x72, 0x61, 0x74, 0x65, 0x42, 0x10,
	0x0a, 0x0e, 0x5f, 0x73, 0x74, 0x61, 0x72, 0x74, 0x5f, 0x74, 0x6b, 0x5f, 0x72, 0x61, 0x74, 0x65,
	0x42, 0x0c, 0x0a, 0x0a, 0x5f, 0x65, 0x6e, 0x64, 0x5f, 0x70, 0x72, 0x69, 0x63, 0x65, 0x42, 0x0e,
	0x0a, 0x0c, 0x5f, 0x73, 0x74, 0x61, 0x72, 0x74, 0x5f, 0x70, 0x72, 0x69, 0x63, 0x65, 0x42, 0x0e,
	0x0a, 0x0c, 0x5f, 0x69, 0x73, 0x5f, 0x6f, 0x76, 0x65, 0x72, 0x73, 0x65, 0x61, 0x73, 0x42, 0x0b,
	0x0a, 0x09, 0x5f, 0x69, 0x73, 0x5f, 0x74, 0x6d, 0x61, 0x6c, 0x6c, 0x42, 0x0b, 0x0a, 0x09, 0x5f,
	0x69, 0x74, 0x65, 0x6d, 0x5f, 0x6c, 0x6f, 0x63, 0x42, 0x0e, 0x0a, 0x0c, 0x5f, 0x6d, 0x61, 0x74,
	0x65, 0x72, 0x69, 0x61, 0x6c, 0x5f, 0x69, 0x64, 0x42, 0x05, 0x0a, 0x03, 0x5f, 0x69, 0x70, 0x42,
	0x13, 0x0a, 0x11, 0x5f, 0x69, 0x6e, 0x63, 0x6c, 0x75, 0x64, 0x65, 0x5f, 0x72, 0x66, 0x64, 0x5f,
	0x72, 0x61, 0x74, 0x65, 0x42, 0x14, 0x0a, 0x12, 0x5f, 0x69, 0x6e, 0x63, 0x6c, 0x75, 0x64, 0x65,
	0x5f, 0x67, 0x6f, 0x6f, 0x64, 0x5f, 0x72, 0x61, 0x74, 0x65, 0x42, 0x13, 0x0a, 0x11, 0x5f, 0x69,
	0x6e, 0x63, 0x6c, 0x75, 0x64, 0x65, 0x5f, 0x70, 0x61, 0x79, 0x5f, 0x72, 0x61, 0x74, 0x65, 0x42,
	0x0e, 0x0a, 0x0c, 0x5f, 0x6e, 0x65, 0x65, 0x64, 0x5f, 0x70, 0x72, 0x65, 0x70, 0x61, 0x79, 0x42,
	0x15, 0x0a, 0x13, 0x5f, 0x6e, 0x65, 0x65, 0x64, 0x5f, 0x66, 0x72, 0x65, 0x65, 0x5f, 0x73, 0x68,
	0x69, 0x70, 0x6d, 0x65, 0x6e, 0x74, 0x42, 0x0c, 0x0a, 0x0a, 0x5f, 0x6e, 0x70, 0x78, 0x5f, 0x6c,
	0x65, 0x76, 0x65, 0x6c, 0x42, 0x11, 0x0a, 0x0f, 0x5f, 0x65, 0x6e, 0x64, 0x5f, 0x6b, 0x61, 0x5f,
	0x74, 0x6b, 0x5f, 0x72, 0x61, 0x74, 0x65, 0x42, 0x13, 0x0a, 0x11, 0x5f, 0x73, 0x74, 0x61, 0x72,
	0x74, 0x5f, 0x6b, 0x61, 0x5f, 0x74, 0x6b, 0x5f, 0x72, 0x61, 0x74, 0x65, 0x42, 0x15, 0x0a, 0x13,
	0x5f, 0x6c, 0x6f, 0x63, 0x6b, 0x5f, 0x72, 0x61, 0x74, 0x65, 0x5f, 0x65, 0x6e, 0x64, 0x5f, 0x74,
	0x69, 0x6d, 0x65, 0x42, 0x17, 0x0a, 0x15, 0x5f, 0x6c, 0x6f, 0x63, 0x6b, 0x5f, 0x72, 0x61, 0x74,
	0x65, 0x5f, 0x73, 0x74, 0x61, 0x72, 0x74, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x42, 0x0e, 0x0a, 0x0c,
	0x5f, 0x72, 0x65, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x42, 0x0d, 0x0a, 0x0b,
	0x5f, 0x73, 0x70, 0x65, 0x63, 0x69, 0x61, 0x6c, 0x5f, 0x69, 0x64, 0x22, 0x60, 0x0a, 0x12, 0x53,
	0x65, 0x61, 0x72, 0x63, 0x68, 0x47, 0x6f, 0x6f, 0x64, 0x73, 0x4d, 0x73, 0x67, 0x44, 0x61, 0x74,
	0x61, 0x12, 0x23, 0x0a, 0x0d, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x5f, 0x72, 0x65, 0x73, 0x75, 0x6c,
	0x74, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0c, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x52,
	0x65, 0x73, 0x75, 0x6c, 0x74, 0x73, 0x12, 0x25, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x02,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x74, 0x62, 0x70, 0x62, 0x2e, 0x47, 0x6f, 0x6f, 0x64,
	0x73, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x22, 0x69, 0x0a,
	0x13, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x47, 0x6f, 0x6f, 0x64, 0x73, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x6d, 0x73, 0x67, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6d, 0x73, 0x67, 0x12, 0x2c, 0x0a, 0x04, 0x64, 0x61,
	0x74, 0x61, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x74, 0x62, 0x70, 0x62, 0x2e,
	0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x47, 0x6f, 0x6f, 0x64, 0x73, 0x4d, 0x73, 0x67, 0x44, 0x61,
	0x74, 0x61, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x22, 0x8a, 0x01, 0x0a, 0x16, 0x44, 0x64, 0x78,
	0x54, 0x62, 0x41, 0x70, 0x69, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x47, 0x6f, 0x6f, 0x64, 0x73,
	0x52, 0x65, 0x73, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x6d, 0x73, 0x67, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6d, 0x73, 0x67, 0x12, 0x23, 0x0a, 0x0d, 0x74, 0x6f, 0x74,
	0x61, 0x6c, 0x5f, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x0c, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x73, 0x12, 0x25,
	0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x74,
	0x62, 0x70, 0x62, 0x2e, 0x47, 0x6f, 0x6f, 0x64, 0x73, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x52,
	0x04, 0x64, 0x61, 0x74, 0x61, 0x22, 0xc0, 0x04, 0x0a, 0x15, 0x50, 0x72, 0x6f, 0x6d, 0x6f, 0x74,
	0x65, 0x55, 0x52, 0x4c, 0x42, 0x79, 0x49, 0x44, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12,
	0x21, 0x0a, 0x09, 0x73, 0x69, 0x67, 0x6e, 0x61, 0x74, 0x75, 0x72, 0x65, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x09, 0x48, 0x00, 0x52, 0x09, 0x73, 0x69, 0x67, 0x6e, 0x61, 0x74, 0x75, 0x72, 0x65, 0x88,
	0x01, 0x01, 0x12, 0x15, 0x0a, 0x03, 0x70, 0x69, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x48,
	0x01, 0x52, 0x03, 0x70, 0x69, 0x64, 0x88, 0x01, 0x01, 0x12, 0x24, 0x0a, 0x0b, 0x72, 0x65, 0x6c,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x48, 0x02,
	0x52, 0x0a, 0x72, 0x65, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x88, 0x01, 0x01, 0x12,
	0x17, 0x0a, 0x04, 0x74, 0x70, 0x77, 0x64, 0x18, 0x06, 0x20, 0x01, 0x28, 0x08, 0x48, 0x03, 0x52,
	0x04, 0x74, 0x70, 0x77, 0x64, 0x88, 0x01, 0x01, 0x12, 0x24, 0x0a, 0x0b, 0x61, 0x63, 0x74, 0x69,
	0x76, 0x69, 0x74, 0x79, 0x5f, 0x69, 0x64, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x48, 0x04, 0x52,
	0x0a, 0x61, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x49, 0x64, 0x88, 0x01, 0x01, 0x12, 0x17,
	0x0a, 0x04, 0x6c, 0x6f, 0x67, 0x6f, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x48, 0x05, 0x52, 0x04,
	0x6c, 0x6f, 0x67, 0x6f, 0x88, 0x01, 0x01, 0x12, 0x17, 0x0a, 0x04, 0x74, 0x65, 0x78, 0x74, 0x18,
	0x09, 0x20, 0x01, 0x28, 0x09, 0x48, 0x06, 0x52, 0x04, 0x74, 0x65, 0x78, 0x74, 0x88, 0x01, 0x01,
	0x12, 0x20, 0x0a, 0x09, 0x69, 0x74, 0x65, 0x6d, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x18, 0x0a, 0x20,
	0x01, 0x28, 0x08, 0x48, 0x07, 0x52, 0x08, 0x69, 0x74, 0x65, 0x6d, 0x49, 0x6e, 0x66, 0x6f, 0x88,
	0x01, 0x01, 0x12, 0x1b, 0x0a, 0x06, 0x65, 0x78, 0x74, 0x73, 0x70, 0x6b, 0x18, 0x0b, 0x20, 0x01,
	0x28, 0x08, 0x48, 0x08, 0x52, 0x06, 0x65, 0x78, 0x74, 0x73, 0x70, 0x6b, 0x88, 0x01, 0x01, 0x12,
	0x24, 0x0a, 0x0b, 0x6c, 0x65, 0x66, 0x74, 0x5f, 0x73, 0x79, 0x6d, 0x62, 0x6f, 0x6c, 0x18, 0x0c,
	0x20, 0x01, 0x28, 0x09, 0x48, 0x09, 0x52, 0x0a, 0x6c, 0x65, 0x66, 0x74, 0x53, 0x79, 0x6d, 0x62,
	0x6f, 0x6c, 0x88, 0x01, 0x01, 0x12, 0x26, 0x0a, 0x0c, 0x72, 0x69, 0x67, 0x68, 0x74, 0x5f, 0x73,
	0x79, 0x6d, 0x62, 0x6f, 0x6c, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x09, 0x48, 0x0a, 0x52, 0x0b, 0x72,
	0x69, 0x67, 0x68, 0x74, 0x53, 0x79, 0x6d, 0x62, 0x6f, 0x6c, 0x88, 0x01, 0x01, 0x12, 0x20, 0x0a,
	0x09, 0x73, 0x68, 0x6f, 0x72, 0x74, 0x5f, 0x75, 0x72, 0x6c, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x08,
	0x48, 0x0b, 0x52, 0x08, 0x73, 0x68, 0x6f, 0x72, 0x74, 0x55, 0x72, 0x6c, 0x88, 0x01, 0x01, 0x42,
	0x0c, 0x0a, 0x0a, 0x5f, 0x73, 0x69, 0x67, 0x6e, 0x61, 0x74, 0x75, 0x72, 0x65, 0x42, 0x06, 0x0a,
	0x04, 0x5f, 0x70, 0x69, 0x64, 0x42, 0x0e, 0x0a, 0x0c, 0x5f, 0x72, 0x65, 0x6c, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x42, 0x07, 0x0a, 0x05, 0x5f, 0x74, 0x70, 0x77, 0x64, 0x42, 0x0e,
	0x0a, 0x0c, 0x5f, 0x61, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x5f, 0x69, 0x64, 0x42, 0x07,
	0x0a, 0x05, 0x5f, 0x6c, 0x6f, 0x67, 0x6f, 0x42, 0x07, 0x0a, 0x05, 0x5f, 0x74, 0x65, 0x78, 0x74,
	0x42, 0x0c, 0x0a, 0x0a, 0x5f, 0x69, 0x74, 0x65, 0x6d, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x42, 0x09,
	0x0a, 0x07, 0x5f, 0x65, 0x78, 0x74, 0x73, 0x70, 0x6b, 0x42, 0x0e, 0x0a, 0x0c, 0x5f, 0x6c, 0x65,
	0x66, 0x74, 0x5f, 0x73, 0x79, 0x6d, 0x62, 0x6f, 0x6c, 0x42, 0x0f, 0x0a, 0x0d, 0x5f, 0x72, 0x69,
	0x67, 0x68, 0x74, 0x5f, 0x73, 0x79, 0x6d, 0x62, 0x6f, 0x6c, 0x42, 0x0c, 0x0a, 0x0a, 0x5f, 0x73,
	0x68, 0x6f, 0x72, 0x74, 0x5f, 0x75, 0x72, 0x6c, 0x22, 0xc3, 0x04, 0x0a, 0x16, 0x50, 0x72, 0x6f,
	0x6d, 0x6f, 0x74, 0x65, 0x55, 0x52, 0x4c, 0x42, 0x79, 0x54, 0x4b, 0x4c, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x10, 0x0a, 0x03, 0x74, 0x6b, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x03, 0x74, 0x6b, 0x6c, 0x12, 0x21, 0x0a, 0x09, 0x73, 0x69, 0x67, 0x6e, 0x61, 0x74, 0x75,
	0x72, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x09, 0x73, 0x69, 0x67, 0x6e,
	0x61, 0x74, 0x75, 0x72, 0x65, 0x88, 0x01, 0x01, 0x12, 0x15, 0x0a, 0x03, 0x70, 0x69, 0x64, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x09, 0x48, 0x01, 0x52, 0x03, 0x70, 0x69, 0x64, 0x88, 0x01, 0x01, 0x12,
	0x24, 0x0a, 0x0b, 0x72, 0x65, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x05,
	0x20, 0x01, 0x28, 0x09, 0x48, 0x02, 0x52, 0x0a, 0x72, 0x65, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x49, 0x64, 0x88, 0x01, 0x01, 0x12, 0x17, 0x0a, 0x04, 0x74, 0x70, 0x77, 0x64, 0x18, 0x06, 0x20,
	0x01, 0x28, 0x08, 0x48, 0x03, 0x52, 0x04, 0x74, 0x70, 0x77, 0x64, 0x88, 0x01, 0x01, 0x12, 0x24,
	0x0a, 0x0b, 0x61, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x5f, 0x69, 0x64, 0x18, 0x07, 0x20,
	0x01, 0x28, 0x09, 0x48, 0x04, 0x52, 0x0a, 0x61, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x49,
	0x64, 0x88, 0x01, 0x01, 0x12, 0x17, 0x0a, 0x04, 0x6c, 0x6f, 0x67, 0x6f, 0x18, 0x08, 0x20, 0x01,
	0x28, 0x09, 0x48, 0x05, 0x52, 0x04, 0x6c, 0x6f, 0x67, 0x6f, 0x88, 0x01, 0x01, 0x12, 0x17, 0x0a,
	0x04, 0x74, 0x65, 0x78, 0x74, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x48, 0x06, 0x52, 0x04, 0x74,
	0x65, 0x78, 0x74, 0x88, 0x01, 0x01, 0x12, 0x20, 0x0a, 0x09, 0x69, 0x74, 0x65, 0x6d, 0x5f, 0x69,
	0x6e, 0x66, 0x6f, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x08, 0x48, 0x07, 0x52, 0x08, 0x69, 0x74, 0x65,
	0x6d, 0x49, 0x6e, 0x66, 0x6f, 0x88, 0x01, 0x01, 0x12, 0x1b, 0x0a, 0x06, 0x65, 0x78, 0x74, 0x73,
	0x70, 0x6b, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x08, 0x48, 0x08, 0x52, 0x06, 0x65, 0x78, 0x74, 0x73,
	0x70, 0x6b, 0x88, 0x01, 0x01, 0x12, 0x24, 0x0a, 0x0b, 0x6c, 0x65, 0x66, 0x74, 0x5f, 0x73, 0x79,
	0x6d, 0x62, 0x6f, 0x6c, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x09, 0x48, 0x09, 0x52, 0x0a, 0x6c, 0x65,
	0x66, 0x74, 0x53, 0x79, 0x6d, 0x62, 0x6f, 0x6c, 0x88, 0x01, 0x01, 0x12, 0x26, 0x0a, 0x0c, 0x72,
	0x69, 0x67, 0x68, 0x74, 0x5f, 0x73, 0x79, 0x6d, 0x62, 0x6f, 0x6c, 0x18, 0x0d, 0x20, 0x01, 0x28,
	0x09, 0x48, 0x0a, 0x52, 0x0b, 0x72, 0x69, 0x67, 0x68, 0x74, 0x53, 0x79, 0x6d, 0x62, 0x6f, 0x6c,
	0x88, 0x01, 0x01, 0x12, 0x20, 0x0a, 0x09, 0x73, 0x68, 0x6f, 0x72, 0x74, 0x5f, 0x75, 0x72, 0x6c,
	0x18, 0x0e, 0x20, 0x01, 0x28, 0x08, 0x48, 0x0b, 0x52, 0x08, 0x73, 0x68, 0x6f, 0x72, 0x74, 0x55,
	0x72, 0x6c, 0x88, 0x01, 0x01, 0x42, 0x0c, 0x0a, 0x0a, 0x5f, 0x73, 0x69, 0x67, 0x6e, 0x61, 0x74,
	0x75, 0x72, 0x65, 0x42, 0x06, 0x0a, 0x04, 0x5f, 0x70, 0x69, 0x64, 0x42, 0x0e, 0x0a, 0x0c, 0x5f,
	0x72, 0x65, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x42, 0x07, 0x0a, 0x05, 0x5f,
	0x74, 0x70, 0x77, 0x64, 0x42, 0x0e, 0x0a, 0x0c, 0x5f, 0x61, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74,
	0x79, 0x5f, 0x69, 0x64, 0x42, 0x07, 0x0a, 0x05, 0x5f, 0x6c, 0x6f, 0x67, 0x6f, 0x42, 0x07, 0x0a,
	0x05, 0x5f, 0x74, 0x65, 0x78, 0x74, 0x42, 0x0c, 0x0a, 0x0a, 0x5f, 0x69, 0x74, 0x65, 0x6d, 0x5f,
	0x69, 0x6e, 0x66, 0x6f, 0x42, 0x09, 0x0a, 0x07, 0x5f, 0x65, 0x78, 0x74, 0x73, 0x70, 0x6b, 0x42,
	0x0e, 0x0a, 0x0c, 0x5f, 0x6c, 0x65, 0x66, 0x74, 0x5f, 0x73, 0x79, 0x6d, 0x62, 0x6f, 0x6c, 0x42,
	0x0f, 0x0a, 0x0d, 0x5f, 0x72, 0x69, 0x67, 0x68, 0x74, 0x5f, 0x73, 0x79, 0x6d, 0x62, 0x6f, 0x6c,
	0x42, 0x0c, 0x0a, 0x0a, 0x5f, 0x73, 0x68, 0x6f, 0x72, 0x74, 0x5f, 0x75, 0x72, 0x6c, 0x22, 0xc5,
	0x03, 0x0a, 0x08, 0x49, 0x74, 0x65, 0x6d, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x14, 0x0a, 0x05, 0x74,
	0x69, 0x74, 0x6c, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x69, 0x74, 0x6c,
	0x65, 0x12, 0x19, 0x0a, 0x08, 0x70, 0x69, 0x63, 0x74, 0x5f, 0x75, 0x72, 0x6c, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x07, 0x70, 0x69, 0x63, 0x74, 0x55, 0x72, 0x6c, 0x12, 0x34, 0x0a, 0x0c,
	0x73, 0x6d, 0x61, 0x6c, 0x6c, 0x5f, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x73, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x11, 0x2e, 0x74, 0x62, 0x70, 0x62, 0x2e, 0x53, 0x6d, 0x61, 0x6c, 0x6c, 0x49,
	0x6d, 0x61, 0x67, 0x65, 0x73, 0x52, 0x0b, 0x73, 0x6d, 0x61, 0x6c, 0x6c, 0x49, 0x6d, 0x61, 0x67,
	0x65, 0x73, 0x12, 0x23, 0x0a, 0x0d, 0x72, 0x65, 0x73, 0x65, 0x72, 0x76, 0x65, 0x5f, 0x70, 0x72,
	0x69, 0x63, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0c, 0x72, 0x65, 0x73, 0x65, 0x72,
	0x76, 0x65, 0x50, 0x72, 0x69, 0x63, 0x65, 0x12, 0x24, 0x0a, 0x0e, 0x7a, 0x6b, 0x5f, 0x66, 0x69,
	0x6e, 0x61, 0x6c, 0x5f, 0x70, 0x72, 0x69, 0x63, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x0c, 0x7a, 0x6b, 0x46, 0x69, 0x6e, 0x61, 0x6c, 0x50, 0x72, 0x69, 0x63, 0x65, 0x12, 0x24, 0x0a,
	0x0e, 0x71, 0x68, 0x5f, 0x66, 0x69, 0x6e, 0x61, 0x6c, 0x5f, 0x70, 0x72, 0x69, 0x63, 0x65, 0x18,
	0x06, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0c, 0x71, 0x68, 0x46, 0x69, 0x6e, 0x61, 0x6c, 0x50, 0x72,
	0x69, 0x63, 0x65, 0x12, 0x2e, 0x0a, 0x13, 0x71, 0x68, 0x5f, 0x66, 0x69, 0x6e, 0x61, 0x6c, 0x5f,
	0x63, 0x6f, 0x6d, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x07, 0x20, 0x01, 0x28, 0x02,
	0x52, 0x11, 0x71, 0x68, 0x46, 0x69, 0x6e, 0x61, 0x6c, 0x43, 0x6f, 0x6d, 0x6d, 0x69, 0x73, 0x73,
	0x69, 0x6f, 0x6e, 0x12, 0x1f, 0x0a, 0x0b, 0x61, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x5f,
	0x69, 0x64, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x61, 0x63, 0x74, 0x69, 0x76, 0x69,
	0x74, 0x79, 0x49, 0x64, 0x12, 0x1b, 0x0a, 0x09, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x74, 0x79, 0x70,
	0x65, 0x18, 0x09, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x75, 0x73, 0x65, 0x72, 0x54, 0x79, 0x70,
	0x65, 0x12, 0x16, 0x0a, 0x06, 0x76, 0x6f, 0x6c, 0x75, 0x6d, 0x65, 0x18, 0x0a, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x06, 0x76, 0x6f, 0x6c, 0x75, 0x6d, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x73, 0x65, 0x6c,
	0x6c, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x04, 0x52, 0x08, 0x73, 0x65,
	0x6c, 0x6c, 0x65, 0x72, 0x49, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x69, 0x63, 0x6b, 0x18, 0x0c,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x69, 0x63, 0x6b, 0x12, 0x2a, 0x0a, 0x11, 0x6d, 0x61,
	0x74, 0x65, 0x72, 0x69, 0x61, 0x6c, 0x5f, 0x6c, 0x69, 0x62, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18,
	0x0d, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x6d, 0x61, 0x74, 0x65, 0x72, 0x69, 0x61, 0x6c, 0x4c,
	0x69, 0x62, 0x54, 0x79, 0x70, 0x65, 0x22, 0x83, 0x0a, 0x0a, 0x0f, 0x50, 0x72, 0x6f, 0x6d, 0x6f,
	0x74, 0x65, 0x64, 0x55, 0x52, 0x4c, 0x44, 0x61, 0x74, 0x61, 0x12, 0x1f, 0x0a, 0x0b, 0x63, 0x61,
	0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52,
	0x0a, 0x63, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x49, 0x64, 0x12, 0x28, 0x0a, 0x10, 0x63,
	0x6f, 0x75, 0x70, 0x6f, 0x6e, 0x5f, 0x63, 0x6c, 0x69, 0x63, 0x6b, 0x5f, 0x75, 0x72, 0x6c, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x63, 0x6f, 0x75, 0x70, 0x6f, 0x6e, 0x43, 0x6c, 0x69,
	0x63, 0x6b, 0x55, 0x72, 0x6c, 0x12, 0x2a, 0x0a, 0x11, 0x63, 0x6f, 0x75, 0x70, 0x6f, 0x6e, 0x5f,
	0x73, 0x74, 0x61, 0x72, 0x74, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0f, 0x63, 0x6f, 0x75, 0x70, 0x6f, 0x6e, 0x53, 0x74, 0x61, 0x72, 0x74, 0x54, 0x69, 0x6d,
	0x65, 0x12, 0x26, 0x0a, 0x0f, 0x63, 0x6f, 0x75, 0x70, 0x6f, 0x6e, 0x5f, 0x65, 0x6e, 0x64, 0x5f,
	0x74, 0x69, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x63, 0x6f, 0x75, 0x70,
	0x6f, 0x6e, 0x45, 0x6e, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x63, 0x6f, 0x75,
	0x70, 0x6f, 0x6e, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a,
	0x63, 0x6f, 0x75, 0x70, 0x6f, 0x6e, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x16, 0x0a, 0x06, 0x63, 0x6f,
	0x75, 0x70, 0x6f, 0x6e, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x63, 0x6f, 0x75, 0x70,
	0x6f, 0x6e, 0x12, 0x17, 0x0a, 0x07, 0x69, 0x74, 0x65, 0x6d, 0x5f, 0x69, 0x64, 0x18, 0x07, 0x20,
	0x01, 0x28, 0x04, 0x52, 0x06, 0x69, 0x74, 0x65, 0x6d, 0x49, 0x64, 0x12, 0x2e, 0x0a, 0x13, 0x6d,
	0x61, 0x78, 0x5f, 0x63, 0x6f, 0x6d, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x5f, 0x72, 0x61,
	0x74, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x11, 0x6d, 0x61, 0x78, 0x43, 0x6f, 0x6d,
	0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x61, 0x74, 0x65, 0x12, 0x2c, 0x0a, 0x12, 0x63,
	0x6f, 0x75, 0x70, 0x6f, 0x6e, 0x5f, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x5f, 0x63, 0x6f, 0x75, 0x6e,
	0x74, 0x18, 0x09, 0x20, 0x01, 0x28, 0x05, 0x52, 0x10, 0x63, 0x6f, 0x75, 0x70, 0x6f, 0x6e, 0x54,
	0x6f, 0x74, 0x61, 0x6c, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x2e, 0x0a, 0x13, 0x63, 0x6f, 0x75,
	0x70, 0x6f, 0x6e, 0x5f, 0x72, 0x65, 0x6d, 0x61, 0x69, 0x6e, 0x5f, 0x63, 0x6f, 0x75, 0x6e, 0x74,
	0x18, 0x0a, 0x20, 0x01, 0x28, 0x05, 0x52, 0x11, 0x63, 0x6f, 0x75, 0x70, 0x6f, 0x6e, 0x52, 0x65,
	0x6d, 0x61, 0x69, 0x6e, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x33, 0x0a, 0x16, 0x6d, 0x6d, 0x5f,
	0x63, 0x6f, 0x75, 0x70, 0x6f, 0x6e, 0x5f, 0x72, 0x65, 0x6d, 0x61, 0x69, 0x6e, 0x5f, 0x63, 0x6f,
	0x75, 0x6e, 0x74, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x05, 0x52, 0x13, 0x6d, 0x6d, 0x43, 0x6f, 0x75,
	0x70, 0x6f, 0x6e, 0x52, 0x65, 0x6d, 0x61, 0x69, 0x6e, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x31,
	0x0a, 0x15, 0x6d, 0x6d, 0x5f, 0x63, 0x6f, 0x75, 0x70, 0x6f, 0x6e, 0x5f, 0x74, 0x6f, 0x74, 0x61,
	0x6c, 0x5f, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x05, 0x52, 0x12, 0x6d,
	0x6d, 0x43, 0x6f, 0x75, 0x70, 0x6f, 0x6e, 0x54, 0x6f, 0x74, 0x61, 0x6c, 0x43, 0x6f, 0x75, 0x6e,
	0x74, 0x12, 0x2d, 0x0a, 0x13, 0x6d, 0x6d, 0x5f, 0x63, 0x6f, 0x75, 0x70, 0x6f, 0x6e, 0x5f, 0x63,
	0x6c, 0x69, 0x63, 0x6b, 0x5f, 0x75, 0x72, 0x6c, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x09, 0x52, 0x10,
	0x6d, 0x6d, 0x43, 0x6f, 0x75, 0x70, 0x6f, 0x6e, 0x43, 0x6c, 0x69, 0x63, 0x6b, 0x55, 0x72, 0x6c,
	0x12, 0x2f, 0x0a, 0x14, 0x6d, 0x6d, 0x5f, 0x63, 0x6f, 0x75, 0x70, 0x6f, 0x6e, 0x5f, 0x73, 0x74,
	0x61, 0x72, 0x74, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x09, 0x52, 0x11,
	0x6d, 0x6d, 0x43, 0x6f, 0x75, 0x70, 0x6f, 0x6e, 0x53, 0x74, 0x61, 0x72, 0x74, 0x54, 0x69, 0x6d,
	0x65, 0x12, 0x2b, 0x0a, 0x12, 0x6d, 0x6d, 0x5f, 0x63, 0x6f, 0x75, 0x70, 0x6f, 0x6e, 0x5f, 0x65,
	0x6e, 0x64, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x6d,
	0x6d, 0x43, 0x6f, 0x75, 0x70, 0x6f, 0x6e, 0x45, 0x6e, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x24,
	0x0a, 0x0e, 0x6d, 0x6d, 0x5f, 0x63, 0x6f, 0x75, 0x70, 0x6f, 0x6e, 0x5f, 0x69, 0x6e, 0x66, 0x6f,
	0x18, 0x10, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x6d, 0x6d, 0x43, 0x6f, 0x75, 0x70, 0x6f, 0x6e,
	0x49, 0x6e, 0x66, 0x6f, 0x12, 0x1f, 0x0a, 0x0b, 0x63, 0x6f, 0x75, 0x70, 0x6f, 0x6e, 0x5f, 0x74,
	0x79, 0x70, 0x65, 0x18, 0x11, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0a, 0x63, 0x6f, 0x75, 0x70, 0x6f,
	0x6e, 0x54, 0x79, 0x70, 0x65, 0x12, 0x19, 0x0a, 0x08, 0x69, 0x74, 0x65, 0x6d, 0x5f, 0x75, 0x72,
	0x6c, 0x18, 0x12, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x69, 0x74, 0x65, 0x6d, 0x55, 0x72, 0x6c,
	0x12, 0x1f, 0x0a, 0x0b, 0x63, 0x6f, 0x75, 0x70, 0x6f, 0x6e, 0x5f, 0x74, 0x70, 0x77, 0x64, 0x18,
	0x13, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x63, 0x6f, 0x75, 0x70, 0x6f, 0x6e, 0x54, 0x70, 0x77,
	0x64, 0x12, 0x28, 0x0a, 0x10, 0x6c, 0x6f, 0x6e, 0x67, 0x5f, 0x63, 0x6f, 0x75, 0x70, 0x6f, 0x6e,
	0x5f, 0x74, 0x70, 0x77, 0x64, 0x18, 0x14, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x6c, 0x6f, 0x6e,
	0x67, 0x43, 0x6f, 0x75, 0x70, 0x6f, 0x6e, 0x54, 0x70, 0x77, 0x64, 0x12, 0x1b, 0x0a, 0x09, 0x69,
	0x74, 0x65, 0x6d, 0x5f, 0x74, 0x70, 0x77, 0x64, 0x18, 0x15, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08,
	0x69, 0x74, 0x65, 0x6d, 0x54, 0x70, 0x77, 0x64, 0x12, 0x24, 0x0a, 0x0e, 0x6c, 0x6f, 0x6e, 0x67,
	0x5f, 0x69, 0x74, 0x65, 0x6d, 0x5f, 0x74, 0x70, 0x77, 0x64, 0x18, 0x16, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0c, 0x6c, 0x6f, 0x6e, 0x67, 0x49, 0x74, 0x65, 0x6d, 0x54, 0x70, 0x77, 0x64, 0x12, 0x2a,
	0x0a, 0x08, 0x69, 0x74, 0x65, 0x6d, 0x49, 0x6e, 0x66, 0x6f, 0x18, 0x17, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x0e, 0x2e, 0x74, 0x62, 0x70, 0x62, 0x2e, 0x49, 0x74, 0x65, 0x6d, 0x49, 0x6e, 0x66, 0x6f,
	0x52, 0x08, 0x69, 0x74, 0x65, 0x6d, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x24, 0x0a, 0x0e, 0x79, 0x73,
	0x79, 0x6c, 0x5f, 0x63, 0x6c, 0x69, 0x63, 0x6b, 0x5f, 0x75, 0x72, 0x6c, 0x18, 0x18, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0c, 0x79, 0x73, 0x79, 0x6c, 0x43, 0x6c, 0x69, 0x63, 0x6b, 0x55, 0x72, 0x6c,
	0x12, 0x22, 0x0a, 0x0d, 0x79, 0x73, 0x79, 0x6c, 0x5f, 0x74, 0x6c, 0x6a, 0x5f, 0x66, 0x61, 0x63,
	0x65, 0x18, 0x19, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x79, 0x73, 0x79, 0x6c, 0x54, 0x6c, 0x6a,
	0x46, 0x61, 0x63, 0x65, 0x12, 0x2b, 0x0a, 0x12, 0x79, 0x73, 0x79, 0x6c, 0x5f, 0x74, 0x6c, 0x6a,
	0x5f, 0x73, 0x65, 0x6e, 0x64, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x1a, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0f, 0x79, 0x73, 0x79, 0x6c, 0x54, 0x6c, 0x6a, 0x53, 0x65, 0x6e, 0x64, 0x54, 0x69, 0x6d,
	0x65, 0x12, 0x30, 0x0a, 0x14, 0x79, 0x73, 0x79, 0x6c, 0x5f, 0x63, 0x6f, 0x6d, 0x6d, 0x69, 0x73,
	0x73, 0x69, 0x6f, 0x6e, 0x5f, 0x72, 0x61, 0x74, 0x65, 0x18, 0x1b, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x12, 0x79, 0x73, 0x79, 0x6c, 0x43, 0x6f, 0x6d, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x52,
	0x61, 0x74, 0x65, 0x12, 0x34, 0x0a, 0x17, 0x79, 0x73, 0x79, 0x6c, 0x5f, 0x74, 0x6c, 0x6a, 0x5f,
	0x75, 0x73, 0x65, 0x5f, 0x73, 0x74, 0x61, 0x72, 0x74, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x1c,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x13, 0x79, 0x73, 0x79, 0x6c, 0x54, 0x6c, 0x6a, 0x55, 0x73, 0x65,
	0x53, 0x74, 0x61, 0x72, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x30, 0x0a, 0x15, 0x79, 0x73, 0x79,
	0x6c, 0x5f, 0x74, 0x6c, 0x6a, 0x5f, 0x75, 0x73, 0x65, 0x5f, 0x65, 0x6e, 0x64, 0x5f, 0x74, 0x69,
	0x6d, 0x65, 0x18, 0x1d, 0x20, 0x01, 0x28, 0x09, 0x52, 0x11, 0x79, 0x73, 0x79, 0x6c, 0x54, 0x6c,
	0x6a, 0x55, 0x73, 0x65, 0x45, 0x6e, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x2e, 0x0a, 0x13, 0x6d,
	0x69, 0x6e, 0x5f, 0x63, 0x6f, 0x6d, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x5f, 0x72, 0x61,
	0x74, 0x65, 0x18, 0x1e, 0x20, 0x01, 0x28, 0x09, 0x52, 0x11, 0x6d, 0x69, 0x6e, 0x43, 0x6f, 0x6d,
	0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x61, 0x74, 0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x72,
	0x65, 0x77, 0x61, 0x72, 0x64, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x18, 0x1f, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x0a, 0x72, 0x65, 0x77, 0x61, 0x72, 0x64, 0x49, 0x6e, 0x66, 0x6f, 0x22, 0x65, 0x0a, 0x12,
	0x50, 0x72, 0x6f, 0x6d, 0x6f, 0x74, 0x65, 0x55, 0x52, 0x4c, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x6d, 0x73, 0x67, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x03, 0x6d, 0x73, 0x67, 0x12, 0x29, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x74, 0x62, 0x70, 0x62, 0x2e, 0x50, 0x72,
	0x6f, 0x6d, 0x6f, 0x74, 0x65, 0x64, 0x55, 0x52, 0x4c, 0x44, 0x61, 0x74, 0x61, 0x52, 0x04, 0x64,
	0x61, 0x74, 0x61, 0x32, 0xe6, 0x01, 0x0a, 0x0c, 0x54, 0x62, 0x41, 0x70, 0x69, 0x53, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x12, 0x44, 0x0a, 0x0b, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x47, 0x6f,
	0x6f, 0x64, 0x73, 0x12, 0x18, 0x2e, 0x74, 0x62, 0x70, 0x62, 0x2e, 0x53, 0x65, 0x61, 0x72, 0x63,
	0x68, 0x47, 0x6f, 0x6f, 0x64, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x19, 0x2e,
	0x74, 0x62, 0x70, 0x62, 0x2e, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x47, 0x6f, 0x6f, 0x64, 0x73,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x46, 0x0a, 0x0b, 0x50, 0x72,
	0x6f, 0x6d, 0x6f, 0x74, 0x65, 0x42, 0x79, 0x49, 0x44, 0x12, 0x1b, 0x2e, 0x74, 0x62, 0x70, 0x62,
	0x2e, 0x50, 0x72, 0x6f, 0x6d, 0x6f, 0x74, 0x65, 0x55, 0x52, 0x4c, 0x42, 0x79, 0x49, 0x44, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x18, 0x2e, 0x74, 0x62, 0x70, 0x62, 0x2e, 0x50, 0x72,
	0x6f, 0x6d, 0x6f, 0x74, 0x65, 0x55, 0x52, 0x4c, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x22, 0x00, 0x12, 0x48, 0x0a, 0x0c, 0x50, 0x72, 0x6f, 0x6d, 0x6f, 0x74, 0x65, 0x42, 0x79, 0x54,
	0x4b, 0x4c, 0x12, 0x1c, 0x2e, 0x74, 0x62, 0x70, 0x62, 0x2e, 0x50, 0x72, 0x6f, 0x6d, 0x6f, 0x74,
	0x65, 0x55, 0x52, 0x4c, 0x42, 0x79, 0x54, 0x4b, 0x4c, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x18, 0x2e, 0x74, 0x62, 0x70, 0x62, 0x2e, 0x50, 0x72, 0x6f, 0x6d, 0x6f, 0x74, 0x65, 0x55,
	0x52, 0x4c, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x42, 0x07, 0x5a, 0x05,
	0x2f, 0x74, 0x62, 0x70, 0x62, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_api_tb_ddx_proto_rawDescOnce sync.Once
	file_api_tb_ddx_proto_rawDescData = file_api_tb_ddx_proto_rawDesc
)

func file_api_tb_ddx_proto_rawDescGZIP() []byte {
	file_api_tb_ddx_proto_rawDescOnce.Do(func() {
		file_api_tb_ddx_proto_rawDescData = protoimpl.X.CompressGZIP(file_api_tb_ddx_proto_rawDescData)
	})
	return file_api_tb_ddx_proto_rawDescData
}

var file_api_tb_ddx_proto_msgTypes = make([]protoimpl.MessageInfo, 11)
var file_api_tb_ddx_proto_goTypes = []interface{}{
	(*SmallImages)(nil),            // 0: tbpb.SmallImages
	(*GoodsDetail)(nil),            // 1: tbpb.GoodsDetail
	(*SearchGoodsRequest)(nil),     // 2: tbpb.SearchGoodsRequest
	(*SearchGoodsMsgData)(nil),     // 3: tbpb.SearchGoodsMsgData
	(*SearchGoodsResponse)(nil),    // 4: tbpb.SearchGoodsResponse
	(*DdxTbApiSearchGoodsRes)(nil), // 5: tbpb.DdxTbApiSearchGoodsRes
	(*PromoteURLByIDRequest)(nil),  // 6: tbpb.PromoteURLByIDRequest
	(*PromoteURLByTKLRequest)(nil), // 7: tbpb.PromoteURLByTKLRequest
	(*ItemInfo)(nil),               // 8: tbpb.ItemInfo
	(*PromotedURLData)(nil),        // 9: tbpb.PromotedURLData
	(*PromoteURLResponse)(nil),     // 10: tbpb.PromoteURLResponse
}
var file_api_tb_ddx_proto_depIdxs = []int32{
	0,  // 0: tbpb.GoodsDetail.small_images:type_name -> tbpb.SmallImages
	1,  // 1: tbpb.SearchGoodsMsgData.data:type_name -> tbpb.GoodsDetail
	3,  // 2: tbpb.SearchGoodsResponse.data:type_name -> tbpb.SearchGoodsMsgData
	1,  // 3: tbpb.DdxTbApiSearchGoodsRes.data:type_name -> tbpb.GoodsDetail
	0,  // 4: tbpb.ItemInfo.small_images:type_name -> tbpb.SmallImages
	8,  // 5: tbpb.PromotedURLData.itemInfo:type_name -> tbpb.ItemInfo
	9,  // 6: tbpb.PromoteURLResponse.data:type_name -> tbpb.PromotedURLData
	2,  // 7: tbpb.TbApiService.SearchGoods:input_type -> tbpb.SearchGoodsRequest
	6,  // 8: tbpb.TbApiService.PromoteByID:input_type -> tbpb.PromoteURLByIDRequest
	7,  // 9: tbpb.TbApiService.PromoteByTKL:input_type -> tbpb.PromoteURLByTKLRequest
	4,  // 10: tbpb.TbApiService.SearchGoods:output_type -> tbpb.SearchGoodsResponse
	10, // 11: tbpb.TbApiService.PromoteByID:output_type -> tbpb.PromoteURLResponse
	10, // 12: tbpb.TbApiService.PromoteByTKL:output_type -> tbpb.PromoteURLResponse
	10, // [10:13] is the sub-list for method output_type
	7,  // [7:10] is the sub-list for method input_type
	7,  // [7:7] is the sub-list for extension type_name
	7,  // [7:7] is the sub-list for extension extendee
	0,  // [0:7] is the sub-list for field type_name
}

func init() { file_api_tb_ddx_proto_init() }
func file_api_tb_ddx_proto_init() {
	if File_api_tb_ddx_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_api_tb_ddx_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SmallImages); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_tb_ddx_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GoodsDetail); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_tb_ddx_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SearchGoodsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_tb_ddx_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SearchGoodsMsgData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_tb_ddx_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SearchGoodsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_tb_ddx_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DdxTbApiSearchGoodsRes); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_tb_ddx_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PromoteURLByIDRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_tb_ddx_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PromoteURLByTKLRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_tb_ddx_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ItemInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_tb_ddx_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PromotedURLData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_tb_ddx_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PromoteURLResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_api_tb_ddx_proto_msgTypes[2].OneofWrappers = []interface{}{}
	file_api_tb_ddx_proto_msgTypes[6].OneofWrappers = []interface{}{}
	file_api_tb_ddx_proto_msgTypes[7].OneofWrappers = []interface{}{}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_api_tb_ddx_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   11,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_api_tb_ddx_proto_goTypes,
		DependencyIndexes: file_api_tb_ddx_proto_depIdxs,
		MessageInfos:      file_api_tb_ddx_proto_msgTypes,
	}.Build()
	File_api_tb_ddx_proto = out.File
	file_api_tb_ddx_proto_rawDesc = nil
	file_api_tb_ddx_proto_goTypes = nil
	file_api_tb_ddx_proto_depIdxs = nil
}
