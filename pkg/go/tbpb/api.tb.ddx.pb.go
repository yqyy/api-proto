// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.26.0
// 	protoc        v3.15.8
// source: api.tb.ddx.proto

package tbpb

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type SmallImages struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	String_ []string `protobuf:"bytes,1,rep,name=string,proto3" json:"string,omitempty"`
}

func (x *SmallImages) Reset() {
	*x = SmallImages{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_tb_ddx_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SmallImages) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SmallImages) ProtoMessage() {}

func (x *SmallImages) ProtoReflect() protoreflect.Message {
	mi := &file_api_tb_ddx_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SmallImages.ProtoReflect.Descriptor instead.
func (*SmallImages) Descriptor() ([]byte, []int) {
	return file_api_tb_ddx_proto_rawDescGZIP(), []int{0}
}

func (x *SmallImages) GetString_() []string {
	if x != nil {
		return x.String_
	}
	return nil
}

type GoodsDetail struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CategoryId             uint64       `protobuf:"varint,1,opt,name=category_id,json=categoryId,proto3" json:"category_id,omitempty"`
	CategoryName           string       `protobuf:"bytes,2,opt,name=category_name,json=categoryName,proto3" json:"category_name,omitempty"`
	CommissionRate         string       `protobuf:"bytes,3,opt,name=commission_rate,json=commissionRate,proto3" json:"commission_rate,omitempty"`
	CommissionType         string       `protobuf:"bytes,4,opt,name=commission_type,json=commissionType,proto3" json:"commission_type,omitempty"`
	CouponAmount           string       `protobuf:"bytes,5,opt,name=coupon_amount,json=couponAmount,proto3" json:"coupon_amount,omitempty"`
	CouponEndTime          string       `protobuf:"bytes,6,opt,name=coupon_end_time,json=couponEndTime,proto3" json:"coupon_end_time,omitempty"`
	CouponId               string       `protobuf:"bytes,7,opt,name=coupon_id,json=couponId,proto3" json:"coupon_id,omitempty"`
	CouponInfo             string       `protobuf:"bytes,8,opt,name=coupon_info,json=couponInfo,proto3" json:"coupon_info,omitempty"`
	CouponRemainCount      int32        `protobuf:"varint,9,opt,name=coupon_remain_count,json=couponRemainCount,proto3" json:"coupon_remain_count,omitempty"`
	CouponShareUrl         string       `protobuf:"bytes,10,opt,name=coupon_share_url,json=couponShareUrl,proto3" json:"coupon_share_url,omitempty"`
	CouponStartFee         string       `protobuf:"bytes,11,opt,name=coupon_start_fee,json=couponStartFee,proto3" json:"coupon_start_fee,omitempty"`
	CouponStartTime        string       `protobuf:"bytes,12,opt,name=coupon_start_time,json=couponStartTime,proto3" json:"coupon_start_time,omitempty"`
	CouponTotalCount       int32        `protobuf:"varint,13,opt,name=coupon_total_count,json=couponTotalCount,proto3" json:"coupon_total_count,omitempty"`
	IncludeDxjh            string       `protobuf:"bytes,14,opt,name=include_dxjh,json=includeDxjh,proto3" json:"include_dxjh,omitempty"`
	IncludeMkt             string       `protobuf:"bytes,15,opt,name=include_mkt,json=includeMkt,proto3" json:"include_mkt,omitempty"`
	InfoDxjh               string       `protobuf:"bytes,16,opt,name=info_dxjh,json=infoDxjh,proto3" json:"info_dxjh,omitempty"`
	ItemDescription        string       `protobuf:"bytes,17,opt,name=item_description,json=itemDescription,proto3" json:"item_description,omitempty"`
	ItemId                 uint64       `protobuf:"varint,18,opt,name=item_id,json=itemId,proto3" json:"item_id,omitempty"`
	ItemUrl                string       `protobuf:"bytes,19,opt,name=item_url,json=itemUrl,proto3" json:"item_url,omitempty"`
	LevelOneCategoryId     uint64       `protobuf:"varint,20,opt,name=level_one_category_id,json=levelOneCategoryId,proto3" json:"level_one_category_id,omitempty"`
	LevelOneCategoryName   string       `protobuf:"bytes,21,opt,name=level_one_category_name,json=levelOneCategoryName,proto3" json:"level_one_category_name,omitempty"`
	Nick                   string       `protobuf:"bytes,22,opt,name=nick,proto3" json:"nick,omitempty"`
	NumIid                 uint64       `protobuf:"varint,23,opt,name=num_iid,json=numIid,proto3" json:"num_iid,omitempty"`
	PictUrl                string       `protobuf:"bytes,24,opt,name=pict_url,json=pictUrl,proto3" json:"pict_url,omitempty"`
	PresaleDeposit         string       `protobuf:"bytes,25,opt,name=presale_deposit,json=presaleDeposit,proto3" json:"presale_deposit,omitempty"`
	PresaleEndTime         uint64       `protobuf:"varint,26,opt,name=presale_end_time,json=presaleEndTime,proto3" json:"presale_end_time,omitempty"`
	PresaleStartTime       uint64       `protobuf:"varint,27,opt,name=presale_start_time,json=presaleStartTime,proto3" json:"presale_start_time,omitempty"`
	PresaleTailEndTime     uint64       `protobuf:"varint,28,opt,name=presale_tail_end_time,json=presaleTailEndTime,proto3" json:"presale_tail_end_time,omitempty"`
	PresaleTailStartTime   uint64       `protobuf:"varint,29,opt,name=presale_tail_start_time,json=presaleTailStartTime,proto3" json:"presale_tail_start_time,omitempty"`
	PresaleDiscountFeeText string       `protobuf:"bytes,30,opt,name=presale_discount_fee_text,json=presaleDiscountFeeText,proto3" json:"presale_discount_fee_text,omitempty"`
	Provcity               string       `protobuf:"bytes,31,opt,name=provcity,proto3" json:"provcity,omitempty"`
	RealPostFee            string       `protobuf:"bytes,32,opt,name=real_post_fee,json=realPostFee,proto3" json:"real_post_fee,omitempty"`
	ReservePrice           string       `protobuf:"bytes,33,opt,name=reserve_price,json=reservePrice,proto3" json:"reserve_price,omitempty"`
	SellerId               uint64       `protobuf:"varint,34,opt,name=seller_id,json=sellerId,proto3" json:"seller_id,omitempty"`
	ShopDsr                uint64       `protobuf:"varint,35,opt,name=shop_dsr,json=shopDsr,proto3" json:"shop_dsr,omitempty"`
	ShortTitle             string       `protobuf:"bytes,36,opt,name=short_title,json=shortTitle,proto3" json:"short_title,omitempty"`
	SmallImages            *SmallImages `protobuf:"bytes,37,opt,name=small_images,json=smallImages,proto3" json:"small_images,omitempty"`
	SuperiorBrand          string       `protobuf:"bytes,38,opt,name=superior_brand,json=superiorBrand,proto3" json:"superior_brand,omitempty"`
	Title                  string       `protobuf:"bytes,39,opt,name=title,proto3" json:"title,omitempty"`
	TkTotalCommi           string       `protobuf:"bytes,40,opt,name=tk_total_commi,json=tkTotalCommi,proto3" json:"tk_total_commi,omitempty"`
	TkTotalSales           string       `protobuf:"bytes,41,opt,name=tk_total_sales,json=tkTotalSales,proto3" json:"tk_total_sales,omitempty"`
	Url                    string       `protobuf:"bytes,42,opt,name=url,proto3" json:"url,omitempty"`
	UserType               int32        `protobuf:"varint,43,opt,name=user_type,json=userType,proto3" json:"user_type,omitempty"`
	Volume                 int32        `protobuf:"varint,44,opt,name=volume,proto3" json:"volume,omitempty"`
	WhiteImage             string       `protobuf:"bytes,45,opt,name=white_image,json=whiteImage,proto3" json:"white_image,omitempty"`
	XId                    string       `protobuf:"bytes,46,opt,name=x_id,json=xId,proto3" json:"x_id,omitempty"`
	ZkFinalPrice           string       `protobuf:"bytes,47,opt,name=zk_final_price,json=zkFinalPrice,proto3" json:"zk_final_price,omitempty"`
	ShopTitle              string       `protobuf:"bytes,48,opt,name=shop_title,json=shopTitle,proto3" json:"shop_title,omitempty"`
	Oetime                 string       `protobuf:"bytes,49,opt,name=oetime,proto3" json:"oetime,omitempty"`
	Ostime                 string       `protobuf:"bytes,50,opt,name=ostime,proto3" json:"ostime,omitempty"`
	JddNum                 int32        `protobuf:"varint,51,opt,name=jdd_num,json=jddNum,proto3" json:"jdd_num,omitempty"`
	JddPrice               string       `protobuf:"bytes,52,opt,name=jdd_price,json=jddPrice,proto3" json:"jdd_price,omitempty"`
	Coupon                 string       `protobuf:"bytes,53,opt,name=coupon,proto3" json:"coupon,omitempty"`
	UvSumPreSale           string       `protobuf:"bytes,54,opt,name=uv_sum_pre_sale,json=uvSumPreSale,proto3" json:"uv_sum_pre_sale,omitempty"`
	OrigPrice              string       `protobuf:"bytes,55,opt,name=orig_price,json=origPrice,proto3" json:"orig_price,omitempty"`
	TotalStock             int32        `protobuf:"varint,56,opt,name=total_stock,json=totalStock,proto3" json:"total_stock,omitempty"`
	SellNum                int32        `protobuf:"varint,57,opt,name=sell_num,json=sellNum,proto3" json:"sell_num,omitempty"`
	Stock                  int32        `protobuf:"varint,58,opt,name=stock,proto3" json:"stock,omitempty"`
	TmallPlayActivityInfo  string       `protobuf:"bytes,59,opt,name=tmall_play_activity_info,json=tmallPlayActivityInfo,proto3" json:"tmall_play_activity_info,omitempty"`
	LockRateEndTime        uint64       `protobuf:"varint,60,opt,name=lock_rate_end_time,json=lockRateEndTime,proto3" json:"lock_rate_end_time,omitempty"`
	LockRateStartTime      uint64       `protobuf:"varint,61,opt,name=lock_rate_start_time,json=lockRateStartTime,proto3" json:"lock_rate_start_time,omitempty"`
	LockRate               string       `protobuf:"bytes,62,opt,name=lock_rate,json=lockRate,proto3" json:"lock_rate,omitempty"`
	YsylTljSendTime        string       `protobuf:"bytes,63,opt,name=ysyl_tlj_send_time,json=ysylTljSendTime,proto3" json:"ysyl_tlj_send_time,omitempty"`
	YsylClickUrl           string       `protobuf:"bytes,64,opt,name=ysyl_click_url,json=ysylClickUrl,proto3" json:"ysyl_click_url,omitempty"`
	YsylCommissionRate     string       `protobuf:"bytes,65,opt,name=ysyl_commission_rate,json=ysylCommissionRate,proto3" json:"ysyl_commission_rate,omitempty"`
	YsylTljFace            string       `protobuf:"bytes,66,opt,name=ysyl_tlj_face,json=ysylTljFace,proto3" json:"ysyl_tlj_face,omitempty"`
	YsylTljUseEndTime      string       `protobuf:"bytes,67,opt,name=ysyl_tlj_use_end_time,json=ysylTljUseEndTime,proto3" json:"ysyl_tlj_use_end_time,omitempty"`
	YsylTljUseStartTime    string       `protobuf:"bytes,68,opt,name=ysyl_tlj_use_start_time,json=ysylTljUseStartTime,proto3" json:"ysyl_tlj_use_start_time,omitempty"`
	SalePrice              string       `protobuf:"bytes,69,opt,name=sale_price,json=salePrice,proto3" json:"sale_price,omitempty"`
	KuadianPromotionInfo   string       `protobuf:"bytes,70,opt,name=kuadian_promotion_info,json=kuadianPromotionInfo,proto3" json:"kuadian_promotion_info,omitempty"`
	CommiScore             string       `protobuf:"bytes,71,opt,name=commi_score,json=commiScore,proto3" json:"commi_score,omitempty"`
	MatchScore             string       `protobuf:"bytes,72,opt,name=match_score,json=matchScore,proto3" json:"match_score,omitempty"`
}

func (x *GoodsDetail) Reset() {
	*x = GoodsDetail{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_tb_ddx_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GoodsDetail) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GoodsDetail) ProtoMessage() {}

func (x *GoodsDetail) ProtoReflect() protoreflect.Message {
	mi := &file_api_tb_ddx_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GoodsDetail.ProtoReflect.Descriptor instead.
func (*GoodsDetail) Descriptor() ([]byte, []int) {
	return file_api_tb_ddx_proto_rawDescGZIP(), []int{1}
}

func (x *GoodsDetail) GetCategoryId() uint64 {
	if x != nil {
		return x.CategoryId
	}
	return 0
}

func (x *GoodsDetail) GetCategoryName() string {
	if x != nil {
		return x.CategoryName
	}
	return ""
}

func (x *GoodsDetail) GetCommissionRate() string {
	if x != nil {
		return x.CommissionRate
	}
	return ""
}

func (x *GoodsDetail) GetCommissionType() string {
	if x != nil {
		return x.CommissionType
	}
	return ""
}

func (x *GoodsDetail) GetCouponAmount() string {
	if x != nil {
		return x.CouponAmount
	}
	return ""
}

func (x *GoodsDetail) GetCouponEndTime() string {
	if x != nil {
		return x.CouponEndTime
	}
	return ""
}

func (x *GoodsDetail) GetCouponId() string {
	if x != nil {
		return x.CouponId
	}
	return ""
}

func (x *GoodsDetail) GetCouponInfo() string {
	if x != nil {
		return x.CouponInfo
	}
	return ""
}

func (x *GoodsDetail) GetCouponRemainCount() int32 {
	if x != nil {
		return x.CouponRemainCount
	}
	return 0
}

func (x *GoodsDetail) GetCouponShareUrl() string {
	if x != nil {
		return x.CouponShareUrl
	}
	return ""
}

func (x *GoodsDetail) GetCouponStartFee() string {
	if x != nil {
		return x.CouponStartFee
	}
	return ""
}

func (x *GoodsDetail) GetCouponStartTime() string {
	if x != nil {
		return x.CouponStartTime
	}
	return ""
}

func (x *GoodsDetail) GetCouponTotalCount() int32 {
	if x != nil {
		return x.CouponTotalCount
	}
	return 0
}

func (x *GoodsDetail) GetIncludeDxjh() string {
	if x != nil {
		return x.IncludeDxjh
	}
	return ""
}

func (x *GoodsDetail) GetIncludeMkt() string {
	if x != nil {
		return x.IncludeMkt
	}
	return ""
}

func (x *GoodsDetail) GetInfoDxjh() string {
	if x != nil {
		return x.InfoDxjh
	}
	return ""
}

func (x *GoodsDetail) GetItemDescription() string {
	if x != nil {
		return x.ItemDescription
	}
	return ""
}

func (x *GoodsDetail) GetItemId() uint64 {
	if x != nil {
		return x.ItemId
	}
	return 0
}

func (x *GoodsDetail) GetItemUrl() string {
	if x != nil {
		return x.ItemUrl
	}
	return ""
}

func (x *GoodsDetail) GetLevelOneCategoryId() uint64 {
	if x != nil {
		return x.LevelOneCategoryId
	}
	return 0
}

func (x *GoodsDetail) GetLevelOneCategoryName() string {
	if x != nil {
		return x.LevelOneCategoryName
	}
	return ""
}

func (x *GoodsDetail) GetNick() string {
	if x != nil {
		return x.Nick
	}
	return ""
}

func (x *GoodsDetail) GetNumIid() uint64 {
	if x != nil {
		return x.NumIid
	}
	return 0
}

func (x *GoodsDetail) GetPictUrl() string {
	if x != nil {
		return x.PictUrl
	}
	return ""
}

func (x *GoodsDetail) GetPresaleDeposit() string {
	if x != nil {
		return x.PresaleDeposit
	}
	return ""
}

func (x *GoodsDetail) GetPresaleEndTime() uint64 {
	if x != nil {
		return x.PresaleEndTime
	}
	return 0
}

func (x *GoodsDetail) GetPresaleStartTime() uint64 {
	if x != nil {
		return x.PresaleStartTime
	}
	return 0
}

func (x *GoodsDetail) GetPresaleTailEndTime() uint64 {
	if x != nil {
		return x.PresaleTailEndTime
	}
	return 0
}

func (x *GoodsDetail) GetPresaleTailStartTime() uint64 {
	if x != nil {
		return x.PresaleTailStartTime
	}
	return 0
}

func (x *GoodsDetail) GetPresaleDiscountFeeText() string {
	if x != nil {
		return x.PresaleDiscountFeeText
	}
	return ""
}

func (x *GoodsDetail) GetProvcity() string {
	if x != nil {
		return x.Provcity
	}
	return ""
}

func (x *GoodsDetail) GetRealPostFee() string {
	if x != nil {
		return x.RealPostFee
	}
	return ""
}

func (x *GoodsDetail) GetReservePrice() string {
	if x != nil {
		return x.ReservePrice
	}
	return ""
}

func (x *GoodsDetail) GetSellerId() uint64 {
	if x != nil {
		return x.SellerId
	}
	return 0
}

func (x *GoodsDetail) GetShopDsr() uint64 {
	if x != nil {
		return x.ShopDsr
	}
	return 0
}

func (x *GoodsDetail) GetShortTitle() string {
	if x != nil {
		return x.ShortTitle
	}
	return ""
}

func (x *GoodsDetail) GetSmallImages() *SmallImages {
	if x != nil {
		return x.SmallImages
	}
	return nil
}

func (x *GoodsDetail) GetSuperiorBrand() string {
	if x != nil {
		return x.SuperiorBrand
	}
	return ""
}

func (x *GoodsDetail) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *GoodsDetail) GetTkTotalCommi() string {
	if x != nil {
		return x.TkTotalCommi
	}
	return ""
}

func (x *GoodsDetail) GetTkTotalSales() string {
	if x != nil {
		return x.TkTotalSales
	}
	return ""
}

func (x *GoodsDetail) GetUrl() string {
	if x != nil {
		return x.Url
	}
	return ""
}

func (x *GoodsDetail) GetUserType() int32 {
	if x != nil {
		return x.UserType
	}
	return 0
}

func (x *GoodsDetail) GetVolume() int32 {
	if x != nil {
		return x.Volume
	}
	return 0
}

func (x *GoodsDetail) GetWhiteImage() string {
	if x != nil {
		return x.WhiteImage
	}
	return ""
}

func (x *GoodsDetail) GetXId() string {
	if x != nil {
		return x.XId
	}
	return ""
}

func (x *GoodsDetail) GetZkFinalPrice() string {
	if x != nil {
		return x.ZkFinalPrice
	}
	return ""
}

func (x *GoodsDetail) GetShopTitle() string {
	if x != nil {
		return x.ShopTitle
	}
	return ""
}

func (x *GoodsDetail) GetOetime() string {
	if x != nil {
		return x.Oetime
	}
	return ""
}

func (x *GoodsDetail) GetOstime() string {
	if x != nil {
		return x.Ostime
	}
	return ""
}

func (x *GoodsDetail) GetJddNum() int32 {
	if x != nil {
		return x.JddNum
	}
	return 0
}

func (x *GoodsDetail) GetJddPrice() string {
	if x != nil {
		return x.JddPrice
	}
	return ""
}

func (x *GoodsDetail) GetCoupon() string {
	if x != nil {
		return x.Coupon
	}
	return ""
}

func (x *GoodsDetail) GetUvSumPreSale() string {
	if x != nil {
		return x.UvSumPreSale
	}
	return ""
}

func (x *GoodsDetail) GetOrigPrice() string {
	if x != nil {
		return x.OrigPrice
	}
	return ""
}

func (x *GoodsDetail) GetTotalStock() int32 {
	if x != nil {
		return x.TotalStock
	}
	return 0
}

func (x *GoodsDetail) GetSellNum() int32 {
	if x != nil {
		return x.SellNum
	}
	return 0
}

func (x *GoodsDetail) GetStock() int32 {
	if x != nil {
		return x.Stock
	}
	return 0
}

func (x *GoodsDetail) GetTmallPlayActivityInfo() string {
	if x != nil {
		return x.TmallPlayActivityInfo
	}
	return ""
}

func (x *GoodsDetail) GetLockRateEndTime() uint64 {
	if x != nil {
		return x.LockRateEndTime
	}
	return 0
}

func (x *GoodsDetail) GetLockRateStartTime() uint64 {
	if x != nil {
		return x.LockRateStartTime
	}
	return 0
}

func (x *GoodsDetail) GetLockRate() string {
	if x != nil {
		return x.LockRate
	}
	return ""
}

func (x *GoodsDetail) GetYsylTljSendTime() string {
	if x != nil {
		return x.YsylTljSendTime
	}
	return ""
}

func (x *GoodsDetail) GetYsylClickUrl() string {
	if x != nil {
		return x.YsylClickUrl
	}
	return ""
}

func (x *GoodsDetail) GetYsylCommissionRate() string {
	if x != nil {
		return x.YsylCommissionRate
	}
	return ""
}

func (x *GoodsDetail) GetYsylTljFace() string {
	if x != nil {
		return x.YsylTljFace
	}
	return ""
}

func (x *GoodsDetail) GetYsylTljUseEndTime() string {
	if x != nil {
		return x.YsylTljUseEndTime
	}
	return ""
}

func (x *GoodsDetail) GetYsylTljUseStartTime() string {
	if x != nil {
		return x.YsylTljUseStartTime
	}
	return ""
}

func (x *GoodsDetail) GetSalePrice() string {
	if x != nil {
		return x.SalePrice
	}
	return ""
}

func (x *GoodsDetail) GetKuadianPromotionInfo() string {
	if x != nil {
		return x.KuadianPromotionInfo
	}
	return ""
}

func (x *GoodsDetail) GetCommiScore() string {
	if x != nil {
		return x.CommiScore
	}
	return ""
}

func (x *GoodsDetail) GetMatchScore() string {
	if x != nil {
		return x.MatchScore
	}
	return ""
}

type SearchGoodsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Keyword           string  `protobuf:"bytes,1,opt,name=keyword,proto3" json:"keyword,omitempty"`
	Category          *string `protobuf:"bytes,2,opt,name=category,proto3,oneof" json:"category,omitempty"`
	HasCoupon         *bool   `protobuf:"varint,3,opt,name=has_coupon,json=hasCoupon,proto3,oneof" json:"has_coupon,omitempty"`
	Sort              *string `protobuf:"bytes,4,opt,name=sort,proto3,oneof" json:"sort,omitempty"`
	Platform          *string `protobuf:"bytes,5,opt,name=platform,proto3,oneof" json:"platform,omitempty"`
	PageSize          *int32  `protobuf:"varint,6,opt,name=page_size,json=pageSize,proto3,oneof" json:"page_size,omitempty"`
	PageNo            *int32  `protobuf:"varint,7,opt,name=page_no,json=pageNo,proto3,oneof" json:"page_no,omitempty"`
	StartDsr          *int32  `protobuf:"varint,8,opt,name=start_dsr,json=startDsr,proto3,oneof" json:"start_dsr,omitempty"`
	EndTkRate         *int32  `protobuf:"varint,9,opt,name=end_tk_rate,json=endTkRate,proto3,oneof" json:"end_tk_rate,omitempty"`
	StartTkRate       *int32  `protobuf:"varint,10,opt,name=start_tk_rate,json=startTkRate,proto3,oneof" json:"start_tk_rate,omitempty"`
	EndPrice          *int32  `protobuf:"varint,11,opt,name=end_price,json=endPrice,proto3,oneof" json:"end_price,omitempty"`
	StartPrice        *int32  `protobuf:"varint,12,opt,name=start_price,json=startPrice,proto3,oneof" json:"start_price,omitempty"`
	IsOverseas        *bool   `protobuf:"varint,13,opt,name=is_overseas,json=isOverseas,proto3,oneof" json:"is_overseas,omitempty"`
	IsTmall           *bool   `protobuf:"varint,14,opt,name=is_tmall,json=isTmall,proto3,oneof" json:"is_tmall,omitempty"`
	ItemLoc           *string `protobuf:"bytes,15,opt,name=item_loc,json=itemLoc,proto3,oneof" json:"item_loc,omitempty"`
	MaterialId        *int32  `protobuf:"varint,16,opt,name=material_id,json=materialId,proto3,oneof" json:"material_id,omitempty"`
	Ip                *string `protobuf:"bytes,17,opt,name=ip,proto3,oneof" json:"ip,omitempty"`
	IncludeRfdRate    *bool   `protobuf:"varint,18,opt,name=include_rfd_rate,json=includeRfdRate,proto3,oneof" json:"include_rfd_rate,omitempty"`
	IncludeGoodRate   *bool   `protobuf:"varint,19,opt,name=include_good_rate,json=includeGoodRate,proto3,oneof" json:"include_good_rate,omitempty"`
	IncludePayRate    *bool   `protobuf:"varint,20,opt,name=include_pay_rate,json=includePayRate,proto3,oneof" json:"include_pay_rate,omitempty"`
	NeedPrepay        *bool   `protobuf:"varint,21,opt,name=need_prepay,json=needPrepay,proto3,oneof" json:"need_prepay,omitempty"`
	NeedFreeShipment  *bool   `protobuf:"varint,22,opt,name=need_free_shipment,json=needFreeShipment,proto3,oneof" json:"need_free_shipment,omitempty"`
	NpxLevel          *int32  `protobuf:"varint,23,opt,name=npx_level,json=npxLevel,proto3,oneof" json:"npx_level,omitempty"`
	EndKaTkRate       *int32  `protobuf:"varint,24,opt,name=end_ka_tk_rate,json=endKaTkRate,proto3,oneof" json:"end_ka_tk_rate,omitempty"`
	StartKaTkRate     *int32  `protobuf:"varint,25,opt,name=start_ka_tk_rate,json=startKaTkRate,proto3,oneof" json:"start_ka_tk_rate,omitempty"`
	LockRateEndTime   *uint64 `protobuf:"varint,26,opt,name=lock_rate_end_time,json=lockRateEndTime,proto3,oneof" json:"lock_rate_end_time,omitempty"`
	LockRateStartTime *uint64 `protobuf:"varint,27,opt,name=lock_rate_start_time,json=lockRateStartTime,proto3,oneof" json:"lock_rate_start_time,omitempty"`
	RelationId        *string `protobuf:"bytes,28,opt,name=relation_id,json=relationId,proto3,oneof" json:"relation_id,omitempty"`
	SpecialId         *string `protobuf:"bytes,29,opt,name=special_id,json=specialId,proto3,oneof" json:"special_id,omitempty"`
}

func (x *SearchGoodsRequest) Reset() {
	*x = SearchGoodsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_tb_ddx_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SearchGoodsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SearchGoodsRequest) ProtoMessage() {}

func (x *SearchGoodsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_tb_ddx_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SearchGoodsRequest.ProtoReflect.Descriptor instead.
func (*SearchGoodsRequest) Descriptor() ([]byte, []int) {
	return file_api_tb_ddx_proto_rawDescGZIP(), []int{2}
}

func (x *SearchGoodsRequest) GetKeyword() string {
	if x != nil {
		return x.Keyword
	}
	return ""
}

func (x *SearchGoodsRequest) GetCategory() string {
	if x != nil && x.Category != nil {
		return *x.Category
	}
	return ""
}

func (x *SearchGoodsRequest) GetHasCoupon() bool {
	if x != nil && x.HasCoupon != nil {
		return *x.HasCoupon
	}
	return false
}

func (x *SearchGoodsRequest) GetSort() string {
	if x != nil && x.Sort != nil {
		return *x.Sort
	}
	return ""
}

func (x *SearchGoodsRequest) GetPlatform() string {
	if x != nil && x.Platform != nil {
		return *x.Platform
	}
	return ""
}

func (x *SearchGoodsRequest) GetPageSize() int32 {
	if x != nil && x.PageSize != nil {
		return *x.PageSize
	}
	return 0
}

func (x *SearchGoodsRequest) GetPageNo() int32 {
	if x != nil && x.PageNo != nil {
		return *x.PageNo
	}
	return 0
}

func (x *SearchGoodsRequest) GetStartDsr() int32 {
	if x != nil && x.StartDsr != nil {
		return *x.StartDsr
	}
	return 0
}

func (x *SearchGoodsRequest) GetEndTkRate() int32 {
	if x != nil && x.EndTkRate != nil {
		return *x.EndTkRate
	}
	return 0
}

func (x *SearchGoodsRequest) GetStartTkRate() int32 {
	if x != nil && x.StartTkRate != nil {
		return *x.StartTkRate
	}
	return 0
}

func (x *SearchGoodsRequest) GetEndPrice() int32 {
	if x != nil && x.EndPrice != nil {
		return *x.EndPrice
	}
	return 0
}

func (x *SearchGoodsRequest) GetStartPrice() int32 {
	if x != nil && x.StartPrice != nil {
		return *x.StartPrice
	}
	return 0
}

func (x *SearchGoodsRequest) GetIsOverseas() bool {
	if x != nil && x.IsOverseas != nil {
		return *x.IsOverseas
	}
	return false
}

func (x *SearchGoodsRequest) GetIsTmall() bool {
	if x != nil && x.IsTmall != nil {
		return *x.IsTmall
	}
	return false
}

func (x *SearchGoodsRequest) GetItemLoc() string {
	if x != nil && x.ItemLoc != nil {
		return *x.ItemLoc
	}
	return ""
}

func (x *SearchGoodsRequest) GetMaterialId() int32 {
	if x != nil && x.MaterialId != nil {
		return *x.MaterialId
	}
	return 0
}

func (x *SearchGoodsRequest) GetIp() string {
	if x != nil && x.Ip != nil {
		return *x.Ip
	}
	return ""
}

func (x *SearchGoodsRequest) GetIncludeRfdRate() bool {
	if x != nil && x.IncludeRfdRate != nil {
		return *x.IncludeRfdRate
	}
	return false
}

func (x *SearchGoodsRequest) GetIncludeGoodRate() bool {
	if x != nil && x.IncludeGoodRate != nil {
		return *x.IncludeGoodRate
	}
	return false
}

func (x *SearchGoodsRequest) GetIncludePayRate() bool {
	if x != nil && x.IncludePayRate != nil {
		return *x.IncludePayRate
	}
	return false
}

func (x *SearchGoodsRequest) GetNeedPrepay() bool {
	if x != nil && x.NeedPrepay != nil {
		return *x.NeedPrepay
	}
	return false
}

func (x *SearchGoodsRequest) GetNeedFreeShipment() bool {
	if x != nil && x.NeedFreeShipment != nil {
		return *x.NeedFreeShipment
	}
	return false
}

func (x *SearchGoodsRequest) GetNpxLevel() int32 {
	if x != nil && x.NpxLevel != nil {
		return *x.NpxLevel
	}
	return 0
}

func (x *SearchGoodsRequest) GetEndKaTkRate() int32 {
	if x != nil && x.EndKaTkRate != nil {
		return *x.EndKaTkRate
	}
	return 0
}

func (x *SearchGoodsRequest) GetStartKaTkRate() int32 {
	if x != nil && x.StartKaTkRate != nil {
		return *x.StartKaTkRate
	}
	return 0
}

func (x *SearchGoodsRequest) GetLockRateEndTime() uint64 {
	if x != nil && x.LockRateEndTime != nil {
		return *x.LockRateEndTime
	}
	return 0
}

func (x *SearchGoodsRequest) GetLockRateStartTime() uint64 {
	if x != nil && x.LockRateStartTime != nil {
		return *x.LockRateStartTime
	}
	return 0
}

func (x *SearchGoodsRequest) GetRelationId() string {
	if x != nil && x.RelationId != nil {
		return *x.RelationId
	}
	return ""
}

func (x *SearchGoodsRequest) GetSpecialId() string {
	if x != nil && x.SpecialId != nil {
		return *x.SpecialId
	}
	return ""
}

type SearchGoodsMsgData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TotalResults int32          `protobuf:"varint,1,opt,name=total_results,json=totalResults,proto3" json:"total_results,omitempty"`
	Data         []*GoodsDetail `protobuf:"bytes,2,rep,name=data,proto3" json:"data,omitempty"`
}

func (x *SearchGoodsMsgData) Reset() {
	*x = SearchGoodsMsgData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_tb_ddx_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SearchGoodsMsgData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SearchGoodsMsgData) ProtoMessage() {}

func (x *SearchGoodsMsgData) ProtoReflect() protoreflect.Message {
	mi := &file_api_tb_ddx_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SearchGoodsMsgData.ProtoReflect.Descriptor instead.
func (*SearchGoodsMsgData) Descriptor() ([]byte, []int) {
	return file_api_tb_ddx_proto_rawDescGZIP(), []int{3}
}

func (x *SearchGoodsMsgData) GetTotalResults() int32 {
	if x != nil {
		return x.TotalResults
	}
	return 0
}

func (x *SearchGoodsMsgData) GetData() []*GoodsDetail {
	if x != nil {
		return x.Data
	}
	return nil
}

type SearchGoodsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code int32               `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Msg  string              `protobuf:"bytes,2,opt,name=msg,proto3" json:"msg,omitempty"`
	Data *SearchGoodsMsgData `protobuf:"bytes,3,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *SearchGoodsResponse) Reset() {
	*x = SearchGoodsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_tb_ddx_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SearchGoodsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SearchGoodsResponse) ProtoMessage() {}

func (x *SearchGoodsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_tb_ddx_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SearchGoodsResponse.ProtoReflect.Descriptor instead.
func (*SearchGoodsResponse) Descriptor() ([]byte, []int) {
	return file_api_tb_ddx_proto_rawDescGZIP(), []int{4}
}

func (x *SearchGoodsResponse) GetCode() int32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *SearchGoodsResponse) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

func (x *SearchGoodsResponse) GetData() *SearchGoodsMsgData {
	if x != nil {
		return x.Data
	}
	return nil
}

type DdxTbApiSearchGoodsRes struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code         int32          `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Msg          string         `protobuf:"bytes,2,opt,name=msg,proto3" json:"msg,omitempty"`
	TotalResults int32          `protobuf:"varint,3,opt,name=total_results,json=totalResults,proto3" json:"total_results,omitempty"`
	Data         []*GoodsDetail `protobuf:"bytes,4,rep,name=data,proto3" json:"data,omitempty"`
}

func (x *DdxTbApiSearchGoodsRes) Reset() {
	*x = DdxTbApiSearchGoodsRes{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_tb_ddx_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DdxTbApiSearchGoodsRes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DdxTbApiSearchGoodsRes) ProtoMessage() {}

func (x *DdxTbApiSearchGoodsRes) ProtoReflect() protoreflect.Message {
	mi := &file_api_tb_ddx_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DdxTbApiSearchGoodsRes.ProtoReflect.Descriptor instead.
func (*DdxTbApiSearchGoodsRes) Descriptor() ([]byte, []int) {
	return file_api_tb_ddx_proto_rawDescGZIP(), []int{5}
}

func (x *DdxTbApiSearchGoodsRes) GetCode() int32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *DdxTbApiSearchGoodsRes) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

func (x *DdxTbApiSearchGoodsRes) GetTotalResults() int32 {
	if x != nil {
		return x.TotalResults
	}
	return 0
}

func (x *DdxTbApiSearchGoodsRes) GetData() []*GoodsDetail {
	if x != nil {
		return x.Data
	}
	return nil
}

type PromoteURLByIDRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id          string  `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`                                             // mandatory 商品id
	Pid         *string `protobuf:"bytes,2,opt,name=pid,proto3,oneof" json:"pid,omitempty"`                                     // 淘宝联盟推广位pid，必须为在本平台授权淘宝账号下的pid，否则无效。如不传该参数则默认走后台填写的pid
	RelationId  *string `protobuf:"bytes,3,opt,name=relation_id,json=relationId,proto3,oneof" json:"relation_id,omitempty"`     // 渠道关系 ID，即备案到该合作方下面的唯一的渠道关系 ID，通过此关系 ID 进行转链即可实现订单的数据追踪，查看渠道订单数据; 注意：转链时候所传pid参数必须是您“渠道专属推广位”内的专属pid才可以，否则订单接口中无法返回渠道id信息。
	SpecialId   *string `protobuf:"bytes,4,opt,name=special_id,json=specialId,proto3,oneof" json:"special_id,omitempty"`        // 会员运营ID
	ExternalId  *string `protobuf:"bytes,5,opt,name=external_id,json=externalId,proto3,oneof" json:"external_id,omitempty"`     // 淘宝客外部用户标记，如自身系统账户ID；微信ID等 详细说明：https://dingdanxia.blog.csdn.net/article/details/107779132
	Tpwd        *bool   `protobuf:"varint,6,opt,name=tpwd,proto3,oneof" json:"tpwd,omitempty"`                                  // 是否生成淘口令，true 或false, 默认不生成，可生成优惠券口令和商品链接口令 其他注意事项：https://www.dingdanxia.com/article/127.html
	ActivityId  *string `protobuf:"bytes,7,opt,name=activityId,proto3,oneof" json:"activityId,omitempty"`                       // 阿里妈妈推广券ID，如果传该参数，则高佣链接将展现此券信息，不传会自动查找其它券。
	Logo        *string `protobuf:"bytes,8,opt,name=logo,proto3,oneof" json:"logo,omitempty"`                                   // 要生成口令的图片, 默认使用商品主图
	Text        *string `protobuf:"bytes,9,opt,name=text,proto3,oneof" json:"text,omitempty"`                                   // 要生成口令的标题，默认使用商品标题
	ItemInfo    *bool   `protobuf:"varint,10,opt,name=itemInfo,proto3,oneof" json:"itemInfo,omitempty"`                         // true或false，是否返回商品信息，包含标题、一口价、折扣价、券后价、券后佣金，是否天猫, 默认false
	Extspk      *bool   `protobuf:"varint,11,opt,name=extspk,proto3,oneof" json:"extspk,omitempty"`                             // true或false，是否同时去查私有券、猫超券，默认false不开启，开启后可能稍微增加转链响应速度，请合理使用。
	LeftSymbol  *string `protobuf:"bytes,12,opt,name=left_symbol,json=leftSymbol,proto3,oneof" json:"left_symbol,omitempty"`    // 淘口令左边符号，默认￥
	RightSymbol *string `protobuf:"bytes,13,opt,name=right_symbol,json=rightSymbol,proto3,oneof" json:"right_symbol,omitempty"` // 淘口令右边符号，默认￥
	Shorturl    *bool   `protobuf:"varint,14,opt,name=shorturl,proto3,oneof" json:"shorturl,omitempty"`                         // coupon_click_url 和 item_url 是否生成短连接
	Xid         *string `protobuf:"bytes,15,opt,name=xid,proto3,oneof" json:"xid,omitempty"`                                    // 团长与下游渠道合作的特殊标识，用于统计渠道推广效果
	Appkey      *string `protobuf:"bytes,16,opt,name=appkey,proto3,oneof" json:"appkey,omitempty"`                              // 自己淘宝开放平台具有口令生成权限的appkey 详细说明 https://www.dingdanxia.com/article/127.html
	Appsecret   *string `protobuf:"bytes,17,opt,name=appsecret,proto3,oneof" json:"appsecret,omitempty"`                        // 自己淘宝开放平台具有口令生成权限的appsecret 详细说明 https://www.dingdanxia.com/article/127.html
	TbAuthId    *int64  `protobuf:"varint,18,opt,name=tb_auth_id,json=tbAuthId,proto3,oneof" json:"tb_auth_id,omitempty"`       // 多个联盟号授权切换某一个时使用
	AccessToken *string `protobuf:"bytes,19,opt,name=access_token,json=accessToken,proto3,oneof" json:"access_token,omitempty"` // 多用户授权参数
}

func (x *PromoteURLByIDRequest) Reset() {
	*x = PromoteURLByIDRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_tb_ddx_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PromoteURLByIDRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PromoteURLByIDRequest) ProtoMessage() {}

func (x *PromoteURLByIDRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_tb_ddx_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PromoteURLByIDRequest.ProtoReflect.Descriptor instead.
func (*PromoteURLByIDRequest) Descriptor() ([]byte, []int) {
	return file_api_tb_ddx_proto_rawDescGZIP(), []int{6}
}

func (x *PromoteURLByIDRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *PromoteURLByIDRequest) GetPid() string {
	if x != nil && x.Pid != nil {
		return *x.Pid
	}
	return ""
}

func (x *PromoteURLByIDRequest) GetRelationId() string {
	if x != nil && x.RelationId != nil {
		return *x.RelationId
	}
	return ""
}

func (x *PromoteURLByIDRequest) GetSpecialId() string {
	if x != nil && x.SpecialId != nil {
		return *x.SpecialId
	}
	return ""
}

func (x *PromoteURLByIDRequest) GetExternalId() string {
	if x != nil && x.ExternalId != nil {
		return *x.ExternalId
	}
	return ""
}

func (x *PromoteURLByIDRequest) GetTpwd() bool {
	if x != nil && x.Tpwd != nil {
		return *x.Tpwd
	}
	return false
}

func (x *PromoteURLByIDRequest) GetActivityId() string {
	if x != nil && x.ActivityId != nil {
		return *x.ActivityId
	}
	return ""
}

func (x *PromoteURLByIDRequest) GetLogo() string {
	if x != nil && x.Logo != nil {
		return *x.Logo
	}
	return ""
}

func (x *PromoteURLByIDRequest) GetText() string {
	if x != nil && x.Text != nil {
		return *x.Text
	}
	return ""
}

func (x *PromoteURLByIDRequest) GetItemInfo() bool {
	if x != nil && x.ItemInfo != nil {
		return *x.ItemInfo
	}
	return false
}

func (x *PromoteURLByIDRequest) GetExtspk() bool {
	if x != nil && x.Extspk != nil {
		return *x.Extspk
	}
	return false
}

func (x *PromoteURLByIDRequest) GetLeftSymbol() string {
	if x != nil && x.LeftSymbol != nil {
		return *x.LeftSymbol
	}
	return ""
}

func (x *PromoteURLByIDRequest) GetRightSymbol() string {
	if x != nil && x.RightSymbol != nil {
		return *x.RightSymbol
	}
	return ""
}

func (x *PromoteURLByIDRequest) GetShorturl() bool {
	if x != nil && x.Shorturl != nil {
		return *x.Shorturl
	}
	return false
}

func (x *PromoteURLByIDRequest) GetXid() string {
	if x != nil && x.Xid != nil {
		return *x.Xid
	}
	return ""
}

func (x *PromoteURLByIDRequest) GetAppkey() string {
	if x != nil && x.Appkey != nil {
		return *x.Appkey
	}
	return ""
}

func (x *PromoteURLByIDRequest) GetAppsecret() string {
	if x != nil && x.Appsecret != nil {
		return *x.Appsecret
	}
	return ""
}

func (x *PromoteURLByIDRequest) GetTbAuthId() int64 {
	if x != nil && x.TbAuthId != nil {
		return *x.TbAuthId
	}
	return 0
}

func (x *PromoteURLByIDRequest) GetAccessToken() string {
	if x != nil && x.AccessToken != nil {
		return *x.AccessToken
	}
	return ""
}

type PromoteURLByTKLRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Tkl         string  `protobuf:"bytes,1,opt,name=tkl,proto3" json:"tkl,omitempty"`                                           // mandatory 商品TKL
	Pid         *string `protobuf:"bytes,2,opt,name=pid,proto3,oneof" json:"pid,omitempty"`                                     // 淘宝联盟推广位pid，必须为在本平台授权淘宝账号下的pid，否则无效。如不传该参数则默认走后台填写的pid
	RelationId  *string `protobuf:"bytes,3,opt,name=relation_id,json=relationId,proto3,oneof" json:"relation_id,omitempty"`     // 渠道关系 ID，即备案到该合作方下面的唯一的渠道关系 ID，通过此关系 ID 进行转链即可实现订单的数据追踪，查看渠道订单数据; 注意：转链时候所传pid参数必须是您“渠道专属推广位”内的专属pid才可以，否则订单接口中无法返回渠道id信息。
	SpecialId   *string `protobuf:"bytes,4,opt,name=special_id,json=specialId,proto3,oneof" json:"special_id,omitempty"`        // 会员运营ID
	ExternalId  *string `protobuf:"bytes,5,opt,name=external_id,json=externalId,proto3,oneof" json:"external_id,omitempty"`     // 淘宝客外部用户标记，如自身系统账户ID；微信ID等 详细说明：https://dingdanxia.blog.csdn.net/article/details/107779132
	Tpwd        *bool   `protobuf:"varint,6,opt,name=tpwd,proto3,oneof" json:"tpwd,omitempty"`                                  // 是否生成淘口令，true 或false, 默认不生成，可生成优惠券口令和商品链接口令 其他注意事项：https://www.dingdanxia.com/article/127.html
	ActivityId  *string `protobuf:"bytes,7,opt,name=activityId,proto3,oneof" json:"activityId,omitempty"`                       // 阿里妈妈推广券ID，如果传该参数，则高佣链接将展现此券信息，不传会自动查找其它券。
	Logo        *string `protobuf:"bytes,8,opt,name=logo,proto3,oneof" json:"logo,omitempty"`                                   // 要生成口令的图片, 默认使用商品主图
	Text        *string `protobuf:"bytes,9,opt,name=text,proto3,oneof" json:"text,omitempty"`                                   // 要生成口令的标题，默认使用商品标题
	ItemInfo    *bool   `protobuf:"varint,10,opt,name=itemInfo,proto3,oneof" json:"itemInfo,omitempty"`                         // true或false，是否返回商品信息，包含标题、一口价、折扣价、券后价、券后佣金，是否天猫, 默认false
	Extspk      *bool   `protobuf:"varint,11,opt,name=extspk,proto3,oneof" json:"extspk,omitempty"`                             // true或false，是否同时去查私有券、猫超券，默认false不开启，开启后可能稍微增加转链响应速度，请合理使用。
	LeftSymbol  *string `protobuf:"bytes,12,opt,name=left_symbol,json=leftSymbol,proto3,oneof" json:"left_symbol,omitempty"`    // 淘口令左边符号，默认￥
	RightSymbol *string `protobuf:"bytes,13,opt,name=right_symbol,json=rightSymbol,proto3,oneof" json:"right_symbol,omitempty"` // 淘口令右边符号，默认￥
	Shorturl    *bool   `protobuf:"varint,14,opt,name=shorturl,proto3,oneof" json:"shorturl,omitempty"`                         // coupon_click_url 和 item_url 是否生成短连接
	Xid         *string `protobuf:"bytes,15,opt,name=xid,proto3,oneof" json:"xid,omitempty"`                                    // 团长与下游渠道合作的特殊标识，用于统计渠道推广效果
	Appkey      *string `protobuf:"bytes,16,opt,name=appkey,proto3,oneof" json:"appkey,omitempty"`                              // 自己淘宝开放平台具有口令生成权限的appkey 详细说明 https://www.dingdanxia.com/article/127.html
	Appsecret   *string `protobuf:"bytes,17,opt,name=appsecret,proto3,oneof" json:"appsecret,omitempty"`                        // 自己淘宝开放平台具有口令生成权限的appsecret 详细说明 https://www.dingdanxia.com/article/127.html
	TbAuthId    *int64  `protobuf:"varint,18,opt,name=tb_auth_id,json=tbAuthId,proto3,oneof" json:"tb_auth_id,omitempty"`       // 多个联盟号授权切换某一个时使用
	AccessToken *string `protobuf:"bytes,19,opt,name=access_token,json=accessToken,proto3,oneof" json:"access_token,omitempty"` // 多用户授权参数
}

func (x *PromoteURLByTKLRequest) Reset() {
	*x = PromoteURLByTKLRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_tb_ddx_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PromoteURLByTKLRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PromoteURLByTKLRequest) ProtoMessage() {}

func (x *PromoteURLByTKLRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_tb_ddx_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PromoteURLByTKLRequest.ProtoReflect.Descriptor instead.
func (*PromoteURLByTKLRequest) Descriptor() ([]byte, []int) {
	return file_api_tb_ddx_proto_rawDescGZIP(), []int{7}
}

func (x *PromoteURLByTKLRequest) GetTkl() string {
	if x != nil {
		return x.Tkl
	}
	return ""
}

func (x *PromoteURLByTKLRequest) GetPid() string {
	if x != nil && x.Pid != nil {
		return *x.Pid
	}
	return ""
}

func (x *PromoteURLByTKLRequest) GetRelationId() string {
	if x != nil && x.RelationId != nil {
		return *x.RelationId
	}
	return ""
}

func (x *PromoteURLByTKLRequest) GetSpecialId() string {
	if x != nil && x.SpecialId != nil {
		return *x.SpecialId
	}
	return ""
}

func (x *PromoteURLByTKLRequest) GetExternalId() string {
	if x != nil && x.ExternalId != nil {
		return *x.ExternalId
	}
	return ""
}

func (x *PromoteURLByTKLRequest) GetTpwd() bool {
	if x != nil && x.Tpwd != nil {
		return *x.Tpwd
	}
	return false
}

func (x *PromoteURLByTKLRequest) GetActivityId() string {
	if x != nil && x.ActivityId != nil {
		return *x.ActivityId
	}
	return ""
}

func (x *PromoteURLByTKLRequest) GetLogo() string {
	if x != nil && x.Logo != nil {
		return *x.Logo
	}
	return ""
}

func (x *PromoteURLByTKLRequest) GetText() string {
	if x != nil && x.Text != nil {
		return *x.Text
	}
	return ""
}

func (x *PromoteURLByTKLRequest) GetItemInfo() bool {
	if x != nil && x.ItemInfo != nil {
		return *x.ItemInfo
	}
	return false
}

func (x *PromoteURLByTKLRequest) GetExtspk() bool {
	if x != nil && x.Extspk != nil {
		return *x.Extspk
	}
	return false
}

func (x *PromoteURLByTKLRequest) GetLeftSymbol() string {
	if x != nil && x.LeftSymbol != nil {
		return *x.LeftSymbol
	}
	return ""
}

func (x *PromoteURLByTKLRequest) GetRightSymbol() string {
	if x != nil && x.RightSymbol != nil {
		return *x.RightSymbol
	}
	return ""
}

func (x *PromoteURLByTKLRequest) GetShorturl() bool {
	if x != nil && x.Shorturl != nil {
		return *x.Shorturl
	}
	return false
}

func (x *PromoteURLByTKLRequest) GetXid() string {
	if x != nil && x.Xid != nil {
		return *x.Xid
	}
	return ""
}

func (x *PromoteURLByTKLRequest) GetAppkey() string {
	if x != nil && x.Appkey != nil {
		return *x.Appkey
	}
	return ""
}

func (x *PromoteURLByTKLRequest) GetAppsecret() string {
	if x != nil && x.Appsecret != nil {
		return *x.Appsecret
	}
	return ""
}

func (x *PromoteURLByTKLRequest) GetTbAuthId() int64 {
	if x != nil && x.TbAuthId != nil {
		return *x.TbAuthId
	}
	return 0
}

func (x *PromoteURLByTKLRequest) GetAccessToken() string {
	if x != nil && x.AccessToken != nil {
		return *x.AccessToken
	}
	return ""
}

type ItemInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Title             string       `protobuf:"bytes,1,opt,name=title,proto3" json:"title,omitempty"`
	PictUrl           string       `protobuf:"bytes,2,opt,name=pict_url,json=pictUrl,proto3" json:"pict_url,omitempty"`
	SmallImages       *SmallImages `protobuf:"bytes,3,opt,name=small_images,json=smallImages,proto3" json:"small_images,omitempty"`
	ReservePrice      float32      `protobuf:"fixed32,4,opt,name=reserve_price,json=reservePrice,proto3" json:"reserve_price,omitempty"`
	ZkFinalPrice      float32      `protobuf:"fixed32,5,opt,name=zk_final_price,json=zkFinalPrice,proto3" json:"zk_final_price,omitempty"`
	QhFinalPrice      float32      `protobuf:"fixed32,6,opt,name=qh_final_price,json=qhFinalPrice,proto3" json:"qh_final_price,omitempty"`
	QhFinalCommission float32      `protobuf:"fixed32,7,opt,name=qh_final_commission,json=qhFinalCommission,proto3" json:"qh_final_commission,omitempty"`
	ActivityId        string       `protobuf:"bytes,8,opt,name=activity_id,json=activityId,proto3" json:"activity_id,omitempty"`
	UserType          int32        `protobuf:"varint,9,opt,name=user_type,json=userType,proto3" json:"user_type,omitempty"`
	Volume            int32        `protobuf:"varint,10,opt,name=volume,proto3" json:"volume,omitempty"`
	SellerId          uint64       `protobuf:"varint,11,opt,name=seller_id,json=sellerId,proto3" json:"seller_id,omitempty"`
	Nick              string       `protobuf:"bytes,12,opt,name=nick,proto3" json:"nick,omitempty"`
	MaterialLibType   string       `protobuf:"bytes,13,opt,name=material_lib_type,json=materialLibType,proto3" json:"material_lib_type,omitempty"`
}

func (x *ItemInfo) Reset() {
	*x = ItemInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_tb_ddx_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ItemInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ItemInfo) ProtoMessage() {}

func (x *ItemInfo) ProtoReflect() protoreflect.Message {
	mi := &file_api_tb_ddx_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ItemInfo.ProtoReflect.Descriptor instead.
func (*ItemInfo) Descriptor() ([]byte, []int) {
	return file_api_tb_ddx_proto_rawDescGZIP(), []int{8}
}

func (x *ItemInfo) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *ItemInfo) GetPictUrl() string {
	if x != nil {
		return x.PictUrl
	}
	return ""
}

func (x *ItemInfo) GetSmallImages() *SmallImages {
	if x != nil {
		return x.SmallImages
	}
	return nil
}

func (x *ItemInfo) GetReservePrice() float32 {
	if x != nil {
		return x.ReservePrice
	}
	return 0
}

func (x *ItemInfo) GetZkFinalPrice() float32 {
	if x != nil {
		return x.ZkFinalPrice
	}
	return 0
}

func (x *ItemInfo) GetQhFinalPrice() float32 {
	if x != nil {
		return x.QhFinalPrice
	}
	return 0
}

func (x *ItemInfo) GetQhFinalCommission() float32 {
	if x != nil {
		return x.QhFinalCommission
	}
	return 0
}

func (x *ItemInfo) GetActivityId() string {
	if x != nil {
		return x.ActivityId
	}
	return ""
}

func (x *ItemInfo) GetUserType() int32 {
	if x != nil {
		return x.UserType
	}
	return 0
}

func (x *ItemInfo) GetVolume() int32 {
	if x != nil {
		return x.Volume
	}
	return 0
}

func (x *ItemInfo) GetSellerId() uint64 {
	if x != nil {
		return x.SellerId
	}
	return 0
}

func (x *ItemInfo) GetNick() string {
	if x != nil {
		return x.Nick
	}
	return ""
}

func (x *ItemInfo) GetMaterialLibType() string {
	if x != nil {
		return x.MaterialLibType
	}
	return ""
}

type PromotedURLData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CategoryId          uint64    `protobuf:"varint,1,opt,name=category_id,json=categoryId,proto3" json:"category_id,omitempty"`
	CouponClickUrl      string    `protobuf:"bytes,2,opt,name=coupon_click_url,json=couponClickUrl,proto3" json:"coupon_click_url,omitempty"`
	CouponStartTime     string    `protobuf:"bytes,3,opt,name=coupon_start_time,json=couponStartTime,proto3" json:"coupon_start_time,omitempty"`
	CouponEndTime       string    `protobuf:"bytes,4,opt,name=coupon_end_time,json=couponEndTime,proto3" json:"coupon_end_time,omitempty"`
	CouponInfo          string    `protobuf:"bytes,5,opt,name=coupon_info,json=couponInfo,proto3" json:"coupon_info,omitempty"`
	Coupon              string    `protobuf:"bytes,6,opt,name=coupon,proto3" json:"coupon,omitempty"`
	ItemId              uint64    `protobuf:"varint,7,opt,name=item_id,json=itemId,proto3" json:"item_id,omitempty"`
	MaxCommissionRate   string    `protobuf:"bytes,8,opt,name=max_commission_rate,json=maxCommissionRate,proto3" json:"max_commission_rate,omitempty"`
	CouponTotalCount    int32     `protobuf:"varint,9,opt,name=coupon_total_count,json=couponTotalCount,proto3" json:"coupon_total_count,omitempty"`
	CouponRemainCount   int32     `protobuf:"varint,10,opt,name=coupon_remain_count,json=couponRemainCount,proto3" json:"coupon_remain_count,omitempty"`
	MmCouponRemainCount int32     `protobuf:"varint,11,opt,name=mm_coupon_remain_count,json=mmCouponRemainCount,proto3" json:"mm_coupon_remain_count,omitempty"`
	MmCouponTotalCount  int32     `protobuf:"varint,12,opt,name=mm_coupon_total_count,json=mmCouponTotalCount,proto3" json:"mm_coupon_total_count,omitempty"`
	MmCouponClickUrl    string    `protobuf:"bytes,13,opt,name=mm_coupon_click_url,json=mmCouponClickUrl,proto3" json:"mm_coupon_click_url,omitempty"`
	MmCouponStartTime   string    `protobuf:"bytes,14,opt,name=mm_coupon_start_time,json=mmCouponStartTime,proto3" json:"mm_coupon_start_time,omitempty"`
	MmCouponEndTime     string    `protobuf:"bytes,15,opt,name=mm_coupon_end_time,json=mmCouponEndTime,proto3" json:"mm_coupon_end_time,omitempty"`
	MmCouponInfo        string    `protobuf:"bytes,16,opt,name=mm_coupon_info,json=mmCouponInfo,proto3" json:"mm_coupon_info,omitempty"`
	CouponType          int32     `protobuf:"varint,17,opt,name=coupon_type,json=couponType,proto3" json:"coupon_type,omitempty"`
	ItemUrl             string    `protobuf:"bytes,18,opt,name=item_url,json=itemUrl,proto3" json:"item_url,omitempty"`
	CouponTpwd          string    `protobuf:"bytes,19,opt,name=coupon_tpwd,json=couponTpwd,proto3" json:"coupon_tpwd,omitempty"`
	LongCouponTpwd      string    `protobuf:"bytes,20,opt,name=long_coupon_tpwd,json=longCouponTpwd,proto3" json:"long_coupon_tpwd,omitempty"`
	ItemTpwd            string    `protobuf:"bytes,21,opt,name=item_tpwd,json=itemTpwd,proto3" json:"item_tpwd,omitempty"`
	LongItemTpwd        string    `protobuf:"bytes,22,opt,name=long_item_tpwd,json=longItemTpwd,proto3" json:"long_item_tpwd,omitempty"`
	ItemInfo            *ItemInfo `protobuf:"bytes,23,opt,name=itemInfo,proto3" json:"itemInfo,omitempty"`
	YsylClickUrl        string    `protobuf:"bytes,24,opt,name=ysyl_click_url,json=ysylClickUrl,proto3" json:"ysyl_click_url,omitempty"`
	YsylTljFace         string    `protobuf:"bytes,25,opt,name=ysyl_tlj_face,json=ysylTljFace,proto3" json:"ysyl_tlj_face,omitempty"`
	YsylTljSendTime     string    `protobuf:"bytes,26,opt,name=ysyl_tlj_send_time,json=ysylTljSendTime,proto3" json:"ysyl_tlj_send_time,omitempty"`
	YsylCommissionRate  string    `protobuf:"bytes,27,opt,name=ysyl_commission_rate,json=ysylCommissionRate,proto3" json:"ysyl_commission_rate,omitempty"`
	YsylTljUseStartTime string    `protobuf:"bytes,28,opt,name=ysyl_tlj_use_start_time,json=ysylTljUseStartTime,proto3" json:"ysyl_tlj_use_start_time,omitempty"`
	YsylTljUseEndTime   string    `protobuf:"bytes,29,opt,name=ysyl_tlj_use_end_time,json=ysylTljUseEndTime,proto3" json:"ysyl_tlj_use_end_time,omitempty"`
	MinCommissionRate   string    `protobuf:"bytes,30,opt,name=min_commission_rate,json=minCommissionRate,proto3" json:"min_commission_rate,omitempty"`
	RewardInfo          int32     `protobuf:"varint,31,opt,name=reward_info,json=rewardInfo,proto3" json:"reward_info,omitempty"`
}

func (x *PromotedURLData) Reset() {
	*x = PromotedURLData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_tb_ddx_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PromotedURLData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PromotedURLData) ProtoMessage() {}

func (x *PromotedURLData) ProtoReflect() protoreflect.Message {
	mi := &file_api_tb_ddx_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PromotedURLData.ProtoReflect.Descriptor instead.
func (*PromotedURLData) Descriptor() ([]byte, []int) {
	return file_api_tb_ddx_proto_rawDescGZIP(), []int{9}
}

func (x *PromotedURLData) GetCategoryId() uint64 {
	if x != nil {
		return x.CategoryId
	}
	return 0
}

func (x *PromotedURLData) GetCouponClickUrl() string {
	if x != nil {
		return x.CouponClickUrl
	}
	return ""
}

func (x *PromotedURLData) GetCouponStartTime() string {
	if x != nil {
		return x.CouponStartTime
	}
	return ""
}

func (x *PromotedURLData) GetCouponEndTime() string {
	if x != nil {
		return x.CouponEndTime
	}
	return ""
}

func (x *PromotedURLData) GetCouponInfo() string {
	if x != nil {
		return x.CouponInfo
	}
	return ""
}

func (x *PromotedURLData) GetCoupon() string {
	if x != nil {
		return x.Coupon
	}
	return ""
}

func (x *PromotedURLData) GetItemId() uint64 {
	if x != nil {
		return x.ItemId
	}
	return 0
}

func (x *PromotedURLData) GetMaxCommissionRate() string {
	if x != nil {
		return x.MaxCommissionRate
	}
	return ""
}

func (x *PromotedURLData) GetCouponTotalCount() int32 {
	if x != nil {
		return x.CouponTotalCount
	}
	return 0
}

func (x *PromotedURLData) GetCouponRemainCount() int32 {
	if x != nil {
		return x.CouponRemainCount
	}
	return 0
}

func (x *PromotedURLData) GetMmCouponRemainCount() int32 {
	if x != nil {
		return x.MmCouponRemainCount
	}
	return 0
}

func (x *PromotedURLData) GetMmCouponTotalCount() int32 {
	if x != nil {
		return x.MmCouponTotalCount
	}
	return 0
}

func (x *PromotedURLData) GetMmCouponClickUrl() string {
	if x != nil {
		return x.MmCouponClickUrl
	}
	return ""
}

func (x *PromotedURLData) GetMmCouponStartTime() string {
	if x != nil {
		return x.MmCouponStartTime
	}
	return ""
}

func (x *PromotedURLData) GetMmCouponEndTime() string {
	if x != nil {
		return x.MmCouponEndTime
	}
	return ""
}

func (x *PromotedURLData) GetMmCouponInfo() string {
	if x != nil {
		return x.MmCouponInfo
	}
	return ""
}

func (x *PromotedURLData) GetCouponType() int32 {
	if x != nil {
		return x.CouponType
	}
	return 0
}

func (x *PromotedURLData) GetItemUrl() string {
	if x != nil {
		return x.ItemUrl
	}
	return ""
}

func (x *PromotedURLData) GetCouponTpwd() string {
	if x != nil {
		return x.CouponTpwd
	}
	return ""
}

func (x *PromotedURLData) GetLongCouponTpwd() string {
	if x != nil {
		return x.LongCouponTpwd
	}
	return ""
}

func (x *PromotedURLData) GetItemTpwd() string {
	if x != nil {
		return x.ItemTpwd
	}
	return ""
}

func (x *PromotedURLData) GetLongItemTpwd() string {
	if x != nil {
		return x.LongItemTpwd
	}
	return ""
}

func (x *PromotedURLData) GetItemInfo() *ItemInfo {
	if x != nil {
		return x.ItemInfo
	}
	return nil
}

func (x *PromotedURLData) GetYsylClickUrl() string {
	if x != nil {
		return x.YsylClickUrl
	}
	return ""
}

func (x *PromotedURLData) GetYsylTljFace() string {
	if x != nil {
		return x.YsylTljFace
	}
	return ""
}

func (x *PromotedURLData) GetYsylTljSendTime() string {
	if x != nil {
		return x.YsylTljSendTime
	}
	return ""
}

func (x *PromotedURLData) GetYsylCommissionRate() string {
	if x != nil {
		return x.YsylCommissionRate
	}
	return ""
}

func (x *PromotedURLData) GetYsylTljUseStartTime() string {
	if x != nil {
		return x.YsylTljUseStartTime
	}
	return ""
}

func (x *PromotedURLData) GetYsylTljUseEndTime() string {
	if x != nil {
		return x.YsylTljUseEndTime
	}
	return ""
}

func (x *PromotedURLData) GetMinCommissionRate() string {
	if x != nil {
		return x.MinCommissionRate
	}
	return ""
}

func (x *PromotedURLData) GetRewardInfo() int32 {
	if x != nil {
		return x.RewardInfo
	}
	return 0
}

type PromoteURLResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code int32            `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Msg  string           `protobuf:"bytes,2,opt,name=msg,proto3" json:"msg,omitempty"`
	Data *PromotedURLData `protobuf:"bytes,3,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *PromoteURLResponse) Reset() {
	*x = PromoteURLResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_tb_ddx_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PromoteURLResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PromoteURLResponse) ProtoMessage() {}

func (x *PromoteURLResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_tb_ddx_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PromoteURLResponse.ProtoReflect.Descriptor instead.
func (*PromoteURLResponse) Descriptor() ([]byte, []int) {
	return file_api_tb_ddx_proto_rawDescGZIP(), []int{10}
}

func (x *PromoteURLResponse) GetCode() int32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *PromoteURLResponse) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

func (x *PromoteURLResponse) GetData() *PromotedURLData {
	if x != nil {
		return x.Data
	}
	return nil
}

// 淘宝客私域用户备案信息查询api接口-渠道推广专属
// API: http://api.tbk.dingdanxia.com/tbk/publisher_get
type OfflineInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ShopName        string `protobuf:"bytes,1,opt,name=shop_name,json=shopName,proto3" json:"shop_name,omitempty"`                        // 渠道独有 -店铺名称
	ShopType        string `protobuf:"bytes,2,opt,name=shop_type,json=shopType,proto3" json:"shop_type,omitempty"`                        // 渠道独有 -店铺类型
	PhoneNumber     string `protobuf:"bytes,3,opt,name=phone_number,json=phoneNumber,proto3" json:"phone_number,omitempty"`               // 渠道独有 -手机号码
	DetailAddress   string `protobuf:"bytes,4,opt,name=detail_address,json=detailAddress,proto3" json:"detail_address,omitempty"`         // 渠道独有 -详细地址
	Location        string `protobuf:"bytes,5,opt,name=location,proto3" json:"location,omitempty"`                                        // 渠道独有 -地区
	ShopCertifyType string `protobuf:"bytes,6,opt,name=shop_certify_type,json=shopCertifyType,proto3" json:"shop_certify_type,omitempty"` // 渠道独有 -证件类型
	CertifyNumber   string `protobuf:"bytes,7,opt,name=certify_number,json=certifyNumber,proto3" json:"certify_number,omitempty"`         // 渠道独有 -对应的证件证件类型编号
	Career          string `protobuf:"bytes,8,opt,name=career,proto3" json:"career,omitempty"`                                            // 渠道独有 -经营类型
}

func (x *OfflineInfo) Reset() {
	*x = OfflineInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_tb_ddx_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OfflineInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OfflineInfo) ProtoMessage() {}

func (x *OfflineInfo) ProtoReflect() protoreflect.Message {
	mi := &file_api_tb_ddx_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OfflineInfo.ProtoReflect.Descriptor instead.
func (*OfflineInfo) Descriptor() ([]byte, []int) {
	return file_api_tb_ddx_proto_rawDescGZIP(), []int{11}
}

func (x *OfflineInfo) GetShopName() string {
	if x != nil {
		return x.ShopName
	}
	return ""
}

func (x *OfflineInfo) GetShopType() string {
	if x != nil {
		return x.ShopType
	}
	return ""
}

func (x *OfflineInfo) GetPhoneNumber() string {
	if x != nil {
		return x.PhoneNumber
	}
	return ""
}

func (x *OfflineInfo) GetDetailAddress() string {
	if x != nil {
		return x.DetailAddress
	}
	return ""
}

func (x *OfflineInfo) GetLocation() string {
	if x != nil {
		return x.Location
	}
	return ""
}

func (x *OfflineInfo) GetShopCertifyType() string {
	if x != nil {
		return x.ShopCertifyType
	}
	return ""
}

func (x *OfflineInfo) GetCertifyNumber() string {
	if x != nil {
		return x.CertifyNumber
	}
	return ""
}

func (x *OfflineInfo) GetCareer() string {
	if x != nil {
		return x.Career
	}
	return ""
}

type MapData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ReationApp   string       `protobuf:"bytes,1,opt,name=reation_app,json=reationApp,proto3" json:"reation_app,omitempty"`        // 共享字段 - 备案场景：common（通用备案），etao（一淘备案），minietao（一淘小程序备案），offineShop（线下门店备案），offinePerson（线下个人备案）
	CreateDate   string       `protobuf:"bytes,2,opt,name=create_date,json=createDate,proto3" json:"create_date,omitempty"`        // 共享字段 - 备案日期
	AccountName  string       `protobuf:"bytes,3,opt,name=account_name,json=accountName,proto3" json:"account_name,omitempty"`     // 共享字段 - 渠道/会员昵称
	ReaName      string       `protobuf:"bytes,4,opt,name=rea_name,json=reaName,proto3" json:"rea_name,omitempty"`                 // 共享字段 - 渠道/会员姓名
	ReationId    int32        `protobuf:"varint,5,opt,name=reation_id,json=reationId,proto3" json:"reation_id,omitempty"`          // 渠道独有 - 渠道关系ID
	OffineScene  string       `protobuf:"bytes,6,opt,name=offine_scene,json=offineScene,proto3" json:"offine_scene,omitempty"`     // 渠道独有 - 线下场景信息，1 - 门店，2- 学校，3 - 工厂，4 - 其他
	OnineScene   string       `protobuf:"bytes,7,opt,name=onine_scene,json=onineScene,proto3" json:"onine_scene,omitempty"`        // 渠道独有 - 线上场景信息，1 - 微信群，2- QQ群，3 - 其他
	Note         string       `protobuf:"bytes,8,opt,name=note,proto3" json:"note,omitempty"`                                      // 渠道独有 - 媒体侧渠道备注信息
	RootPid      string       `protobuf:"bytes,9,opt,name=root_pid,json=rootPid,proto3" json:"root_pid,omitempty"`                 // 共享字段 - 渠道/会员专属pid
	Rtag         string       `protobuf:"bytes,10,opt,name=rtag,proto3" json:"rtag,omitempty"`                                     // 共享字段 - 渠道/会员原始身份信息
	OffineInfo   *OfflineInfo `protobuf:"bytes,11,opt,name=offine_info,json=offineInfo,proto3" json:"offine_info,omitempty"`       // 线下备案专属信息
	SpecialId    int32        `protobuf:"varint,12,opt,name=special_id,json=specialId,proto3" json:"special_id,omitempty"`         // 会员独有 - 会员运营ID
	PunishStatus string       `protobuf:"bytes,13,opt,name=punish_status,json=punishStatus,proto3" json:"punish_status,omitempty"` // 渠道独有 - 处罚状态 0 －正常 1-失效
	ExternalId   string       `protobuf:"bytes,14,opt,name=external_id,json=externalId,proto3" json:"external_id,omitempty"`       // 淘宝客外部用户标记，如自身系统账户ID；微信ID等
}

func (x *MapData) Reset() {
	*x = MapData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_tb_ddx_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MapData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MapData) ProtoMessage() {}

func (x *MapData) ProtoReflect() protoreflect.Message {
	mi := &file_api_tb_ddx_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MapData.ProtoReflect.Descriptor instead.
func (*MapData) Descriptor() ([]byte, []int) {
	return file_api_tb_ddx_proto_rawDescGZIP(), []int{12}
}

func (x *MapData) GetReationApp() string {
	if x != nil {
		return x.ReationApp
	}
	return ""
}

func (x *MapData) GetCreateDate() string {
	if x != nil {
		return x.CreateDate
	}
	return ""
}

func (x *MapData) GetAccountName() string {
	if x != nil {
		return x.AccountName
	}
	return ""
}

func (x *MapData) GetReaName() string {
	if x != nil {
		return x.ReaName
	}
	return ""
}

func (x *MapData) GetReationId() int32 {
	if x != nil {
		return x.ReationId
	}
	return 0
}

func (x *MapData) GetOffineScene() string {
	if x != nil {
		return x.OffineScene
	}
	return ""
}

func (x *MapData) GetOnineScene() string {
	if x != nil {
		return x.OnineScene
	}
	return ""
}

func (x *MapData) GetNote() string {
	if x != nil {
		return x.Note
	}
	return ""
}

func (x *MapData) GetRootPid() string {
	if x != nil {
		return x.RootPid
	}
	return ""
}

func (x *MapData) GetRtag() string {
	if x != nil {
		return x.Rtag
	}
	return ""
}

func (x *MapData) GetOffineInfo() *OfflineInfo {
	if x != nil {
		return x.OffineInfo
	}
	return nil
}

func (x *MapData) GetSpecialId() int32 {
	if x != nil {
		return x.SpecialId
	}
	return 0
}

func (x *MapData) GetPunishStatus() string {
	if x != nil {
		return x.PunishStatus
	}
	return ""
}

func (x *MapData) GetExternalId() string {
	if x != nil {
		return x.ExternalId
	}
	return ""
}

type InviterList struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MapData []*MapData `protobuf:"bytes,1,rep,name=map_data,json=mapData,proto3" json:"map_data,omitempty"`
}

func (x *InviterList) Reset() {
	*x = InviterList{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_tb_ddx_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *InviterList) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InviterList) ProtoMessage() {}

func (x *InviterList) ProtoReflect() protoreflect.Message {
	mi := &file_api_tb_ddx_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use InviterList.ProtoReflect.Descriptor instead.
func (*InviterList) Descriptor() ([]byte, []int) {
	return file_api_tb_ddx_proto_rawDescGZIP(), []int{13}
}

func (x *InviterList) GetMapData() []*MapData {
	if x != nil {
		return x.MapData
	}
	return nil
}

type RootPidChannelList struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	String_ []string `protobuf:"bytes,1,rep,name=string,proto3" json:"string,omitempty"`
}

func (x *RootPidChannelList) Reset() {
	*x = RootPidChannelList{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_tb_ddx_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RootPidChannelList) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RootPidChannelList) ProtoMessage() {}

func (x *RootPidChannelList) ProtoReflect() protoreflect.Message {
	mi := &file_api_tb_ddx_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RootPidChannelList.ProtoReflect.Descriptor instead.
func (*RootPidChannelList) Descriptor() ([]byte, []int) {
	return file_api_tb_ddx_proto_rawDescGZIP(), []int{14}
}

func (x *RootPidChannelList) GetString_() []string {
	if x != nil {
		return x.String_
	}
	return nil
}

type PublisherData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	InviterList        *InviterList        `protobuf:"bytes,1,opt,name=inviter_list,json=inviterList,proto3" json:"inviter_list,omitempty"`
	RootPidChannelList *RootPidChannelList `protobuf:"bytes,2,opt,name=root_pid_channel_list,json=rootPidChannelList,proto3" json:"root_pid_channel_list,omitempty"`
	TotalCount         int32               `protobuf:"varint,3,opt,name=total_count,json=totalCount,proto3" json:"total_count,omitempty"`
}

func (x *PublisherData) Reset() {
	*x = PublisherData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_tb_ddx_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PublisherData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PublisherData) ProtoMessage() {}

func (x *PublisherData) ProtoReflect() protoreflect.Message {
	mi := &file_api_tb_ddx_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PublisherData.ProtoReflect.Descriptor instead.
func (*PublisherData) Descriptor() ([]byte, []int) {
	return file_api_tb_ddx_proto_rawDescGZIP(), []int{15}
}

func (x *PublisherData) GetInviterList() *InviterList {
	if x != nil {
		return x.InviterList
	}
	return nil
}

func (x *PublisherData) GetRootPidChannelList() *RootPidChannelList {
	if x != nil {
		return x.RootPidChannelList
	}
	return nil
}

func (x *PublisherData) GetTotalCount() int32 {
	if x != nil {
		return x.TotalCount
	}
	return 0
}

type PublisherGetRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	InfoType    int32   `protobuf:"varint,1,opt,name=info_type,json=infoType,proto3" json:"info_type,omitempty"`             // 类型，必选 1:渠道信息；2:会员信息
	RelationApp string  `protobuf:"bytes,2,opt,name=relation_app,json=relationApp,proto3" json:"relation_app,omitempty"`     // 备案的场景：common（通用备案），etao（一淘备案），minietao（一淘小程序备案），offlineShop（线下门店备案），offlinePerson（线下个人备案）。如不填默认common。查询会员信息只需填写common即可
	RelationId  *int32  `protobuf:"varint,3,opt,name=relation_id,json=relationId,proto3,oneof" json:"relation_id,omitempty"` // 渠道独占 - 渠道关系ID
	PageNo      *int32  `protobuf:"varint,4,opt,name=page_no,json=pageNo,proto3,oneof" json:"page_no,omitempty"`             // 第几页
	PageSize    *int32  `protobuf:"varint,5,opt,name=page_size,json=pageSize,proto3,oneof" json:"page_size,omitempty"`       // 每页数据条数
	SpecialId   *string `protobuf:"bytes,6,opt,name=special_id,json=specialId,proto3,oneof" json:"special_id,omitempty"`     // 会员独占 - 会员运营ID
	ExternalId  *string `protobuf:"bytes,7,opt,name=external_id,json=externalId,proto3,oneof" json:"external_id,omitempty"`  // 淘宝客外部用户标记，如自身系统账户ID；微信ID等
}

func (x *PublisherGetRequest) Reset() {
	*x = PublisherGetRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_tb_ddx_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PublisherGetRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PublisherGetRequest) ProtoMessage() {}

func (x *PublisherGetRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_tb_ddx_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PublisherGetRequest.ProtoReflect.Descriptor instead.
func (*PublisherGetRequest) Descriptor() ([]byte, []int) {
	return file_api_tb_ddx_proto_rawDescGZIP(), []int{16}
}

func (x *PublisherGetRequest) GetInfoType() int32 {
	if x != nil {
		return x.InfoType
	}
	return 0
}

func (x *PublisherGetRequest) GetRelationApp() string {
	if x != nil {
		return x.RelationApp
	}
	return ""
}

func (x *PublisherGetRequest) GetRelationId() int32 {
	if x != nil && x.RelationId != nil {
		return *x.RelationId
	}
	return 0
}

func (x *PublisherGetRequest) GetPageNo() int32 {
	if x != nil && x.PageNo != nil {
		return *x.PageNo
	}
	return 0
}

func (x *PublisherGetRequest) GetPageSize() int32 {
	if x != nil && x.PageSize != nil {
		return *x.PageSize
	}
	return 0
}

func (x *PublisherGetRequest) GetSpecialId() string {
	if x != nil && x.SpecialId != nil {
		return *x.SpecialId
	}
	return ""
}

func (x *PublisherGetRequest) GetExternalId() string {
	if x != nil && x.ExternalId != nil {
		return *x.ExternalId
	}
	return ""
}

type PublisherGetResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code int32          `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Msg  string         `protobuf:"bytes,2,opt,name=msg,proto3" json:"msg,omitempty"`
	Data *PublisherData `protobuf:"bytes,3,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *PublisherGetResponse) Reset() {
	*x = PublisherGetResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_tb_ddx_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PublisherGetResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PublisherGetResponse) ProtoMessage() {}

func (x *PublisherGetResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_tb_ddx_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PublisherGetResponse.ProtoReflect.Descriptor instead.
func (*PublisherGetResponse) Descriptor() ([]byte, []int) {
	return file_api_tb_ddx_proto_rawDescGZIP(), []int{17}
}

func (x *PublisherGetResponse) GetCode() int32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *PublisherGetResponse) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

func (x *PublisherGetResponse) GetData() *PublisherData {
	if x != nil {
		return x.Data
	}
	return nil
}

// 淘宝客渠道信息备案api接口-渠道推广专属(无私域会员API接口权限专属)
type PublisherSaveData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AuthorizationUrl string `protobuf:"bytes,1,opt,name=authorization_url,json=authorizationUrl,proto3" json:"authorization_url,omitempty"` // 授权链接，用户打开此链接备案,10分钟有效期
	Note             string `protobuf:"bytes,2,opt,name=note,proto3" json:"note,omitempty"`                                                 // 注意事项
}

func (x *PublisherSaveData) Reset() {
	*x = PublisherSaveData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_tb_ddx_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PublisherSaveData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PublisherSaveData) ProtoMessage() {}

func (x *PublisherSaveData) ProtoReflect() protoreflect.Message {
	mi := &file_api_tb_ddx_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PublisherSaveData.ProtoReflect.Descriptor instead.
func (*PublisherSaveData) Descriptor() ([]byte, []int) {
	return file_api_tb_ddx_proto_rawDescGZIP(), []int{18}
}

func (x *PublisherSaveData) GetAuthorizationUrl() string {
	if x != nil {
		return x.AuthorizationUrl
	}
	return ""
}

func (x *PublisherSaveData) GetNote() string {
	if x != nil {
		return x.Note
	}
	return ""
}

type PublisherSaveRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CallbackUrl        string  `protobuf:"bytes,1,opt,name=callback_url,json=callbackUrl,proto3" json:"callback_url,omitempty"`                              // 代理授权，并登记备案后，返回渠道/会员信息至回调地址 请输入完整的可跳转地址 例如 https://www.dingdanxia.com/
	CallbackDataFormat *string `protobuf:"bytes,2,opt,name=callback_data_format,json=callbackDataFormat,proto3,oneof" json:"callback_data_format,omitempty"` // json: 返回json参数，parm ：返回url参数
	Note               string  `protobuf:"bytes,3,opt,name=note,proto3" json:"note,omitempty"`                                                               // 备注，此内容填写用户唯一标识，跟返回的relation_id字段做关联
	Type               *int32  `protobuf:"varint,4,opt,name=type,proto3,oneof" json:"type,omitempty"`                                                        // 1：电脑版授权页面，2：手机版授权页面，默认值1
}

func (x *PublisherSaveRequest) Reset() {
	*x = PublisherSaveRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_tb_ddx_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PublisherSaveRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PublisherSaveRequest) ProtoMessage() {}

func (x *PublisherSaveRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_tb_ddx_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PublisherSaveRequest.ProtoReflect.Descriptor instead.
func (*PublisherSaveRequest) Descriptor() ([]byte, []int) {
	return file_api_tb_ddx_proto_rawDescGZIP(), []int{19}
}

func (x *PublisherSaveRequest) GetCallbackUrl() string {
	if x != nil {
		return x.CallbackUrl
	}
	return ""
}

func (x *PublisherSaveRequest) GetCallbackDataFormat() string {
	if x != nil && x.CallbackDataFormat != nil {
		return *x.CallbackDataFormat
	}
	return ""
}

func (x *PublisherSaveRequest) GetNote() string {
	if x != nil {
		return x.Note
	}
	return ""
}

func (x *PublisherSaveRequest) GetType() int32 {
	if x != nil && x.Type != nil {
		return *x.Type
	}
	return 0
}

type PublisherSaveResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code int32              `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Msg  string             `protobuf:"bytes,2,opt,name=msg,proto3" json:"msg,omitempty"`
	Data *PublisherSaveData `protobuf:"bytes,3,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *PublisherSaveResponse) Reset() {
	*x = PublisherSaveResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_tb_ddx_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PublisherSaveResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PublisherSaveResponse) ProtoMessage() {}

func (x *PublisherSaveResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_tb_ddx_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PublisherSaveResponse.ProtoReflect.Descriptor instead.
func (*PublisherSaveResponse) Descriptor() ([]byte, []int) {
	return file_api_tb_ddx_proto_rawDescGZIP(), []int{20}
}

func (x *PublisherSaveResponse) GetCode() int32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *PublisherSaveResponse) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

func (x *PublisherSaveResponse) GetData() *PublisherSaveData {
	if x != nil {
		return x.Data
	}
	return nil
}

// 订单同步
// http://api.tbk.dingdanxia.com/tbk/order_details
type ServiceFee struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ShareRelativeRate string `protobuf:"bytes,1,opt,name=share_relative_rate,json=shareRelativeRate,proto3" json:"share_relative_rate,omitempty"` // 专项服务费率(单位：元)
	ShareFee          string `protobuf:"bytes,2,opt,name=share_fee,json=shareFee,proto3" json:"share_fee,omitempty"`                              // 结算专项服务费(单位：元)
	SharePreFee       string `protobuf:"bytes,3,opt,name=share_pre_fee,json=sharePreFee,proto3" json:"share_pre_fee,omitempty"`                   // 预估专项服务费(单位：元)
	TkShareRoleType   int32  `protobuf:"varint,4,opt,name=tk_share_role_type,json=tkShareRoleType,proto3" json:"tk_share_role_type,omitempty"`    // 专项服务费来源，122-渠道
}

func (x *ServiceFee) Reset() {
	*x = ServiceFee{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_tb_ddx_proto_msgTypes[21]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ServiceFee) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ServiceFee) ProtoMessage() {}

func (x *ServiceFee) ProtoReflect() protoreflect.Message {
	mi := &file_api_tb_ddx_proto_msgTypes[21]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ServiceFee.ProtoReflect.Descriptor instead.
func (*ServiceFee) Descriptor() ([]byte, []int) {
	return file_api_tb_ddx_proto_rawDescGZIP(), []int{21}
}

func (x *ServiceFee) GetShareRelativeRate() string {
	if x != nil {
		return x.ShareRelativeRate
	}
	return ""
}

func (x *ServiceFee) GetShareFee() string {
	if x != nil {
		return x.ShareFee
	}
	return ""
}

func (x *ServiceFee) GetSharePreFee() string {
	if x != nil {
		return x.SharePreFee
	}
	return ""
}

func (x *ServiceFee) GetTkShareRoleType() int32 {
	if x != nil {
		return x.TkShareRoleType
	}
	return 0
}

type OrderDetail struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TbPaidTime                         string        `protobuf:"bytes,6,opt,name=tb_paid_time,json=tbPaidTime,proto3" json:"tb_paid_time,omitempty"`                                                                                  // 订单在淘宝拍下付款的时间
	TkPaidTime                         string        `protobuf:"bytes,7,opt,name=tk_paid_time,json=tkPaidTime,proto3" json:"tk_paid_time,omitempty"`                                                                                  // 订单付款的时间，该时间同步淘宝，可能会略晚于买家在淘宝的订单创建时间
	PayPrice                           string        `protobuf:"bytes,8,opt,name=pay_price,json=payPrice,proto3" json:"pay_price,omitempty"`                                                                                          // 买家确认收货的付款金额（不包含运费金额
	PubShareFee                        string        `protobuf:"bytes,9,opt,name=pub_share_fee,json=pubShareFee,proto3" json:"pub_share_fee,omitempty"`                                                                               // 结算预估收入=结算金额*提成。以买家确认收货的付款金额为基数，预估您可能获得的收入。因买家退款、您违规推广等原因，可能与您最终收入不一致。最终收入以月结后您实际收到的为准
	TradeId                            string        `protobuf:"bytes,10,opt,name=trade_id,json=tradeId,proto3" json:"trade_id,omitempty"`                                                                                            // 买家通过购物车购买的每个商品对应的订单编号，此订单编号并未在淘宝买家后台透出（此订单号唯一，可作为唯一条件使用）
	TkOrderRole                        int32         `protobuf:"varint,11,opt,name=tk_order_role,json=tkOrderRole,proto3" json:"tk_order_role,omitempty"`                                                                             // 二方：佣金收益的第一归属者； 三方：从其他淘宝客佣金中进行分成的推广者
	TkEarningTime                      string        `protobuf:"bytes,12,opt,name=tk_earning_time,json=tkEarningTime,proto3" json:"tk_earning_time,omitempty"`                                                                        // 订单确认收货后且商家完成佣金支付的时间
	AdzoneId                           int32         `protobuf:"varint,13,opt,name=adzone_id,json=adzoneId,proto3" json:"adzone_id,omitempty"`                                                                                        // 推广位管理下的推广位名称对应的ID，同时也是pid=mm_1_2_3中的“3”这段数字
	PubShareRate                       string        `protobuf:"bytes,14,opt,name=pub_share_rate,json=pubShareRate,proto3" json:"pub_share_rate,omitempty"`                                                                           // 从结算佣金中分得的收益比率
	RefundTag                          int32         `protobuf:"varint,15,opt,name=refund_tag,json=refundTag,proto3" json:"refund_tag,omitempty"`                                                                                     // 维权标签，0 含义为非维权 1 含义为维权订单
	SubsidyRate                        string        `protobuf:"bytes,16,opt,name=subsidy_rate,json=subsidyRate,proto3" json:"subsidy_rate,omitempty"`                                                                                // 平台给与的补贴比率，如天猫、淘宝、聚划算等
	TkTotalRate                        string        `protobuf:"bytes,17,opt,name=tk_total_rate,json=tkTotalRate,proto3" json:"tk_total_rate,omitempty"`                                                                              // 提成=收入比率*分成比率。指实际获得收益的比率
	ItemCategoryName                   string        `protobuf:"bytes,18,opt,name=item_category_name,json=itemCategoryName,proto3" json:"item_category_name,omitempty"`                                                               // 商品所属的根类目，即一级类目的名称
	SellerNick                         string        `protobuf:"bytes,19,opt,name=seller_nick,json=sellerNick,proto3" json:"seller_nick,omitempty"`                                                                                   // 掌柜旺旺
	PubId                              int32         `protobuf:"varint,20,opt,name=pub_id,json=pubId,proto3" json:"pub_id,omitempty"`                                                                                                 // 推广者的会员id
	AlimamaRate                        string        `protobuf:"bytes,21,opt,name=alimama_rate,json=alimamaRate,proto3" json:"alimama_rate,omitempty"`                                                                                // 推广者赚取佣金后支付给阿里妈妈的技术服务费用的比率
	SubsidyType                        string        `protobuf:"bytes,22,opt,name=subsidy_type,json=subsidyType,proto3" json:"subsidy_type,omitempty"`                                                                                // 平台出资方，如天猫、淘宝、或聚划算等
	ItemImg                            string        `protobuf:"bytes,23,opt,name=item_img,json=itemImg,proto3" json:"item_img,omitempty"`                                                                                            // 商品图片
	PubSharePreFee                     string        `protobuf:"bytes,24,opt,name=pub_share_pre_fee,json=pubSharePreFee,proto3" json:"pub_share_pre_fee,omitempty"`                                                                   // 付款预估收入=付款金额*提成。指买家付款金额为基数，预估您可能获得的收入。因买家退款等原因，可能与结算预估收入不一致
	AlipayTotalPrice                   string        `protobuf:"bytes,25,opt,name=alipay_total_price,json=alipayTotalPrice,proto3" json:"alipay_total_price,omitempty"`                                                               // 买家拍下付款的金额（不包含运费金额）
	ItemTitle                          string        `protobuf:"bytes,26,opt,name=item_title,json=itemTitle,proto3" json:"item_title,omitempty"`                                                                                      // 商品标题
	ModifiedTime                       string        `protobuf:"bytes,27,opt,name=modified_time,json=modifiedTime,proto3" json:"modified_time,omitempty"`                                                                             // 订单更新时间
	SiteName                           string        `protobuf:"bytes,28,opt,name=site_name,json=siteName,proto3" json:"site_name,omitempty"`                                                                                         // 媒体管理下的对应ID的自定义名称
	ItemNum                            int32         `protobuf:"varint,29,opt,name=item_num,json=itemNum,proto3" json:"item_num,omitempty"`                                                                                           // 商品数量
	SubsidyFee                         string        `protobuf:"bytes,30,opt,name=subsidy_fee,json=subsidyFee,proto3" json:"subsidy_fee,omitempty"`                                                                                   // 补贴金额=结算金额*补贴比率
	AlimamaShareFee                    string        `protobuf:"bytes,31,opt,name=alimama_share_fee,json=alimamaShareFee,proto3" json:"alimama_share_fee,omitempty"`                                                                  // 技术服务费=结算金额*收入比率*技术服务费率。推广者赚取佣金后支付给阿里妈妈的技术服务费用
	TradeParentId                      string        `protobuf:"bytes,32,opt,name=trade_parent_id,json=tradeParentId,proto3" json:"trade_parent_id,omitempty"`                                                                        // 买家在淘宝后台显示的订单编号
	OrderType                          string        `protobuf:"bytes,33,opt,name=order_type,json=orderType,proto3" json:"order_type,omitempty"`                                                                                      // 订单所属平台类型，包括天猫、淘宝、聚划算等
	TkCreateTime                       string        `protobuf:"bytes,34,opt,name=tk_create_time,json=tkCreateTime,proto3" json:"tk_create_time,omitempty"`                                                                           // 订单创建的时间，该时间同步淘宝，可能会略晚于买家在淘宝的订单创建时间
	FlowSource                         string        `protobuf:"bytes,35,opt,name=flow_source,json=flowSource,proto3" json:"flow_source,omitempty"`                                                                                   // 产品类型
	TerminalType                       string        `protobuf:"bytes,36,opt,name=terminal_type,json=terminalType,proto3" json:"terminal_type,omitempty"`                                                                             // 成交平台
	ClickTime                          string        `protobuf:"bytes,37,opt,name=click_time,json=clickTime,proto3" json:"click_time,omitempty"`                                                                                      // 通过推广链接达到商品、店铺详情页的点击时间
	TkStatus                           int32         `protobuf:"varint,38,opt,name=tk_status,json=tkStatus,proto3" json:"tk_status,omitempty"`                                                                                        // 已付款：指订单已付款，但还未确认收货 已收货：指订单已确认收货，但商家佣金未支付 已结算：指订单已确认收货，且商家佣金已支付成功 已失效：指订单关闭/订单佣金小于0.01元，订单关闭主要有：1）买家超时未付款； 2）买家付款前，买家/卖家取消了订单；3）订单付款后发起售中退款成功；3：订单结算，12：订单付款， 13：订单失效，14：订单成功
	ItemPrice                          string        `protobuf:"bytes,39,opt,name=item_price,json=itemPrice,proto3" json:"item_price,omitempty"`                                                                                      // 商品单价
	ItemId                             string        `protobuf:"bytes,40,opt,name=item_id,json=itemId,proto3" json:"item_id,omitempty"`                                                                                               // 商品id
	AdzoneName                         string        `protobuf:"bytes,41,opt,name=adzone_name,json=adzoneName,proto3" json:"adzone_name,omitempty"`                                                                                   // 推广位管理下的自定义推广位名称
	TotalCommissionRate                string        `protobuf:"bytes,42,opt,name=total_commission_rate,json=totalCommissionRate,proto3" json:"total_commission_rate,omitempty"`                                                      // 佣金比率
	ItemLink                           string        `protobuf:"bytes,43,opt,name=item_link,json=itemLink,proto3" json:"item_link,omitempty"`                                                                                         // 商品链接
	SiteId                             int32         `protobuf:"varint,44,opt,name=site_id,json=siteId,proto3" json:"site_id,omitempty"`                                                                                              // 媒体管理下的ID，同时也是pid=mm_1_2_3中的“2”这段数字
	SellerShopTitle                    string        `protobuf:"bytes,45,opt,name=seller_shop_title,json=sellerShopTitle,proto3" json:"seller_shop_title,omitempty"`                                                                  // 店铺名称
	IncomeRate                         string        `protobuf:"bytes,46,opt,name=income_rate,json=incomeRate,proto3" json:"income_rate,omitempty"`                                                                                   // 订单结算的佣金比率+平台的补贴比率
	TotalCommissionFee                 string        `protobuf:"bytes,47,opt,name=total_commission_fee,json=totalCommissionFee,proto3" json:"total_commission_fee,omitempty"`                                                         // 佣金金额=结算金额*佣金比率
	SpecialId                          int32         `protobuf:"varint,48,opt,name=special_id,json=specialId,proto3" json:"special_id,omitempty"`                                                                                     // 会员运营ID（需要申请到私域会员权限才返回此ID）
	RelationId                         int32         `protobuf:"varint,49,opt,name=relation_id,json=relationId,proto3" json:"relation_id,omitempty"`                                                                                  // 渠道关系ID会员运营ID（需要申请到渠道管理权限才返回此ID）
	TkDepositTime                      string        `protobuf:"bytes,50,opt,name=tk_deposit_time,json=tkDepositTime,proto3" json:"tk_deposit_time,omitempty"`                                                                        // 预售时期，用户对预售商品支付定金的付款时间，可能略晚于在淘宝付定金时间
	TbDepositTime                      string        `protobuf:"bytes,51,opt,name=tb_deposit_time,json=tbDepositTime,proto3" json:"tb_deposit_time,omitempty"`                                                                        // 预售时期，用户对预售商品支付定金的付款时间
	DepositPrice                       string        `protobuf:"bytes,52,opt,name=deposit_price,json=depositPrice,proto3" json:"deposit_price,omitempty"`                                                                             // 预售时期，用户对预售商品支付的定金金额
	TkCommissionPreFeeForMediaPlatform string        `protobuf:"bytes,53,opt,name=tk_commission_pre_fee_for_media_platform,json=tkCommissionPreFeeForMediaPlatform,proto3" json:"tk_commission_pre_fee_for_media_platform,omitempty"` // 预估内容专项服务费：内容场景专项技术服务费，内容推广者在内容场景进行推广需要支付给阿里妈妈专项的技术服务费用。专项服务费＝付款金额＊专项服务费率。
	TkCommissionFeeForMediaPlatform    string        `protobuf:"bytes,54,opt,name=tk_commission_fee_for_media_platform,json=tkCommissionFeeForMediaPlatform,proto3" json:"tk_commission_fee_for_media_platform,omitempty"`            // 结算内容专项服务费：内容场景专项技术服务费，内容推广者在内容场景进行推广需要支付给阿里妈妈专项的技术服务费用。专项服务费＝结算金额＊专项服务费率。
	TkCommissionRateForMediaPlatform   string        `protobuf:"bytes,55,opt,name=tk_commission_rate_for_media_platform,json=tkCommissionRateForMediaPlatform,proto3" json:"tk_commission_rate_for_media_platform,omitempty"`         // 内容专项服务费率：内容场景专项技术服务费率，内容推广者在内容场景进行推广需要按结算金额支付一定比例给阿里妈妈作为内容场景专项技术服务费，用于提供与内容平台实现产品技术对接等服务。
	AlscId                             string        `protobuf:"bytes,56,opt,name=alsc_id,json=alscId,proto3" json:"alsc_id,omitempty"`                                                                                               // 口碑子订单号
	AlscPid                            string        `protobuf:"bytes,57,opt,name=alsc_pid,json=alscPid,proto3" json:"alsc_pid,omitempty"`                                                                                            // 口碑父订单号
	ServiceFeeDtoList                  []*ServiceFee `protobuf:"bytes,58,rep,name=service_fee_dto_list,json=serviceFeeDtoList,proto3" json:"service_fee_dto_list,omitempty"`                                                          // 服务费信息
	LxRid                              string        `protobuf:"bytes,59,opt,name=lx_rid,json=lxRid,proto3" json:"lx_rid,omitempty"`                                                                                                  // 激励池对应的rid
	IsLx                               string        `protobuf:"bytes,60,opt,name=is_lx,json=isLx,proto3" json:"is_lx,omitempty"`                                                                                                     // 订单是否为激励池订单 1，表征是 0，表征否
}

func (x *OrderDetail) Reset() {
	*x = OrderDetail{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_tb_ddx_proto_msgTypes[22]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OrderDetail) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OrderDetail) ProtoMessage() {}

func (x *OrderDetail) ProtoReflect() protoreflect.Message {
	mi := &file_api_tb_ddx_proto_msgTypes[22]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OrderDetail.ProtoReflect.Descriptor instead.
func (*OrderDetail) Descriptor() ([]byte, []int) {
	return file_api_tb_ddx_proto_rawDescGZIP(), []int{22}
}

func (x *OrderDetail) GetTbPaidTime() string {
	if x != nil {
		return x.TbPaidTime
	}
	return ""
}

func (x *OrderDetail) GetTkPaidTime() string {
	if x != nil {
		return x.TkPaidTime
	}
	return ""
}

func (x *OrderDetail) GetPayPrice() string {
	if x != nil {
		return x.PayPrice
	}
	return ""
}

func (x *OrderDetail) GetPubShareFee() string {
	if x != nil {
		return x.PubShareFee
	}
	return ""
}

func (x *OrderDetail) GetTradeId() string {
	if x != nil {
		return x.TradeId
	}
	return ""
}

func (x *OrderDetail) GetTkOrderRole() int32 {
	if x != nil {
		return x.TkOrderRole
	}
	return 0
}

func (x *OrderDetail) GetTkEarningTime() string {
	if x != nil {
		return x.TkEarningTime
	}
	return ""
}

func (x *OrderDetail) GetAdzoneId() int32 {
	if x != nil {
		return x.AdzoneId
	}
	return 0
}

func (x *OrderDetail) GetPubShareRate() string {
	if x != nil {
		return x.PubShareRate
	}
	return ""
}

func (x *OrderDetail) GetRefundTag() int32 {
	if x != nil {
		return x.RefundTag
	}
	return 0
}

func (x *OrderDetail) GetSubsidyRate() string {
	if x != nil {
		return x.SubsidyRate
	}
	return ""
}

func (x *OrderDetail) GetTkTotalRate() string {
	if x != nil {
		return x.TkTotalRate
	}
	return ""
}

func (x *OrderDetail) GetItemCategoryName() string {
	if x != nil {
		return x.ItemCategoryName
	}
	return ""
}

func (x *OrderDetail) GetSellerNick() string {
	if x != nil {
		return x.SellerNick
	}
	return ""
}

func (x *OrderDetail) GetPubId() int32 {
	if x != nil {
		return x.PubId
	}
	return 0
}

func (x *OrderDetail) GetAlimamaRate() string {
	if x != nil {
		return x.AlimamaRate
	}
	return ""
}

func (x *OrderDetail) GetSubsidyType() string {
	if x != nil {
		return x.SubsidyType
	}
	return ""
}

func (x *OrderDetail) GetItemImg() string {
	if x != nil {
		return x.ItemImg
	}
	return ""
}

func (x *OrderDetail) GetPubSharePreFee() string {
	if x != nil {
		return x.PubSharePreFee
	}
	return ""
}

func (x *OrderDetail) GetAlipayTotalPrice() string {
	if x != nil {
		return x.AlipayTotalPrice
	}
	return ""
}

func (x *OrderDetail) GetItemTitle() string {
	if x != nil {
		return x.ItemTitle
	}
	return ""
}

func (x *OrderDetail) GetModifiedTime() string {
	if x != nil {
		return x.ModifiedTime
	}
	return ""
}

func (x *OrderDetail) GetSiteName() string {
	if x != nil {
		return x.SiteName
	}
	return ""
}

func (x *OrderDetail) GetItemNum() int32 {
	if x != nil {
		return x.ItemNum
	}
	return 0
}

func (x *OrderDetail) GetSubsidyFee() string {
	if x != nil {
		return x.SubsidyFee
	}
	return ""
}

func (x *OrderDetail) GetAlimamaShareFee() string {
	if x != nil {
		return x.AlimamaShareFee
	}
	return ""
}

func (x *OrderDetail) GetTradeParentId() string {
	if x != nil {
		return x.TradeParentId
	}
	return ""
}

func (x *OrderDetail) GetOrderType() string {
	if x != nil {
		return x.OrderType
	}
	return ""
}

func (x *OrderDetail) GetTkCreateTime() string {
	if x != nil {
		return x.TkCreateTime
	}
	return ""
}

func (x *OrderDetail) GetFlowSource() string {
	if x != nil {
		return x.FlowSource
	}
	return ""
}

func (x *OrderDetail) GetTerminalType() string {
	if x != nil {
		return x.TerminalType
	}
	return ""
}

func (x *OrderDetail) GetClickTime() string {
	if x != nil {
		return x.ClickTime
	}
	return ""
}

func (x *OrderDetail) GetTkStatus() int32 {
	if x != nil {
		return x.TkStatus
	}
	return 0
}

func (x *OrderDetail) GetItemPrice() string {
	if x != nil {
		return x.ItemPrice
	}
	return ""
}

func (x *OrderDetail) GetItemId() string {
	if x != nil {
		return x.ItemId
	}
	return ""
}

func (x *OrderDetail) GetAdzoneName() string {
	if x != nil {
		return x.AdzoneName
	}
	return ""
}

func (x *OrderDetail) GetTotalCommissionRate() string {
	if x != nil {
		return x.TotalCommissionRate
	}
	return ""
}

func (x *OrderDetail) GetItemLink() string {
	if x != nil {
		return x.ItemLink
	}
	return ""
}

func (x *OrderDetail) GetSiteId() int32 {
	if x != nil {
		return x.SiteId
	}
	return 0
}

func (x *OrderDetail) GetSellerShopTitle() string {
	if x != nil {
		return x.SellerShopTitle
	}
	return ""
}

func (x *OrderDetail) GetIncomeRate() string {
	if x != nil {
		return x.IncomeRate
	}
	return ""
}

func (x *OrderDetail) GetTotalCommissionFee() string {
	if x != nil {
		return x.TotalCommissionFee
	}
	return ""
}

func (x *OrderDetail) GetSpecialId() int32 {
	if x != nil {
		return x.SpecialId
	}
	return 0
}

func (x *OrderDetail) GetRelationId() int32 {
	if x != nil {
		return x.RelationId
	}
	return 0
}

func (x *OrderDetail) GetTkDepositTime() string {
	if x != nil {
		return x.TkDepositTime
	}
	return ""
}

func (x *OrderDetail) GetTbDepositTime() string {
	if x != nil {
		return x.TbDepositTime
	}
	return ""
}

func (x *OrderDetail) GetDepositPrice() string {
	if x != nil {
		return x.DepositPrice
	}
	return ""
}

func (x *OrderDetail) GetTkCommissionPreFeeForMediaPlatform() string {
	if x != nil {
		return x.TkCommissionPreFeeForMediaPlatform
	}
	return ""
}

func (x *OrderDetail) GetTkCommissionFeeForMediaPlatform() string {
	if x != nil {
		return x.TkCommissionFeeForMediaPlatform
	}
	return ""
}

func (x *OrderDetail) GetTkCommissionRateForMediaPlatform() string {
	if x != nil {
		return x.TkCommissionRateForMediaPlatform
	}
	return ""
}

func (x *OrderDetail) GetAlscId() string {
	if x != nil {
		return x.AlscId
	}
	return ""
}

func (x *OrderDetail) GetAlscPid() string {
	if x != nil {
		return x.AlscPid
	}
	return ""
}

func (x *OrderDetail) GetServiceFeeDtoList() []*ServiceFee {
	if x != nil {
		return x.ServiceFeeDtoList
	}
	return nil
}

func (x *OrderDetail) GetLxRid() string {
	if x != nil {
		return x.LxRid
	}
	return ""
}

func (x *OrderDetail) GetIsLx() string {
	if x != nil {
		return x.IsLx
	}
	return ""
}

type OrderDetailRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	StartTime     string  `protobuf:"bytes,1,opt,name=start_time,json=startTime,proto3" json:"start_time,omitempty"`                   // 开始时间
	EndTime       string  `protobuf:"bytes,2,opt,name=end_time,json=endTime,proto3" json:"end_time,omitempty"`                         // 订单查询结束时间，订单开始时间至订单结束时间，中间时间段日常要求不超过3个小时，但如618、双11、年货节等大促期间预估时间段不可超过20分钟，超过会提示错误，调用时请务必注意时间段的选择
	QueryType     *int32  `protobuf:"varint,3,opt,name=query_type,json=queryType,proto3,oneof" json:"query_type,omitempty"`            // 默认1；查询时间类型，1：按照订单淘客创建时间查询，2:按照订单淘客付款时间查询，3:按照订单淘客结算时间查询，4:按照订单更新时间；
	PositionIndex *string `protobuf:"bytes,4,opt,name=position_index,json=positionIndex,proto3,oneof" json:"position_index,omitempty"` // 位点，除第一页之外，都需要传递；前端原样返回
	PageSize      *int32  `protobuf:"varint,5,opt,name=page_size,json=pageSize,proto3,oneof" json:"page_size,omitempty"`               // 页大小，默认20，1~100
	PageNo        *int32  `protobuf:"varint,6,opt,name=page_no,json=pageNo,proto3,oneof" json:"page_no,omitempty"`                     // 第几页，默认1，1~100
	MemberType    *int32  `protobuf:"varint,7,opt,name=member_type,json=memberType,proto3,oneof" json:"member_type,omitempty"`         // 推广者角色类型,2:二方，3:三方，不传，表示所有角色
	TkStatus      *int32  `protobuf:"varint,8,opt,name=tk_status,json=tkStatus,proto3,oneof" json:"tk_status,omitempty"`               // 淘客订单状态，12-付款，13-关闭，14-确认收货，3-结算成功;不传，表示所有状态
	JumpType      *int32  `protobuf:"varint,9,opt,name=jump_type,json=jumpType,proto3,oneof" json:"jump_type,omitempty"`               // 默认1；跳转类型，当向前或者向后翻页必须提供,-1: 向前翻页,1：向后翻页
	OrderScene    *int32  `protobuf:"varint,10,opt,name=order_scene,json=orderScene,proto3,oneof" json:"order_scene,omitempty"`        // 场景订单场景类型，1:常规订单，2:渠道订单，3:会员运营订单，默认为1
	AccessToke    *string `protobuf:"bytes,11,opt,name=access_toke,json=accessToke,proto3,oneof" json:"access_toke,omitempty"`         // 用户access_token，多用户版本使用
	TbAuthId      *string `protobuf:"bytes,12,opt,name=tb_auth_id,json=tbAuthId,proto3,oneof" json:"tb_auth_id,omitempty"`             // 多授权，切换账号参数
}

func (x *OrderDetailRequest) Reset() {
	*x = OrderDetailRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_tb_ddx_proto_msgTypes[23]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OrderDetailRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OrderDetailRequest) ProtoMessage() {}

func (x *OrderDetailRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_tb_ddx_proto_msgTypes[23]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OrderDetailRequest.ProtoReflect.Descriptor instead.
func (*OrderDetailRequest) Descriptor() ([]byte, []int) {
	return file_api_tb_ddx_proto_rawDescGZIP(), []int{23}
}

func (x *OrderDetailRequest) GetStartTime() string {
	if x != nil {
		return x.StartTime
	}
	return ""
}

func (x *OrderDetailRequest) GetEndTime() string {
	if x != nil {
		return x.EndTime
	}
	return ""
}

func (x *OrderDetailRequest) GetQueryType() int32 {
	if x != nil && x.QueryType != nil {
		return *x.QueryType
	}
	return 0
}

func (x *OrderDetailRequest) GetPositionIndex() string {
	if x != nil && x.PositionIndex != nil {
		return *x.PositionIndex
	}
	return ""
}

func (x *OrderDetailRequest) GetPageSize() int32 {
	if x != nil && x.PageSize != nil {
		return *x.PageSize
	}
	return 0
}

func (x *OrderDetailRequest) GetPageNo() int32 {
	if x != nil && x.PageNo != nil {
		return *x.PageNo
	}
	return 0
}

func (x *OrderDetailRequest) GetMemberType() int32 {
	if x != nil && x.MemberType != nil {
		return *x.MemberType
	}
	return 0
}

func (x *OrderDetailRequest) GetTkStatus() int32 {
	if x != nil && x.TkStatus != nil {
		return *x.TkStatus
	}
	return 0
}

func (x *OrderDetailRequest) GetJumpType() int32 {
	if x != nil && x.JumpType != nil {
		return *x.JumpType
	}
	return 0
}

func (x *OrderDetailRequest) GetOrderScene() int32 {
	if x != nil && x.OrderScene != nil {
		return *x.OrderScene
	}
	return 0
}

func (x *OrderDetailRequest) GetAccessToke() string {
	if x != nil && x.AccessToke != nil {
		return *x.AccessToke
	}
	return ""
}

func (x *OrderDetailRequest) GetTbAuthId() string {
	if x != nil && x.TbAuthId != nil {
		return *x.TbAuthId
	}
	return ""
}

type OrderDetailResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code          int32          `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Msg           string         `protobuf:"bytes,2,opt,name=msg,proto3" json:"msg,omitempty"`
	HasPre        bool           `protobuf:"varint,3,opt,name=has_pre,json=hasPre,proto3" json:"has_pre,omitempty"`                     // 是否还有上一页
	HasNext       bool           `protobuf:"varint,4,opt,name=has_next,json=hasNext,proto3" json:"has_next,omitempty"`                  // 是否还有下一页
	PageNo        int32          `protobuf:"varint,5,opt,name=page_no,json=pageNo,proto3" json:"page_no,omitempty"`                     // 页码
	PageSize      int32          `protobuf:"varint,6,opt,name=page_size,json=pageSize,proto3" json:"page_size,omitempty"`               // 页大小
	PositionIndex string         `protobuf:"bytes,7,opt,name=position_index,json=positionIndex,proto3" json:"position_index,omitempty"` // 位点字段，由调用方原样传递
	Data          []*OrderDetail `protobuf:"bytes,8,rep,name=data,proto3" json:"data,omitempty"`
}

func (x *OrderDetailResponse) Reset() {
	*x = OrderDetailResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_tb_ddx_proto_msgTypes[24]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OrderDetailResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OrderDetailResponse) ProtoMessage() {}

func (x *OrderDetailResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_tb_ddx_proto_msgTypes[24]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OrderDetailResponse.ProtoReflect.Descriptor instead.
func (*OrderDetailResponse) Descriptor() ([]byte, []int) {
	return file_api_tb_ddx_proto_rawDescGZIP(), []int{24}
}

func (x *OrderDetailResponse) GetCode() int32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *OrderDetailResponse) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

func (x *OrderDetailResponse) GetHasPre() bool {
	if x != nil {
		return x.HasPre
	}
	return false
}

func (x *OrderDetailResponse) GetHasNext() bool {
	if x != nil {
		return x.HasNext
	}
	return false
}

func (x *OrderDetailResponse) GetPageNo() int32 {
	if x != nil {
		return x.PageNo
	}
	return 0
}

func (x *OrderDetailResponse) GetPageSize() int32 {
	if x != nil {
		return x.PageSize
	}
	return 0
}

func (x *OrderDetailResponse) GetPositionIndex() string {
	if x != nil {
		return x.PositionIndex
	}
	return ""
}

func (x *OrderDetailResponse) GetData() []*OrderDetail {
	if x != nil {
		return x.Data
	}
	return nil
}

var File_api_tb_ddx_proto protoreflect.FileDescriptor

var file_api_tb_ddx_proto_rawDesc = []byte{
	0x0a, 0x10, 0x61, 0x70, 0x69, 0x2e, 0x74, 0x62, 0x2e, 0x64, 0x64, 0x78, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x12, 0x04, 0x74, 0x62, 0x70, 0x62, 0x22, 0x25, 0x0a, 0x0b, 0x53, 0x6d, 0x61, 0x6c,
	0x6c, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x73, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x72, 0x69, 0x6e,
	0x67, 0x18, 0x01, 0x20, 0x03, 0x28, 0x09, 0x52, 0x06, 0x73, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x22,
	0xd5, 0x14, 0x0a, 0x0b, 0x47, 0x6f, 0x6f, 0x64, 0x73, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x12,
	0x1f, 0x0a, 0x0b, 0x63, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x5f, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x04, 0x52, 0x0a, 0x63, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x49, 0x64,
	0x12, 0x23, 0x0a, 0x0d, 0x63, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x5f, 0x6e, 0x61, 0x6d,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x63, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72,
	0x79, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x27, 0x0a, 0x0f, 0x63, 0x6f, 0x6d, 0x6d, 0x69, 0x73, 0x73,
	0x69, 0x6f, 0x6e, 0x5f, 0x72, 0x61, 0x74, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e,
	0x63, 0x6f, 0x6d, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x61, 0x74, 0x65, 0x12, 0x27,
	0x0a, 0x0f, 0x63, 0x6f, 0x6d, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x5f, 0x74, 0x79, 0x70,
	0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x63, 0x6f, 0x6d, 0x6d, 0x69, 0x73, 0x73,
	0x69, 0x6f, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x12, 0x23, 0x0a, 0x0d, 0x63, 0x6f, 0x75, 0x70, 0x6f,
	0x6e, 0x5f, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c,
	0x63, 0x6f, 0x75, 0x70, 0x6f, 0x6e, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x26, 0x0a, 0x0f,
	0x63, 0x6f, 0x75, 0x70, 0x6f, 0x6e, 0x5f, 0x65, 0x6e, 0x64, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18,
	0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x63, 0x6f, 0x75, 0x70, 0x6f, 0x6e, 0x45, 0x6e, 0x64,
	0x54, 0x69, 0x6d, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x63, 0x6f, 0x75, 0x70, 0x6f, 0x6e, 0x5f, 0x69,
	0x64, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x63, 0x6f, 0x75, 0x70, 0x6f, 0x6e, 0x49,
	0x64, 0x12, 0x1f, 0x0a, 0x0b, 0x63, 0x6f, 0x75, 0x70, 0x6f, 0x6e, 0x5f, 0x69, 0x6e, 0x66, 0x6f,
	0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x63, 0x6f, 0x75, 0x70, 0x6f, 0x6e, 0x49, 0x6e,
	0x66, 0x6f, 0x12, 0x2e, 0x0a, 0x13, 0x63, 0x6f, 0x75, 0x70, 0x6f, 0x6e, 0x5f, 0x72, 0x65, 0x6d,
	0x61, 0x69, 0x6e, 0x5f, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x09, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x11, 0x63, 0x6f, 0x75, 0x70, 0x6f, 0x6e, 0x52, 0x65, 0x6d, 0x61, 0x69, 0x6e, 0x43, 0x6f, 0x75,
	0x6e, 0x74, 0x12, 0x28, 0x0a, 0x10, 0x63, 0x6f, 0x75, 0x70, 0x6f, 0x6e, 0x5f, 0x73, 0x68, 0x61,
	0x72, 0x65, 0x5f, 0x75, 0x72, 0x6c, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x63, 0x6f,
	0x75, 0x70, 0x6f, 0x6e, 0x53, 0x68, 0x61, 0x72, 0x65, 0x55, 0x72, 0x6c, 0x12, 0x28, 0x0a, 0x10,
	0x63, 0x6f, 0x75, 0x70, 0x6f, 0x6e, 0x5f, 0x73, 0x74, 0x61, 0x72, 0x74, 0x5f, 0x66, 0x65, 0x65,
	0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x63, 0x6f, 0x75, 0x70, 0x6f, 0x6e, 0x53, 0x74,
	0x61, 0x72, 0x74, 0x46, 0x65, 0x65, 0x12, 0x2a, 0x0a, 0x11, 0x63, 0x6f, 0x75, 0x70, 0x6f, 0x6e,
	0x5f, 0x73, 0x74, 0x61, 0x72, 0x74, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x0c, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0f, 0x63, 0x6f, 0x75, 0x70, 0x6f, 0x6e, 0x53, 0x74, 0x61, 0x72, 0x74, 0x54, 0x69,
	0x6d, 0x65, 0x12, 0x2c, 0x0a, 0x12, 0x63, 0x6f, 0x75, 0x70, 0x6f, 0x6e, 0x5f, 0x74, 0x6f, 0x74,
	0x61, 0x6c, 0x5f, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x05, 0x52, 0x10,
	0x63, 0x6f, 0x75, 0x70, 0x6f, 0x6e, 0x54, 0x6f, 0x74, 0x61, 0x6c, 0x43, 0x6f, 0x75, 0x6e, 0x74,
	0x12, 0x21, 0x0a, 0x0c, 0x69, 0x6e, 0x63, 0x6c, 0x75, 0x64, 0x65, 0x5f, 0x64, 0x78, 0x6a, 0x68,
	0x18, 0x0e, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x69, 0x6e, 0x63, 0x6c, 0x75, 0x64, 0x65, 0x44,
	0x78, 0x6a, 0x68, 0x12, 0x1f, 0x0a, 0x0b, 0x69, 0x6e, 0x63, 0x6c, 0x75, 0x64, 0x65, 0x5f, 0x6d,
	0x6b, 0x74, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x69, 0x6e, 0x63, 0x6c, 0x75, 0x64,
	0x65, 0x4d, 0x6b, 0x74, 0x12, 0x1b, 0x0a, 0x09, 0x69, 0x6e, 0x66, 0x6f, 0x5f, 0x64, 0x78, 0x6a,
	0x68, 0x18, 0x10, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x69, 0x6e, 0x66, 0x6f, 0x44, 0x78, 0x6a,
	0x68, 0x12, 0x29, 0x0a, 0x10, 0x69, 0x74, 0x65, 0x6d, 0x5f, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69,
	0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x11, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x69, 0x74, 0x65,
	0x6d, 0x44, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x17, 0x0a, 0x07,
	0x69, 0x74, 0x65, 0x6d, 0x5f, 0x69, 0x64, 0x18, 0x12, 0x20, 0x01, 0x28, 0x04, 0x52, 0x06, 0x69,
	0x74, 0x65, 0x6d, 0x49, 0x64, 0x12, 0x19, 0x0a, 0x08, 0x69, 0x74, 0x65, 0x6d, 0x5f, 0x75, 0x72,
	0x6c, 0x18, 0x13, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x69, 0x74, 0x65, 0x6d, 0x55, 0x72, 0x6c,
	0x12, 0x31, 0x0a, 0x15, 0x6c, 0x65, 0x76, 0x65, 0x6c, 0x5f, 0x6f, 0x6e, 0x65, 0x5f, 0x63, 0x61,
	0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x5f, 0x69, 0x64, 0x18, 0x14, 0x20, 0x01, 0x28, 0x04, 0x52,
	0x12, 0x6c, 0x65, 0x76, 0x65, 0x6c, 0x4f, 0x6e, 0x65, 0x43, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72,
	0x79, 0x49, 0x64, 0x12, 0x35, 0x0a, 0x17, 0x6c, 0x65, 0x76, 0x65, 0x6c, 0x5f, 0x6f, 0x6e, 0x65,
	0x5f, 0x63, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x15,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x14, 0x6c, 0x65, 0x76, 0x65, 0x6c, 0x4f, 0x6e, 0x65, 0x43, 0x61,
	0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x69,
	0x63, 0x6b, 0x18, 0x16, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x69, 0x63, 0x6b, 0x12, 0x17,
	0x0a, 0x07, 0x6e, 0x75, 0x6d, 0x5f, 0x69, 0x69, 0x64, 0x18, 0x17, 0x20, 0x01, 0x28, 0x04, 0x52,
	0x06, 0x6e, 0x75, 0x6d, 0x49, 0x69, 0x64, 0x12, 0x19, 0x0a, 0x08, 0x70, 0x69, 0x63, 0x74, 0x5f,
	0x75, 0x72, 0x6c, 0x18, 0x18, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x70, 0x69, 0x63, 0x74, 0x55,
	0x72, 0x6c, 0x12, 0x27, 0x0a, 0x0f, 0x70, 0x72, 0x65, 0x73, 0x61, 0x6c, 0x65, 0x5f, 0x64, 0x65,
	0x70, 0x6f, 0x73, 0x69, 0x74, 0x18, 0x19, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x70, 0x72, 0x65,
	0x73, 0x61, 0x6c, 0x65, 0x44, 0x65, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x12, 0x28, 0x0a, 0x10, 0x70,
	0x72, 0x65, 0x73, 0x61, 0x6c, 0x65, 0x5f, 0x65, 0x6e, 0x64, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18,
	0x1a, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0e, 0x70, 0x72, 0x65, 0x73, 0x61, 0x6c, 0x65, 0x45, 0x6e,
	0x64, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x2c, 0x0a, 0x12, 0x70, 0x72, 0x65, 0x73, 0x61, 0x6c, 0x65,
	0x5f, 0x73, 0x74, 0x61, 0x72, 0x74, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x1b, 0x20, 0x01, 0x28,
	0x04, 0x52, 0x10, 0x70, 0x72, 0x65, 0x73, 0x61, 0x6c, 0x65, 0x53, 0x74, 0x61, 0x72, 0x74, 0x54,
	0x69, 0x6d, 0x65, 0x12, 0x31, 0x0a, 0x15, 0x70, 0x72, 0x65, 0x73, 0x61, 0x6c, 0x65, 0x5f, 0x74,
	0x61, 0x69, 0x6c, 0x5f, 0x65, 0x6e, 0x64, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x1c, 0x20, 0x01,
	0x28, 0x04, 0x52, 0x12, 0x70, 0x72, 0x65, 0x73, 0x61, 0x6c, 0x65, 0x54, 0x61, 0x69, 0x6c, 0x45,
	0x6e, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x35, 0x0a, 0x17, 0x70, 0x72, 0x65, 0x73, 0x61, 0x6c,
	0x65, 0x5f, 0x74, 0x61, 0x69, 0x6c, 0x5f, 0x73, 0x74, 0x61, 0x72, 0x74, 0x5f, 0x74, 0x69, 0x6d,
	0x65, 0x18, 0x1d, 0x20, 0x01, 0x28, 0x04, 0x52, 0x14, 0x70, 0x72, 0x65, 0x73, 0x61, 0x6c, 0x65,
	0x54, 0x61, 0x69, 0x6c, 0x53, 0x74, 0x61, 0x72, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x39, 0x0a,
	0x19, 0x70, 0x72, 0x65, 0x73, 0x61, 0x6c, 0x65, 0x5f, 0x64, 0x69, 0x73, 0x63, 0x6f, 0x75, 0x6e,
	0x74, 0x5f, 0x66, 0x65, 0x65, 0x5f, 0x74, 0x65, 0x78, 0x74, 0x18, 0x1e, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x16, 0x70, 0x72, 0x65, 0x73, 0x61, 0x6c, 0x65, 0x44, 0x69, 0x73, 0x63, 0x6f, 0x75, 0x6e,
	0x74, 0x46, 0x65, 0x65, 0x54, 0x65, 0x78, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x72, 0x6f, 0x76,
	0x63, 0x69, 0x74, 0x79, 0x18, 0x1f, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x70, 0x72, 0x6f, 0x76,
	0x63, 0x69, 0x74, 0x79, 0x12, 0x22, 0x0a, 0x0d, 0x72, 0x65, 0x61, 0x6c, 0x5f, 0x70, 0x6f, 0x73,
	0x74, 0x5f, 0x66, 0x65, 0x65, 0x18, 0x20, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x72, 0x65, 0x61,
	0x6c, 0x50, 0x6f, 0x73, 0x74, 0x46, 0x65, 0x65, 0x12, 0x23, 0x0a, 0x0d, 0x72, 0x65, 0x73, 0x65,
	0x72, 0x76, 0x65, 0x5f, 0x70, 0x72, 0x69, 0x63, 0x65, 0x18, 0x21, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0c, 0x72, 0x65, 0x73, 0x65, 0x72, 0x76, 0x65, 0x50, 0x72, 0x69, 0x63, 0x65, 0x12, 0x1b, 0x0a,
	0x09, 0x73, 0x65, 0x6c, 0x6c, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x22, 0x20, 0x01, 0x28, 0x04,
	0x52, 0x08, 0x73, 0x65, 0x6c, 0x6c, 0x65, 0x72, 0x49, 0x64, 0x12, 0x19, 0x0a, 0x08, 0x73, 0x68,
	0x6f, 0x70, 0x5f, 0x64, 0x73, 0x72, 0x18, 0x23, 0x20, 0x01, 0x28, 0x04, 0x52, 0x07, 0x73, 0x68,
	0x6f, 0x70, 0x44, 0x73, 0x72, 0x12, 0x1f, 0x0a, 0x0b, 0x73, 0x68, 0x6f, 0x72, 0x74, 0x5f, 0x74,
	0x69, 0x74, 0x6c, 0x65, 0x18, 0x24, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x73, 0x68, 0x6f, 0x72,
	0x74, 0x54, 0x69, 0x74, 0x6c, 0x65, 0x12, 0x34, 0x0a, 0x0c, 0x73, 0x6d, 0x61, 0x6c, 0x6c, 0x5f,
	0x69, 0x6d, 0x61, 0x67, 0x65, 0x73, 0x18, 0x25, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x74,
	0x62, 0x70, 0x62, 0x2e, 0x53, 0x6d, 0x61, 0x6c, 0x6c, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x73, 0x52,
	0x0b, 0x73, 0x6d, 0x61, 0x6c, 0x6c, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x73, 0x12, 0x25, 0x0a, 0x0e,
	0x73, 0x75, 0x70, 0x65, 0x72, 0x69, 0x6f, 0x72, 0x5f, 0x62, 0x72, 0x61, 0x6e, 0x64, 0x18, 0x26,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x73, 0x75, 0x70, 0x65, 0x72, 0x69, 0x6f, 0x72, 0x42, 0x72,
	0x61, 0x6e, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x27, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x12, 0x24, 0x0a, 0x0e, 0x74, 0x6b, 0x5f,
	0x74, 0x6f, 0x74, 0x61, 0x6c, 0x5f, 0x63, 0x6f, 0x6d, 0x6d, 0x69, 0x18, 0x28, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0c, 0x74, 0x6b, 0x54, 0x6f, 0x74, 0x61, 0x6c, 0x43, 0x6f, 0x6d, 0x6d, 0x69, 0x12,
	0x24, 0x0a, 0x0e, 0x74, 0x6b, 0x5f, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x5f, 0x73, 0x61, 0x6c, 0x65,
	0x73, 0x18, 0x29, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x74, 0x6b, 0x54, 0x6f, 0x74, 0x61, 0x6c,
	0x53, 0x61, 0x6c, 0x65, 0x73, 0x12, 0x10, 0x0a, 0x03, 0x75, 0x72, 0x6c, 0x18, 0x2a, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x03, 0x75, 0x72, 0x6c, 0x12, 0x1b, 0x0a, 0x09, 0x75, 0x73, 0x65, 0x72, 0x5f,
	0x74, 0x79, 0x70, 0x65, 0x18, 0x2b, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x75, 0x73, 0x65, 0x72,
	0x54, 0x79, 0x70, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x76, 0x6f, 0x6c, 0x75, 0x6d, 0x65, 0x18, 0x2c,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x76, 0x6f, 0x6c, 0x75, 0x6d, 0x65, 0x12, 0x1f, 0x0a, 0x0b,
	0x77, 0x68, 0x69, 0x74, 0x65, 0x5f, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x18, 0x2d, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0a, 0x77, 0x68, 0x69, 0x74, 0x65, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x12, 0x11, 0x0a,
	0x04, 0x78, 0x5f, 0x69, 0x64, 0x18, 0x2e, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x78, 0x49, 0x64,
	0x12, 0x24, 0x0a, 0x0e, 0x7a, 0x6b, 0x5f, 0x66, 0x69, 0x6e, 0x61, 0x6c, 0x5f, 0x70, 0x72, 0x69,
	0x63, 0x65, 0x18, 0x2f, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x7a, 0x6b, 0x46, 0x69, 0x6e, 0x61,
	0x6c, 0x50, 0x72, 0x69, 0x63, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x73, 0x68, 0x6f, 0x70, 0x5f, 0x74,
	0x69, 0x74, 0x6c, 0x65, 0x18, 0x30, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x73, 0x68, 0x6f, 0x70,
	0x54, 0x69, 0x74, 0x6c, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x6f, 0x65, 0x74, 0x69, 0x6d, 0x65, 0x18,
	0x31, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x6f, 0x65, 0x74, 0x69, 0x6d, 0x65, 0x12, 0x16, 0x0a,
	0x06, 0x6f, 0x73, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x32, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x6f,
	0x73, 0x74, 0x69, 0x6d, 0x65, 0x12, 0x17, 0x0a, 0x07, 0x6a, 0x64, 0x64, 0x5f, 0x6e, 0x75, 0x6d,
	0x18, 0x33, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x6a, 0x64, 0x64, 0x4e, 0x75, 0x6d, 0x12, 0x1b,
	0x0a, 0x09, 0x6a, 0x64, 0x64, 0x5f, 0x70, 0x72, 0x69, 0x63, 0x65, 0x18, 0x34, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x08, 0x6a, 0x64, 0x64, 0x50, 0x72, 0x69, 0x63, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x63,
	0x6f, 0x75, 0x70, 0x6f, 0x6e, 0x18, 0x35, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x63, 0x6f, 0x75,
	0x70, 0x6f, 0x6e, 0x12, 0x25, 0x0a, 0x0f, 0x75, 0x76, 0x5f, 0x73, 0x75, 0x6d, 0x5f, 0x70, 0x72,
	0x65, 0x5f, 0x73, 0x61, 0x6c, 0x65, 0x18, 0x36, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x75, 0x76,
	0x53, 0x75, 0x6d, 0x50, 0x72, 0x65, 0x53, 0x61, 0x6c, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x6f, 0x72,
	0x69, 0x67, 0x5f, 0x70, 0x72, 0x69, 0x63, 0x65, 0x18, 0x37, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09,
	0x6f, 0x72, 0x69, 0x67, 0x50, 0x72, 0x69, 0x63, 0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x74, 0x6f, 0x74,
	0x61, 0x6c, 0x5f, 0x73, 0x74, 0x6f, 0x63, 0x6b, 0x18, 0x38, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0a,
	0x74, 0x6f, 0x74, 0x61, 0x6c, 0x53, 0x74, 0x6f, 0x63, 0x6b, 0x12, 0x19, 0x0a, 0x08, 0x73, 0x65,
	0x6c, 0x6c, 0x5f, 0x6e, 0x75, 0x6d, 0x18, 0x39, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x73, 0x65,
	0x6c, 0x6c, 0x4e, 0x75, 0x6d, 0x12, 0x14, 0x0a, 0x05, 0x73, 0x74, 0x6f, 0x63, 0x6b, 0x18, 0x3a,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x73, 0x74, 0x6f, 0x63, 0x6b, 0x12, 0x37, 0x0a, 0x18, 0x74,
	0x6d, 0x61, 0x6c, 0x6c, 0x5f, 0x70, 0x6c, 0x61, 0x79, 0x5f, 0x61, 0x63, 0x74, 0x69, 0x76, 0x69,
	0x74, 0x79, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x18, 0x3b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x15, 0x74,
	0x6d, 0x61, 0x6c, 0x6c, 0x50, 0x6c, 0x61, 0x79, 0x41, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79,
	0x49, 0x6e, 0x66, 0x6f, 0x12, 0x2b, 0x0a, 0x12, 0x6c, 0x6f, 0x63, 0x6b, 0x5f, 0x72, 0x61, 0x74,
	0x65, 0x5f, 0x65, 0x6e, 0x64, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x3c, 0x20, 0x01, 0x28, 0x04,
	0x52, 0x0f, 0x6c, 0x6f, 0x63, 0x6b, 0x52, 0x61, 0x74, 0x65, 0x45, 0x6e, 0x64, 0x54, 0x69, 0x6d,
	0x65, 0x12, 0x2f, 0x0a, 0x14, 0x6c, 0x6f, 0x63, 0x6b, 0x5f, 0x72, 0x61, 0x74, 0x65, 0x5f, 0x73,
	0x74, 0x61, 0x72, 0x74, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x3d, 0x20, 0x01, 0x28, 0x04, 0x52,
	0x11, 0x6c, 0x6f, 0x63, 0x6b, 0x52, 0x61, 0x74, 0x65, 0x53, 0x74, 0x61, 0x72, 0x74, 0x54, 0x69,
	0x6d, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x6c, 0x6f, 0x63, 0x6b, 0x5f, 0x72, 0x61, 0x74, 0x65, 0x18,
	0x3e, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6c, 0x6f, 0x63, 0x6b, 0x52, 0x61, 0x74, 0x65, 0x12,
	0x2b, 0x0a, 0x12, 0x79, 0x73, 0x79, 0x6c, 0x5f, 0x74, 0x6c, 0x6a, 0x5f, 0x73, 0x65, 0x6e, 0x64,
	0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x3f, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x79, 0x73, 0x79,
	0x6c, 0x54, 0x6c, 0x6a, 0x53, 0x65, 0x6e, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x24, 0x0a, 0x0e,
	0x79, 0x73, 0x79, 0x6c, 0x5f, 0x63, 0x6c, 0x69, 0x63, 0x6b, 0x5f, 0x75, 0x72, 0x6c, 0x18, 0x40,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x79, 0x73, 0x79, 0x6c, 0x43, 0x6c, 0x69, 0x63, 0x6b, 0x55,
	0x72, 0x6c, 0x12, 0x30, 0x0a, 0x14, 0x79, 0x73, 0x79, 0x6c, 0x5f, 0x63, 0x6f, 0x6d, 0x6d, 0x69,
	0x73, 0x73, 0x69, 0x6f, 0x6e, 0x5f, 0x72, 0x61, 0x74, 0x65, 0x18, 0x41, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x12, 0x79, 0x73, 0x79, 0x6c, 0x43, 0x6f, 0x6d, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e,
	0x52, 0x61, 0x74, 0x65, 0x12, 0x22, 0x0a, 0x0d, 0x79, 0x73, 0x79, 0x6c, 0x5f, 0x74, 0x6c, 0x6a,
	0x5f, 0x66, 0x61, 0x63, 0x65, 0x18, 0x42, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x79, 0x73, 0x79,
	0x6c, 0x54, 0x6c, 0x6a, 0x46, 0x61, 0x63, 0x65, 0x12, 0x30, 0x0a, 0x15, 0x79, 0x73, 0x79, 0x6c,
	0x5f, 0x74, 0x6c, 0x6a, 0x5f, 0x75, 0x73, 0x65, 0x5f, 0x65, 0x6e, 0x64, 0x5f, 0x74, 0x69, 0x6d,
	0x65, 0x18, 0x43, 0x20, 0x01, 0x28, 0x09, 0x52, 0x11, 0x79, 0x73, 0x79, 0x6c, 0x54, 0x6c, 0x6a,
	0x55, 0x73, 0x65, 0x45, 0x6e, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x34, 0x0a, 0x17, 0x79, 0x73,
	0x79, 0x6c, 0x5f, 0x74, 0x6c, 0x6a, 0x5f, 0x75, 0x73, 0x65, 0x5f, 0x73, 0x74, 0x61, 0x72, 0x74,
	0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x44, 0x20, 0x01, 0x28, 0x09, 0x52, 0x13, 0x79, 0x73, 0x79,
	0x6c, 0x54, 0x6c, 0x6a, 0x55, 0x73, 0x65, 0x53, 0x74, 0x61, 0x72, 0x74, 0x54, 0x69, 0x6d, 0x65,
	0x12, 0x1d, 0x0a, 0x0a, 0x73, 0x61, 0x6c, 0x65, 0x5f, 0x70, 0x72, 0x69, 0x63, 0x65, 0x18, 0x45,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x73, 0x61, 0x6c, 0x65, 0x50, 0x72, 0x69, 0x63, 0x65, 0x12,
	0x34, 0x0a, 0x16, 0x6b, 0x75, 0x61, 0x64, 0x69, 0x61, 0x6e, 0x5f, 0x70, 0x72, 0x6f, 0x6d, 0x6f,
	0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x18, 0x46, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x14, 0x6b, 0x75, 0x61, 0x64, 0x69, 0x61, 0x6e, 0x50, 0x72, 0x6f, 0x6d, 0x6f, 0x74, 0x69, 0x6f,
	0x6e, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x1f, 0x0a, 0x0b, 0x63, 0x6f, 0x6d, 0x6d, 0x69, 0x5f, 0x73,
	0x63, 0x6f, 0x72, 0x65, 0x18, 0x47, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x63, 0x6f, 0x6d, 0x6d,
	0x69, 0x53, 0x63, 0x6f, 0x72, 0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x6d, 0x61, 0x74, 0x63, 0x68, 0x5f,
	0x73, 0x63, 0x6f, 0x72, 0x65, 0x18, 0x48, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x6d, 0x61, 0x74,
	0x63, 0x68, 0x53, 0x63, 0x6f, 0x72, 0x65, 0x22, 0xa1, 0x0c, 0x0a, 0x12, 0x53, 0x65, 0x61, 0x72,
	0x63, 0x68, 0x47, 0x6f, 0x6f, 0x64, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x18,
	0x0a, 0x07, 0x6b, 0x65, 0x79, 0x77, 0x6f, 0x72, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x07, 0x6b, 0x65, 0x79, 0x77, 0x6f, 0x72, 0x64, 0x12, 0x1f, 0x0a, 0x08, 0x63, 0x61, 0x74, 0x65,
	0x67, 0x6f, 0x72, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x08, 0x63, 0x61,
	0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x88, 0x01, 0x01, 0x12, 0x22, 0x0a, 0x0a, 0x68, 0x61, 0x73,
	0x5f, 0x63, 0x6f, 0x75, 0x70, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x08, 0x48, 0x01, 0x52,
	0x09, 0x68, 0x61, 0x73, 0x43, 0x6f, 0x75, 0x70, 0x6f, 0x6e, 0x88, 0x01, 0x01, 0x12, 0x17, 0x0a,
	0x04, 0x73, 0x6f, 0x72, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x48, 0x02, 0x52, 0x04, 0x73,
	0x6f, 0x72, 0x74, 0x88, 0x01, 0x01, 0x12, 0x1f, 0x0a, 0x08, 0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f,
	0x72, 0x6d, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x48, 0x03, 0x52, 0x08, 0x70, 0x6c, 0x61, 0x74,
	0x66, 0x6f, 0x72, 0x6d, 0x88, 0x01, 0x01, 0x12, 0x20, 0x0a, 0x09, 0x70, 0x61, 0x67, 0x65, 0x5f,
	0x73, 0x69, 0x7a, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x05, 0x48, 0x04, 0x52, 0x08, 0x70, 0x61,
	0x67, 0x65, 0x53, 0x69, 0x7a, 0x65, 0x88, 0x01, 0x01, 0x12, 0x1c, 0x0a, 0x07, 0x70, 0x61, 0x67,
	0x65, 0x5f, 0x6e, 0x6f, 0x18, 0x07, 0x20, 0x01, 0x28, 0x05, 0x48, 0x05, 0x52, 0x06, 0x70, 0x61,
	0x67, 0x65, 0x4e, 0x6f, 0x88, 0x01, 0x01, 0x12, 0x20, 0x0a, 0x09, 0x73, 0x74, 0x61, 0x72, 0x74,
	0x5f, 0x64, 0x73, 0x72, 0x18, 0x08, 0x20, 0x01, 0x28, 0x05, 0x48, 0x06, 0x52, 0x08, 0x73, 0x74,
	0x61, 0x72, 0x74, 0x44, 0x73, 0x72, 0x88, 0x01, 0x01, 0x12, 0x23, 0x0a, 0x0b, 0x65, 0x6e, 0x64,
	0x5f, 0x74, 0x6b, 0x5f, 0x72, 0x61, 0x74, 0x65, 0x18, 0x09, 0x20, 0x01, 0x28, 0x05, 0x48, 0x07,
	0x52, 0x09, 0x65, 0x6e, 0x64, 0x54, 0x6b, 0x52, 0x61, 0x74, 0x65, 0x88, 0x01, 0x01, 0x12, 0x27,
	0x0a, 0x0d, 0x73, 0x74, 0x61, 0x72, 0x74, 0x5f, 0x74, 0x6b, 0x5f, 0x72, 0x61, 0x74, 0x65, 0x18,
	0x0a, 0x20, 0x01, 0x28, 0x05, 0x48, 0x08, 0x52, 0x0b, 0x73, 0x74, 0x61, 0x72, 0x74, 0x54, 0x6b,
	0x52, 0x61, 0x74, 0x65, 0x88, 0x01, 0x01, 0x12, 0x20, 0x0a, 0x09, 0x65, 0x6e, 0x64, 0x5f, 0x70,
	0x72, 0x69, 0x63, 0x65, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x05, 0x48, 0x09, 0x52, 0x08, 0x65, 0x6e,
	0x64, 0x50, 0x72, 0x69, 0x63, 0x65, 0x88, 0x01, 0x01, 0x12, 0x24, 0x0a, 0x0b, 0x73, 0x74, 0x61,
	0x72, 0x74, 0x5f, 0x70, 0x72, 0x69, 0x63, 0x65, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x05, 0x48, 0x0a,
	0x52, 0x0a, 0x73, 0x74, 0x61, 0x72, 0x74, 0x50, 0x72, 0x69, 0x63, 0x65, 0x88, 0x01, 0x01, 0x12,
	0x24, 0x0a, 0x0b, 0x69, 0x73, 0x5f, 0x6f, 0x76, 0x65, 0x72, 0x73, 0x65, 0x61, 0x73, 0x18, 0x0d,
	0x20, 0x01, 0x28, 0x08, 0x48, 0x0b, 0x52, 0x0a, 0x69, 0x73, 0x4f, 0x76, 0x65, 0x72, 0x73, 0x65,
	0x61, 0x73, 0x88, 0x01, 0x01, 0x12, 0x1e, 0x0a, 0x08, 0x69, 0x73, 0x5f, 0x74, 0x6d, 0x61, 0x6c,
	0x6c, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x08, 0x48, 0x0c, 0x52, 0x07, 0x69, 0x73, 0x54, 0x6d, 0x61,
	0x6c, 0x6c, 0x88, 0x01, 0x01, 0x12, 0x1e, 0x0a, 0x08, 0x69, 0x74, 0x65, 0x6d, 0x5f, 0x6c, 0x6f,
	0x63, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x09, 0x48, 0x0d, 0x52, 0x07, 0x69, 0x74, 0x65, 0x6d, 0x4c,
	0x6f, 0x63, 0x88, 0x01, 0x01, 0x12, 0x24, 0x0a, 0x0b, 0x6d, 0x61, 0x74, 0x65, 0x72, 0x69, 0x61,
	0x6c, 0x5f, 0x69, 0x64, 0x18, 0x10, 0x20, 0x01, 0x28, 0x05, 0x48, 0x0e, 0x52, 0x0a, 0x6d, 0x61,
	0x74, 0x65, 0x72, 0x69, 0x61, 0x6c, 0x49, 0x64, 0x88, 0x01, 0x01, 0x12, 0x13, 0x0a, 0x02, 0x69,
	0x70, 0x18, 0x11, 0x20, 0x01, 0x28, 0x09, 0x48, 0x0f, 0x52, 0x02, 0x69, 0x70, 0x88, 0x01, 0x01,
	0x12, 0x2d, 0x0a, 0x10, 0x69, 0x6e, 0x63, 0x6c, 0x75, 0x64, 0x65, 0x5f, 0x72, 0x66, 0x64, 0x5f,
	0x72, 0x61, 0x74, 0x65, 0x18, 0x12, 0x20, 0x01, 0x28, 0x08, 0x48, 0x10, 0x52, 0x0e, 0x69, 0x6e,
	0x63, 0x6c, 0x75, 0x64, 0x65, 0x52, 0x66, 0x64, 0x52, 0x61, 0x74, 0x65, 0x88, 0x01, 0x01, 0x12,
	0x2f, 0x0a, 0x11, 0x69, 0x6e, 0x63, 0x6c, 0x75, 0x64, 0x65, 0x5f, 0x67, 0x6f, 0x6f, 0x64, 0x5f,
	0x72, 0x61, 0x74, 0x65, 0x18, 0x13, 0x20, 0x01, 0x28, 0x08, 0x48, 0x11, 0x52, 0x0f, 0x69, 0x6e,
	0x63, 0x6c, 0x75, 0x64, 0x65, 0x47, 0x6f, 0x6f, 0x64, 0x52, 0x61, 0x74, 0x65, 0x88, 0x01, 0x01,
	0x12, 0x2d, 0x0a, 0x10, 0x69, 0x6e, 0x63, 0x6c, 0x75, 0x64, 0x65, 0x5f, 0x70, 0x61, 0x79, 0x5f,
	0x72, 0x61, 0x74, 0x65, 0x18, 0x14, 0x20, 0x01, 0x28, 0x08, 0x48, 0x12, 0x52, 0x0e, 0x69, 0x6e,
	0x63, 0x6c, 0x75, 0x64, 0x65, 0x50, 0x61, 0x79, 0x52, 0x61, 0x74, 0x65, 0x88, 0x01, 0x01, 0x12,
	0x24, 0x0a, 0x0b, 0x6e, 0x65, 0x65, 0x64, 0x5f, 0x70, 0x72, 0x65, 0x70, 0x61, 0x79, 0x18, 0x15,
	0x20, 0x01, 0x28, 0x08, 0x48, 0x13, 0x52, 0x0a, 0x6e, 0x65, 0x65, 0x64, 0x50, 0x72, 0x65, 0x70,
	0x61, 0x79, 0x88, 0x01, 0x01, 0x12, 0x31, 0x0a, 0x12, 0x6e, 0x65, 0x65, 0x64, 0x5f, 0x66, 0x72,
	0x65, 0x65, 0x5f, 0x73, 0x68, 0x69, 0x70, 0x6d, 0x65, 0x6e, 0x74, 0x18, 0x16, 0x20, 0x01, 0x28,
	0x08, 0x48, 0x14, 0x52, 0x10, 0x6e, 0x65, 0x65, 0x64, 0x46, 0x72, 0x65, 0x65, 0x53, 0x68, 0x69,
	0x70, 0x6d, 0x65, 0x6e, 0x74, 0x88, 0x01, 0x01, 0x12, 0x20, 0x0a, 0x09, 0x6e, 0x70, 0x78, 0x5f,
	0x6c, 0x65, 0x76, 0x65, 0x6c, 0x18, 0x17, 0x20, 0x01, 0x28, 0x05, 0x48, 0x15, 0x52, 0x08, 0x6e,
	0x70, 0x78, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x88, 0x01, 0x01, 0x12, 0x28, 0x0a, 0x0e, 0x65, 0x6e,
	0x64, 0x5f, 0x6b, 0x61, 0x5f, 0x74, 0x6b, 0x5f, 0x72, 0x61, 0x74, 0x65, 0x18, 0x18, 0x20, 0x01,
	0x28, 0x05, 0x48, 0x16, 0x52, 0x0b, 0x65, 0x6e, 0x64, 0x4b, 0x61, 0x54, 0x6b, 0x52, 0x61, 0x74,
	0x65, 0x88, 0x01, 0x01, 0x12, 0x2c, 0x0a, 0x10, 0x73, 0x74, 0x61, 0x72, 0x74, 0x5f, 0x6b, 0x61,
	0x5f, 0x74, 0x6b, 0x5f, 0x72, 0x61, 0x74, 0x65, 0x18, 0x19, 0x20, 0x01, 0x28, 0x05, 0x48, 0x17,
	0x52, 0x0d, 0x73, 0x74, 0x61, 0x72, 0x74, 0x4b, 0x61, 0x54, 0x6b, 0x52, 0x61, 0x74, 0x65, 0x88,
	0x01, 0x01, 0x12, 0x30, 0x0a, 0x12, 0x6c, 0x6f, 0x63, 0x6b, 0x5f, 0x72, 0x61, 0x74, 0x65, 0x5f,
	0x65, 0x6e, 0x64, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x1a, 0x20, 0x01, 0x28, 0x04, 0x48, 0x18,
	0x52, 0x0f, 0x6c, 0x6f, 0x63, 0x6b, 0x52, 0x61, 0x74, 0x65, 0x45, 0x6e, 0x64, 0x54, 0x69, 0x6d,
	0x65, 0x88, 0x01, 0x01, 0x12, 0x34, 0x0a, 0x14, 0x6c, 0x6f, 0x63, 0x6b, 0x5f, 0x72, 0x61, 0x74,
	0x65, 0x5f, 0x73, 0x74, 0x61, 0x72, 0x74, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x1b, 0x20, 0x01,
	0x28, 0x04, 0x48, 0x19, 0x52, 0x11, 0x6c, 0x6f, 0x63, 0x6b, 0x52, 0x61, 0x74, 0x65, 0x53, 0x74,
	0x61, 0x72, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x88, 0x01, 0x01, 0x12, 0x24, 0x0a, 0x0b, 0x72, 0x65,
	0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x1c, 0x20, 0x01, 0x28, 0x09, 0x48,
	0x1a, 0x52, 0x0a, 0x72, 0x65, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x88, 0x01, 0x01,
	0x12, 0x22, 0x0a, 0x0a, 0x73, 0x70, 0x65, 0x63, 0x69, 0x61, 0x6c, 0x5f, 0x69, 0x64, 0x18, 0x1d,
	0x20, 0x01, 0x28, 0x09, 0x48, 0x1b, 0x52, 0x09, 0x73, 0x70, 0x65, 0x63, 0x69, 0x61, 0x6c, 0x49,
	0x64, 0x88, 0x01, 0x01, 0x42, 0x0b, 0x0a, 0x09, 0x5f, 0x63, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72,
	0x79, 0x42, 0x0d, 0x0a, 0x0b, 0x5f, 0x68, 0x61, 0x73, 0x5f, 0x63, 0x6f, 0x75, 0x70, 0x6f, 0x6e,
	0x42, 0x07, 0x0a, 0x05, 0x5f, 0x73, 0x6f, 0x72, 0x74, 0x42, 0x0b, 0x0a, 0x09, 0x5f, 0x70, 0x6c,
	0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x42, 0x0c, 0x0a, 0x0a, 0x5f, 0x70, 0x61, 0x67, 0x65, 0x5f,
	0x73, 0x69, 0x7a, 0x65, 0x42, 0x0a, 0x0a, 0x08, 0x5f, 0x70, 0x61, 0x67, 0x65, 0x5f, 0x6e, 0x6f,
	0x42, 0x0c, 0x0a, 0x0a, 0x5f, 0x73, 0x74, 0x61, 0x72, 0x74, 0x5f, 0x64, 0x73, 0x72, 0x42, 0x0e,
	0x0a, 0x0c, 0x5f, 0x65, 0x6e, 0x64, 0x5f, 0x74, 0x6b, 0x5f, 0x72, 0x61, 0x74, 0x65, 0x42, 0x10,
	0x0a, 0x0e, 0x5f, 0x73, 0x74, 0x61, 0x72, 0x74, 0x5f, 0x74, 0x6b, 0x5f, 0x72, 0x61, 0x74, 0x65,
	0x42, 0x0c, 0x0a, 0x0a, 0x5f, 0x65, 0x6e, 0x64, 0x5f, 0x70, 0x72, 0x69, 0x63, 0x65, 0x42, 0x0e,
	0x0a, 0x0c, 0x5f, 0x73, 0x74, 0x61, 0x72, 0x74, 0x5f, 0x70, 0x72, 0x69, 0x63, 0x65, 0x42, 0x0e,
	0x0a, 0x0c, 0x5f, 0x69, 0x73, 0x5f, 0x6f, 0x76, 0x65, 0x72, 0x73, 0x65, 0x61, 0x73, 0x42, 0x0b,
	0x0a, 0x09, 0x5f, 0x69, 0x73, 0x5f, 0x74, 0x6d, 0x61, 0x6c, 0x6c, 0x42, 0x0b, 0x0a, 0x09, 0x5f,
	0x69, 0x74, 0x65, 0x6d, 0x5f, 0x6c, 0x6f, 0x63, 0x42, 0x0e, 0x0a, 0x0c, 0x5f, 0x6d, 0x61, 0x74,
	0x65, 0x72, 0x69, 0x61, 0x6c, 0x5f, 0x69, 0x64, 0x42, 0x05, 0x0a, 0x03, 0x5f, 0x69, 0x70, 0x42,
	0x13, 0x0a, 0x11, 0x5f, 0x69, 0x6e, 0x63, 0x6c, 0x75, 0x64, 0x65, 0x5f, 0x72, 0x66, 0x64, 0x5f,
	0x72, 0x61, 0x74, 0x65, 0x42, 0x14, 0x0a, 0x12, 0x5f, 0x69, 0x6e, 0x63, 0x6c, 0x75, 0x64, 0x65,
	0x5f, 0x67, 0x6f, 0x6f, 0x64, 0x5f, 0x72, 0x61, 0x74, 0x65, 0x42, 0x13, 0x0a, 0x11, 0x5f, 0x69,
	0x6e, 0x63, 0x6c, 0x75, 0x64, 0x65, 0x5f, 0x70, 0x61, 0x79, 0x5f, 0x72, 0x61, 0x74, 0x65, 0x42,
	0x0e, 0x0a, 0x0c, 0x5f, 0x6e, 0x65, 0x65, 0x64, 0x5f, 0x70, 0x72, 0x65, 0x70, 0x61, 0x79, 0x42,
	0x15, 0x0a, 0x13, 0x5f, 0x6e, 0x65, 0x65, 0x64, 0x5f, 0x66, 0x72, 0x65, 0x65, 0x5f, 0x73, 0x68,
	0x69, 0x70, 0x6d, 0x65, 0x6e, 0x74, 0x42, 0x0c, 0x0a, 0x0a, 0x5f, 0x6e, 0x70, 0x78, 0x5f, 0x6c,
	0x65, 0x76, 0x65, 0x6c, 0x42, 0x11, 0x0a, 0x0f, 0x5f, 0x65, 0x6e, 0x64, 0x5f, 0x6b, 0x61, 0x5f,
	0x74, 0x6b, 0x5f, 0x72, 0x61, 0x74, 0x65, 0x42, 0x13, 0x0a, 0x11, 0x5f, 0x73, 0x74, 0x61, 0x72,
	0x74, 0x5f, 0x6b, 0x61, 0x5f, 0x74, 0x6b, 0x5f, 0x72, 0x61, 0x74, 0x65, 0x42, 0x15, 0x0a, 0x13,
	0x5f, 0x6c, 0x6f, 0x63, 0x6b, 0x5f, 0x72, 0x61, 0x74, 0x65, 0x5f, 0x65, 0x6e, 0x64, 0x5f, 0x74,
	0x69, 0x6d, 0x65, 0x42, 0x17, 0x0a, 0x15, 0x5f, 0x6c, 0x6f, 0x63, 0x6b, 0x5f, 0x72, 0x61, 0x74,
	0x65, 0x5f, 0x73, 0x74, 0x61, 0x72, 0x74, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x42, 0x0e, 0x0a, 0x0c,
	0x5f, 0x72, 0x65, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x42, 0x0d, 0x0a, 0x0b,
	0x5f, 0x73, 0x70, 0x65, 0x63, 0x69, 0x61, 0x6c, 0x5f, 0x69, 0x64, 0x22, 0x60, 0x0a, 0x12, 0x53,
	0x65, 0x61, 0x72, 0x63, 0x68, 0x47, 0x6f, 0x6f, 0x64, 0x73, 0x4d, 0x73, 0x67, 0x44, 0x61, 0x74,
	0x61, 0x12, 0x23, 0x0a, 0x0d, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x5f, 0x72, 0x65, 0x73, 0x75, 0x6c,
	0x74, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0c, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x52,
	0x65, 0x73, 0x75, 0x6c, 0x74, 0x73, 0x12, 0x25, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x02,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x74, 0x62, 0x70, 0x62, 0x2e, 0x47, 0x6f, 0x6f, 0x64,
	0x73, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x22, 0x69, 0x0a,
	0x13, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x47, 0x6f, 0x6f, 0x64, 0x73, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x6d, 0x73, 0x67, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6d, 0x73, 0x67, 0x12, 0x2c, 0x0a, 0x04, 0x64, 0x61,
	0x74, 0x61, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x74, 0x62, 0x70, 0x62, 0x2e,
	0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x47, 0x6f, 0x6f, 0x64, 0x73, 0x4d, 0x73, 0x67, 0x44, 0x61,
	0x74, 0x61, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x22, 0x8a, 0x01, 0x0a, 0x16, 0x44, 0x64, 0x78,
	0x54, 0x62, 0x41, 0x70, 0x69, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x47, 0x6f, 0x6f, 0x64, 0x73,
	0x52, 0x65, 0x73, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x6d, 0x73, 0x67, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6d, 0x73, 0x67, 0x12, 0x23, 0x0a, 0x0d, 0x74, 0x6f, 0x74,
	0x61, 0x6c, 0x5f, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x0c, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x73, 0x12, 0x25,
	0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x74,
	0x62, 0x70, 0x62, 0x2e, 0x47, 0x6f, 0x6f, 0x64, 0x73, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x52,
	0x04, 0x64, 0x61, 0x74, 0x61, 0x22, 0xd5, 0x06, 0x0a, 0x15, 0x50, 0x72, 0x6f, 0x6d, 0x6f, 0x74,
	0x65, 0x55, 0x52, 0x4c, 0x42, 0x79, 0x49, 0x44, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12,
	0x15, 0x0a, 0x03, 0x70, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x03,
	0x70, 0x69, 0x64, 0x88, 0x01, 0x01, 0x12, 0x24, 0x0a, 0x0b, 0x72, 0x65, 0x6c, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x48, 0x01, 0x52, 0x0a, 0x72,
	0x65, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x88, 0x01, 0x01, 0x12, 0x22, 0x0a, 0x0a,
	0x73, 0x70, 0x65, 0x63, 0x69, 0x61, 0x6c, 0x5f, 0x69, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09,
	0x48, 0x02, 0x52, 0x09, 0x73, 0x70, 0x65, 0x63, 0x69, 0x61, 0x6c, 0x49, 0x64, 0x88, 0x01, 0x01,
	0x12, 0x24, 0x0a, 0x0b, 0x65, 0x78, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x5f, 0x69, 0x64, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x09, 0x48, 0x03, 0x52, 0x0a, 0x65, 0x78, 0x74, 0x65, 0x72, 0x6e, 0x61,
	0x6c, 0x49, 0x64, 0x88, 0x01, 0x01, 0x12, 0x17, 0x0a, 0x04, 0x74, 0x70, 0x77, 0x64, 0x18, 0x06,
	0x20, 0x01, 0x28, 0x08, 0x48, 0x04, 0x52, 0x04, 0x74, 0x70, 0x77, 0x64, 0x88, 0x01, 0x01, 0x12,
	0x23, 0x0a, 0x0a, 0x61, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x49, 0x64, 0x18, 0x07, 0x20,
	0x01, 0x28, 0x09, 0x48, 0x05, 0x52, 0x0a, 0x61, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x49,
	0x64, 0x88, 0x01, 0x01, 0x12, 0x17, 0x0a, 0x04, 0x6c, 0x6f, 0x67, 0x6f, 0x18, 0x08, 0x20, 0x01,
	0x28, 0x09, 0x48, 0x06, 0x52, 0x04, 0x6c, 0x6f, 0x67, 0x6f, 0x88, 0x01, 0x01, 0x12, 0x17, 0x0a,
	0x04, 0x74, 0x65, 0x78, 0x74, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x48, 0x07, 0x52, 0x04, 0x74,
	0x65, 0x78, 0x74, 0x88, 0x01, 0x01, 0x12, 0x1f, 0x0a, 0x08, 0x69, 0x74, 0x65, 0x6d, 0x49, 0x6e,
	0x66, 0x6f, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x08, 0x48, 0x08, 0x52, 0x08, 0x69, 0x74, 0x65, 0x6d,
	0x49, 0x6e, 0x66, 0x6f, 0x88, 0x01, 0x01, 0x12, 0x1b, 0x0a, 0x06, 0x65, 0x78, 0x74, 0x73, 0x70,
	0x6b, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x08, 0x48, 0x09, 0x52, 0x06, 0x65, 0x78, 0x74, 0x73, 0x70,
	0x6b, 0x88, 0x01, 0x01, 0x12, 0x24, 0x0a, 0x0b, 0x6c, 0x65, 0x66, 0x74, 0x5f, 0x73, 0x79, 0x6d,
	0x62, 0x6f, 0x6c, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x09, 0x48, 0x0a, 0x52, 0x0a, 0x6c, 0x65, 0x66,
	0x74, 0x53, 0x79, 0x6d, 0x62, 0x6f, 0x6c, 0x88, 0x01, 0x01, 0x12, 0x26, 0x0a, 0x0c, 0x72, 0x69,
	0x67, 0x68, 0x74, 0x5f, 0x73, 0x79, 0x6d, 0x62, 0x6f, 0x6c, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x09,
	0x48, 0x0b, 0x52, 0x0b, 0x72, 0x69, 0x67, 0x68, 0x74, 0x53, 0x79, 0x6d, 0x62, 0x6f, 0x6c, 0x88,
	0x01, 0x01, 0x12, 0x1f, 0x0a, 0x08, 0x73, 0x68, 0x6f, 0x72, 0x74, 0x75, 0x72, 0x6c, 0x18, 0x0e,
	0x20, 0x01, 0x28, 0x08, 0x48, 0x0c, 0x52, 0x08, 0x73, 0x68, 0x6f, 0x72, 0x74, 0x75, 0x72, 0x6c,
	0x88, 0x01, 0x01, 0x12, 0x15, 0x0a, 0x03, 0x78, 0x69, 0x64, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x09,
	0x48, 0x0d, 0x52, 0x03, 0x78, 0x69, 0x64, 0x88, 0x01, 0x01, 0x12, 0x1b, 0x0a, 0x06, 0x61, 0x70,
	0x70, 0x6b, 0x65, 0x79, 0x18, 0x10, 0x20, 0x01, 0x28, 0x09, 0x48, 0x0e, 0x52, 0x06, 0x61, 0x70,
	0x70, 0x6b, 0x65, 0x79, 0x88, 0x01, 0x01, 0x12, 0x21, 0x0a, 0x09, 0x61, 0x70, 0x70, 0x73, 0x65,
	0x63, 0x72, 0x65, 0x74, 0x18, 0x11, 0x20, 0x01, 0x28, 0x09, 0x48, 0x0f, 0x52, 0x09, 0x61, 0x70,
	0x70, 0x73, 0x65, 0x63, 0x72, 0x65, 0x74, 0x88, 0x01, 0x01, 0x12, 0x21, 0x0a, 0x0a, 0x74, 0x62,
	0x5f, 0x61, 0x75, 0x74, 0x68, 0x5f, 0x69, 0x64, 0x18, 0x12, 0x20, 0x01, 0x28, 0x03, 0x48, 0x10,
	0x52, 0x08, 0x74, 0x62, 0x41, 0x75, 0x74, 0x68, 0x49, 0x64, 0x88, 0x01, 0x01, 0x12, 0x26, 0x0a,
	0x0c, 0x61, 0x63, 0x63, 0x65, 0x73, 0x73, 0x5f, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x13, 0x20,
	0x01, 0x28, 0x09, 0x48, 0x11, 0x52, 0x0b, 0x61, 0x63, 0x63, 0x65, 0x73, 0x73, 0x54, 0x6f, 0x6b,
	0x65, 0x6e, 0x88, 0x01, 0x01, 0x42, 0x06, 0x0a, 0x04, 0x5f, 0x70, 0x69, 0x64, 0x42, 0x0e, 0x0a,
	0x0c, 0x5f, 0x72, 0x65, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x42, 0x0d, 0x0a,
	0x0b, 0x5f, 0x73, 0x70, 0x65, 0x63, 0x69, 0x61, 0x6c, 0x5f, 0x69, 0x64, 0x42, 0x0e, 0x0a, 0x0c,
	0x5f, 0x65, 0x78, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x5f, 0x69, 0x64, 0x42, 0x07, 0x0a, 0x05,
	0x5f, 0x74, 0x70, 0x77, 0x64, 0x42, 0x0d, 0x0a, 0x0b, 0x5f, 0x61, 0x63, 0x74, 0x69, 0x76, 0x69,
	0x74, 0x79, 0x49, 0x64, 0x42, 0x07, 0x0a, 0x05, 0x5f, 0x6c, 0x6f, 0x67, 0x6f, 0x42, 0x07, 0x0a,
	0x05, 0x5f, 0x74, 0x65, 0x78, 0x74, 0x42, 0x0b, 0x0a, 0x09, 0x5f, 0x69, 0x74, 0x65, 0x6d, 0x49,
	0x6e, 0x66, 0x6f, 0x42, 0x09, 0x0a, 0x07, 0x5f, 0x65, 0x78, 0x74, 0x73, 0x70, 0x6b, 0x42, 0x0e,
	0x0a, 0x0c, 0x5f, 0x6c, 0x65, 0x66, 0x74, 0x5f, 0x73, 0x79, 0x6d, 0x62, 0x6f, 0x6c, 0x42, 0x0f,
	0x0a, 0x0d, 0x5f, 0x72, 0x69, 0x67, 0x68, 0x74, 0x5f, 0x73, 0x79, 0x6d, 0x62, 0x6f, 0x6c, 0x42,
	0x0b, 0x0a, 0x09, 0x5f, 0x73, 0x68, 0x6f, 0x72, 0x74, 0x75, 0x72, 0x6c, 0x42, 0x06, 0x0a, 0x04,
	0x5f, 0x78, 0x69, 0x64, 0x42, 0x09, 0x0a, 0x07, 0x5f, 0x61, 0x70, 0x70, 0x6b, 0x65, 0x79, 0x42,
	0x0c, 0x0a, 0x0a, 0x5f, 0x61, 0x70, 0x70, 0x73, 0x65, 0x63, 0x72, 0x65, 0x74, 0x42, 0x0d, 0x0a,
	0x0b, 0x5f, 0x74, 0x62, 0x5f, 0x61, 0x75, 0x74, 0x68, 0x5f, 0x69, 0x64, 0x42, 0x0f, 0x0a, 0x0d,
	0x5f, 0x61, 0x63, 0x63, 0x65, 0x73, 0x73, 0x5f, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x22, 0xd8, 0x06,
	0x0a, 0x16, 0x50, 0x72, 0x6f, 0x6d, 0x6f, 0x74, 0x65, 0x55, 0x52, 0x4c, 0x42, 0x79, 0x54, 0x4b,
	0x4c, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x10, 0x0a, 0x03, 0x74, 0x6b, 0x6c, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x74, 0x6b, 0x6c, 0x12, 0x15, 0x0a, 0x03, 0x70, 0x69,
	0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x03, 0x70, 0x69, 0x64, 0x88, 0x01,
	0x01, 0x12, 0x24, 0x0a, 0x0b, 0x72, 0x65, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x48, 0x01, 0x52, 0x0a, 0x72, 0x65, 0x6c, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x49, 0x64, 0x88, 0x01, 0x01, 0x12, 0x22, 0x0a, 0x0a, 0x73, 0x70, 0x65, 0x63, 0x69,
	0x61, 0x6c, 0x5f, 0x69, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x48, 0x02, 0x52, 0x09, 0x73,
	0x70, 0x65, 0x63, 0x69, 0x61, 0x6c, 0x49, 0x64, 0x88, 0x01, 0x01, 0x12, 0x24, 0x0a, 0x0b, 0x65,
	0x78, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x5f, 0x69, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09,
	0x48, 0x03, 0x52, 0x0a, 0x65, 0x78, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x49, 0x64, 0x88, 0x01,
	0x01, 0x12, 0x17, 0x0a, 0x04, 0x74, 0x70, 0x77, 0x64, 0x18, 0x06, 0x20, 0x01, 0x28, 0x08, 0x48,
	0x04, 0x52, 0x04, 0x74, 0x70, 0x77, 0x64, 0x88, 0x01, 0x01, 0x12, 0x23, 0x0a, 0x0a, 0x61, 0x63,
	0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x49, 0x64, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x48, 0x05,
	0x52, 0x0a, 0x61, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x49, 0x64, 0x88, 0x01, 0x01, 0x12,
	0x17, 0x0a, 0x04, 0x6c, 0x6f, 0x67, 0x6f, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x48, 0x06, 0x52,
	0x04, 0x6c, 0x6f, 0x67, 0x6f, 0x88, 0x01, 0x01, 0x12, 0x17, 0x0a, 0x04, 0x74, 0x65, 0x78, 0x74,
	0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x48, 0x07, 0x52, 0x04, 0x74, 0x65, 0x78, 0x74, 0x88, 0x01,
	0x01, 0x12, 0x1f, 0x0a, 0x08, 0x69, 0x74, 0x65, 0x6d, 0x49, 0x6e, 0x66, 0x6f, 0x18, 0x0a, 0x20,
	0x01, 0x28, 0x08, 0x48, 0x08, 0x52, 0x08, 0x69, 0x74, 0x65, 0x6d, 0x49, 0x6e, 0x66, 0x6f, 0x88,
	0x01, 0x01, 0x12, 0x1b, 0x0a, 0x06, 0x65, 0x78, 0x74, 0x73, 0x70, 0x6b, 0x18, 0x0b, 0x20, 0x01,
	0x28, 0x08, 0x48, 0x09, 0x52, 0x06, 0x65, 0x78, 0x74, 0x73, 0x70, 0x6b, 0x88, 0x01, 0x01, 0x12,
	0x24, 0x0a, 0x0b, 0x6c, 0x65, 0x66, 0x74, 0x5f, 0x73, 0x79, 0x6d, 0x62, 0x6f, 0x6c, 0x18, 0x0c,
	0x20, 0x01, 0x28, 0x09, 0x48, 0x0a, 0x52, 0x0a, 0x6c, 0x65, 0x66, 0x74, 0x53, 0x79, 0x6d, 0x62,
	0x6f, 0x6c, 0x88, 0x01, 0x01, 0x12, 0x26, 0x0a, 0x0c, 0x72, 0x69, 0x67, 0x68, 0x74, 0x5f, 0x73,
	0x79, 0x6d, 0x62, 0x6f, 0x6c, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x09, 0x48, 0x0b, 0x52, 0x0b, 0x72,
	0x69, 0x67, 0x68, 0x74, 0x53, 0x79, 0x6d, 0x62, 0x6f, 0x6c, 0x88, 0x01, 0x01, 0x12, 0x1f, 0x0a,
	0x08, 0x73, 0x68, 0x6f, 0x72, 0x74, 0x75, 0x72, 0x6c, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x08, 0x48,
	0x0c, 0x52, 0x08, 0x73, 0x68, 0x6f, 0x72, 0x74, 0x75, 0x72, 0x6c, 0x88, 0x01, 0x01, 0x12, 0x15,
	0x0a, 0x03, 0x78, 0x69, 0x64, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x09, 0x48, 0x0d, 0x52, 0x03, 0x78,
	0x69, 0x64, 0x88, 0x01, 0x01, 0x12, 0x1b, 0x0a, 0x06, 0x61, 0x70, 0x70, 0x6b, 0x65, 0x79, 0x18,
	0x10, 0x20, 0x01, 0x28, 0x09, 0x48, 0x0e, 0x52, 0x06, 0x61, 0x70, 0x70, 0x6b, 0x65, 0x79, 0x88,
	0x01, 0x01, 0x12, 0x21, 0x0a, 0x09, 0x61, 0x70, 0x70, 0x73, 0x65, 0x63, 0x72, 0x65, 0x74, 0x18,
	0x11, 0x20, 0x01, 0x28, 0x09, 0x48, 0x0f, 0x52, 0x09, 0x61, 0x70, 0x70, 0x73, 0x65, 0x63, 0x72,
	0x65, 0x74, 0x88, 0x01, 0x01, 0x12, 0x21, 0x0a, 0x0a, 0x74, 0x62, 0x5f, 0x61, 0x75, 0x74, 0x68,
	0x5f, 0x69, 0x64, 0x18, 0x12, 0x20, 0x01, 0x28, 0x03, 0x48, 0x10, 0x52, 0x08, 0x74, 0x62, 0x41,
	0x75, 0x74, 0x68, 0x49, 0x64, 0x88, 0x01, 0x01, 0x12, 0x26, 0x0a, 0x0c, 0x61, 0x63, 0x63, 0x65,
	0x73, 0x73, 0x5f, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x13, 0x20, 0x01, 0x28, 0x09, 0x48, 0x11,
	0x52, 0x0b, 0x61, 0x63, 0x63, 0x65, 0x73, 0x73, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x88, 0x01, 0x01,
	0x42, 0x06, 0x0a, 0x04, 0x5f, 0x70, 0x69, 0x64, 0x42, 0x0e, 0x0a, 0x0c, 0x5f, 0x72, 0x65, 0x6c,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x42, 0x0d, 0x0a, 0x0b, 0x5f, 0x73, 0x70, 0x65,
	0x63, 0x69, 0x61, 0x6c, 0x5f, 0x69, 0x64, 0x42, 0x0e, 0x0a, 0x0c, 0x5f, 0x65, 0x78, 0x74, 0x65,
	0x72, 0x6e, 0x61, 0x6c, 0x5f, 0x69, 0x64, 0x42, 0x07, 0x0a, 0x05, 0x5f, 0x74, 0x70, 0x77, 0x64,
	0x42, 0x0d, 0x0a, 0x0b, 0x5f, 0x61, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x49, 0x64, 0x42,
	0x07, 0x0a, 0x05, 0x5f, 0x6c, 0x6f, 0x67, 0x6f, 0x42, 0x07, 0x0a, 0x05, 0x5f, 0x74, 0x65, 0x78,
	0x74, 0x42, 0x0b, 0x0a, 0x09, 0x5f, 0x69, 0x74, 0x65, 0x6d, 0x49, 0x6e, 0x66, 0x6f, 0x42, 0x09,
	0x0a, 0x07, 0x5f, 0x65, 0x78, 0x74, 0x73, 0x70, 0x6b, 0x42, 0x0e, 0x0a, 0x0c, 0x5f, 0x6c, 0x65,
	0x66, 0x74, 0x5f, 0x73, 0x79, 0x6d, 0x62, 0x6f, 0x6c, 0x42, 0x0f, 0x0a, 0x0d, 0x5f, 0x72, 0x69,
	0x67, 0x68, 0x74, 0x5f, 0x73, 0x79, 0x6d, 0x62, 0x6f, 0x6c, 0x42, 0x0b, 0x0a, 0x09, 0x5f, 0x73,
	0x68, 0x6f, 0x72, 0x74, 0x75, 0x72, 0x6c, 0x42, 0x06, 0x0a, 0x04, 0x5f, 0x78, 0x69, 0x64, 0x42,
	0x09, 0x0a, 0x07, 0x5f, 0x61, 0x70, 0x70, 0x6b, 0x65, 0x79, 0x42, 0x0c, 0x0a, 0x0a, 0x5f, 0x61,
	0x70, 0x70, 0x73, 0x65, 0x63, 0x72, 0x65, 0x74, 0x42, 0x0d, 0x0a, 0x0b, 0x5f, 0x74, 0x62, 0x5f,
	0x61, 0x75, 0x74, 0x68, 0x5f, 0x69, 0x64, 0x42, 0x0f, 0x0a, 0x0d, 0x5f, 0x61, 0x63, 0x63, 0x65,
	0x73, 0x73, 0x5f, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x22, 0xc5, 0x03, 0x0a, 0x08, 0x49, 0x74, 0x65,
	0x6d, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x12, 0x19, 0x0a, 0x08, 0x70,
	0x69, 0x63, 0x74, 0x5f, 0x75, 0x72, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x70,
	0x69, 0x63, 0x74, 0x55, 0x72, 0x6c, 0x12, 0x34, 0x0a, 0x0c, 0x73, 0x6d, 0x61, 0x6c, 0x6c, 0x5f,
	0x69, 0x6d, 0x61, 0x67, 0x65, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x74,
	0x62, 0x70, 0x62, 0x2e, 0x53, 0x6d, 0x61, 0x6c, 0x6c, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x73, 0x52,
	0x0b, 0x73, 0x6d, 0x61, 0x6c, 0x6c, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x73, 0x12, 0x23, 0x0a, 0x0d,
	0x72, 0x65, 0x73, 0x65, 0x72, 0x76, 0x65, 0x5f, 0x70, 0x72, 0x69, 0x63, 0x65, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x02, 0x52, 0x0c, 0x72, 0x65, 0x73, 0x65, 0x72, 0x76, 0x65, 0x50, 0x72, 0x69, 0x63,
	0x65, 0x12, 0x24, 0x0a, 0x0e, 0x7a, 0x6b, 0x5f, 0x66, 0x69, 0x6e, 0x61, 0x6c, 0x5f, 0x70, 0x72,
	0x69, 0x63, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x02, 0x52, 0x0c, 0x7a, 0x6b, 0x46, 0x69, 0x6e,
	0x61, 0x6c, 0x50, 0x72, 0x69, 0x63, 0x65, 0x12, 0x24, 0x0a, 0x0e, 0x71, 0x68, 0x5f, 0x66, 0x69,
	0x6e, 0x61, 0x6c, 0x5f, 0x70, 0x72, 0x69, 0x63, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x02, 0x52,
	0x0c, 0x71, 0x68, 0x46, 0x69, 0x6e, 0x61, 0x6c, 0x50, 0x72, 0x69, 0x63, 0x65, 0x12, 0x2e, 0x0a,
	0x13, 0x71, 0x68, 0x5f, 0x66, 0x69, 0x6e, 0x61, 0x6c, 0x5f, 0x63, 0x6f, 0x6d, 0x6d, 0x69, 0x73,
	0x73, 0x69, 0x6f, 0x6e, 0x18, 0x07, 0x20, 0x01, 0x28, 0x02, 0x52, 0x11, 0x71, 0x68, 0x46, 0x69,
	0x6e, 0x61, 0x6c, 0x43, 0x6f, 0x6d, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x1f, 0x0a,
	0x0b, 0x61, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x5f, 0x69, 0x64, 0x18, 0x08, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0a, 0x61, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x49, 0x64, 0x12, 0x1b,
	0x0a, 0x09, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x09, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x08, 0x75, 0x73, 0x65, 0x72, 0x54, 0x79, 0x70, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x76,
	0x6f, 0x6c, 0x75, 0x6d, 0x65, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x76, 0x6f, 0x6c,
	0x75, 0x6d, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x73, 0x65, 0x6c, 0x6c, 0x65, 0x72, 0x5f, 0x69, 0x64,
	0x18, 0x0b, 0x20, 0x01, 0x28, 0x04, 0x52, 0x08, 0x73, 0x65, 0x6c, 0x6c, 0x65, 0x72, 0x49, 0x64,
	0x12, 0x12, 0x0a, 0x04, 0x6e, 0x69, 0x63, 0x6b, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04,
	0x6e, 0x69, 0x63, 0x6b, 0x12, 0x2a, 0x0a, 0x11, 0x6d, 0x61, 0x74, 0x65, 0x72, 0x69, 0x61, 0x6c,
	0x5f, 0x6c, 0x69, 0x62, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0f, 0x6d, 0x61, 0x74, 0x65, 0x72, 0x69, 0x61, 0x6c, 0x4c, 0x69, 0x62, 0x54, 0x79, 0x70, 0x65,
	0x22, 0x83, 0x0a, 0x0a, 0x0f, 0x50, 0x72, 0x6f, 0x6d, 0x6f, 0x74, 0x65, 0x64, 0x55, 0x52, 0x4c,
	0x44, 0x61, 0x74, 0x61, 0x12, 0x1f, 0x0a, 0x0b, 0x63, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79,
	0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0a, 0x63, 0x61, 0x74, 0x65, 0x67,
	0x6f, 0x72, 0x79, 0x49, 0x64, 0x12, 0x28, 0x0a, 0x10, 0x63, 0x6f, 0x75, 0x70, 0x6f, 0x6e, 0x5f,
	0x63, 0x6c, 0x69, 0x63, 0x6b, 0x5f, 0x75, 0x72, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0e, 0x63, 0x6f, 0x75, 0x70, 0x6f, 0x6e, 0x43, 0x6c, 0x69, 0x63, 0x6b, 0x55, 0x72, 0x6c, 0x12,
	0x2a, 0x0a, 0x11, 0x63, 0x6f, 0x75, 0x70, 0x6f, 0x6e, 0x5f, 0x73, 0x74, 0x61, 0x72, 0x74, 0x5f,
	0x74, 0x69, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x63, 0x6f, 0x75, 0x70,
	0x6f, 0x6e, 0x53, 0x74, 0x61, 0x72, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x26, 0x0a, 0x0f, 0x63,
	0x6f, 0x75, 0x70, 0x6f, 0x6e, 0x5f, 0x65, 0x6e, 0x64, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x63, 0x6f, 0x75, 0x70, 0x6f, 0x6e, 0x45, 0x6e, 0x64, 0x54,
	0x69, 0x6d, 0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x63, 0x6f, 0x75, 0x70, 0x6f, 0x6e, 0x5f, 0x69, 0x6e,
	0x66, 0x6f, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x63, 0x6f, 0x75, 0x70, 0x6f, 0x6e,
	0x49, 0x6e, 0x66, 0x6f, 0x12, 0x16, 0x0a, 0x06, 0x63, 0x6f, 0x75, 0x70, 0x6f, 0x6e, 0x18, 0x06,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x63, 0x6f, 0x75, 0x70, 0x6f, 0x6e, 0x12, 0x17, 0x0a, 0x07,
	0x69, 0x74, 0x65, 0x6d, 0x5f, 0x69, 0x64, 0x18, 0x07, 0x20, 0x01, 0x28, 0x04, 0x52, 0x06, 0x69,
	0x74, 0x65, 0x6d, 0x49, 0x64, 0x12, 0x2e, 0x0a, 0x13, 0x6d, 0x61, 0x78, 0x5f, 0x63, 0x6f, 0x6d,
	0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x5f, 0x72, 0x61, 0x74, 0x65, 0x18, 0x08, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x11, 0x6d, 0x61, 0x78, 0x43, 0x6f, 0x6d, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f,
	0x6e, 0x52, 0x61, 0x74, 0x65, 0x12, 0x2c, 0x0a, 0x12, 0x63, 0x6f, 0x75, 0x70, 0x6f, 0x6e, 0x5f,
	0x74, 0x6f, 0x74, 0x61, 0x6c, 0x5f, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x09, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x10, 0x63, 0x6f, 0x75, 0x70, 0x6f, 0x6e, 0x54, 0x6f, 0x74, 0x61, 0x6c, 0x43, 0x6f,
	0x75, 0x6e, 0x74, 0x12, 0x2e, 0x0a, 0x13, 0x63, 0x6f, 0x75, 0x70, 0x6f, 0x6e, 0x5f, 0x72, 0x65,
	0x6d, 0x61, 0x69, 0x6e, 0x5f, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x11, 0x63, 0x6f, 0x75, 0x70, 0x6f, 0x6e, 0x52, 0x65, 0x6d, 0x61, 0x69, 0x6e, 0x43, 0x6f,
	0x75, 0x6e, 0x74, 0x12, 0x33, 0x0a, 0x16, 0x6d, 0x6d, 0x5f, 0x63, 0x6f, 0x75, 0x70, 0x6f, 0x6e,
	0x5f, 0x72, 0x65, 0x6d, 0x61, 0x69, 0x6e, 0x5f, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x0b, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x13, 0x6d, 0x6d, 0x43, 0x6f, 0x75, 0x70, 0x6f, 0x6e, 0x52, 0x65, 0x6d,
	0x61, 0x69, 0x6e, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x31, 0x0a, 0x15, 0x6d, 0x6d, 0x5f, 0x63,
	0x6f, 0x75, 0x70, 0x6f, 0x6e, 0x5f, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x5f, 0x63, 0x6f, 0x75, 0x6e,
	0x74, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x05, 0x52, 0x12, 0x6d, 0x6d, 0x43, 0x6f, 0x75, 0x70, 0x6f,
	0x6e, 0x54, 0x6f, 0x74, 0x61, 0x6c, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x2d, 0x0a, 0x13, 0x6d,
	0x6d, 0x5f, 0x63, 0x6f, 0x75, 0x70, 0x6f, 0x6e, 0x5f, 0x63, 0x6c, 0x69, 0x63, 0x6b, 0x5f, 0x75,
	0x72, 0x6c, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x09, 0x52, 0x10, 0x6d, 0x6d, 0x43, 0x6f, 0x75, 0x70,
	0x6f, 0x6e, 0x43, 0x6c, 0x69, 0x63, 0x6b, 0x55, 0x72, 0x6c, 0x12, 0x2f, 0x0a, 0x14, 0x6d, 0x6d,
	0x5f, 0x63, 0x6f, 0x75, 0x70, 0x6f, 0x6e, 0x5f, 0x73, 0x74, 0x61, 0x72, 0x74, 0x5f, 0x74, 0x69,
	0x6d, 0x65, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x09, 0x52, 0x11, 0x6d, 0x6d, 0x43, 0x6f, 0x75, 0x70,
	0x6f, 0x6e, 0x53, 0x74, 0x61, 0x72, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x2b, 0x0a, 0x12, 0x6d,
	0x6d, 0x5f, 0x63, 0x6f, 0x75, 0x70, 0x6f, 0x6e, 0x5f, 0x65, 0x6e, 0x64, 0x5f, 0x74, 0x69, 0x6d,
	0x65, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x6d, 0x6d, 0x43, 0x6f, 0x75, 0x70, 0x6f,
	0x6e, 0x45, 0x6e, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x24, 0x0a, 0x0e, 0x6d, 0x6d, 0x5f, 0x63,
	0x6f, 0x75, 0x70, 0x6f, 0x6e, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x18, 0x10, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0c, 0x6d, 0x6d, 0x43, 0x6f, 0x75, 0x70, 0x6f, 0x6e, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x1f,
	0x0a, 0x0b, 0x63, 0x6f, 0x75, 0x70, 0x6f, 0x6e, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x11, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x0a, 0x63, 0x6f, 0x75, 0x70, 0x6f, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x12,
	0x19, 0x0a, 0x08, 0x69, 0x74, 0x65, 0x6d, 0x5f, 0x75, 0x72, 0x6c, 0x18, 0x12, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x07, 0x69, 0x74, 0x65, 0x6d, 0x55, 0x72, 0x6c, 0x12, 0x1f, 0x0a, 0x0b, 0x63, 0x6f,
	0x75, 0x70, 0x6f, 0x6e, 0x5f, 0x74, 0x70, 0x77, 0x64, 0x18, 0x13, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0a, 0x63, 0x6f, 0x75, 0x70, 0x6f, 0x6e, 0x54, 0x70, 0x77, 0x64, 0x12, 0x28, 0x0a, 0x10, 0x6c,
	0x6f, 0x6e, 0x67, 0x5f, 0x63, 0x6f, 0x75, 0x70, 0x6f, 0x6e, 0x5f, 0x74, 0x70, 0x77, 0x64, 0x18,
	0x14, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x6c, 0x6f, 0x6e, 0x67, 0x43, 0x6f, 0x75, 0x70, 0x6f,
	0x6e, 0x54, 0x70, 0x77, 0x64, 0x12, 0x1b, 0x0a, 0x09, 0x69, 0x74, 0x65, 0x6d, 0x5f, 0x74, 0x70,
	0x77, 0x64, 0x18, 0x15, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x69, 0x74, 0x65, 0x6d, 0x54, 0x70,
	0x77, 0x64, 0x12, 0x24, 0x0a, 0x0e, 0x6c, 0x6f, 0x6e, 0x67, 0x5f, 0x69, 0x74, 0x65, 0x6d, 0x5f,
	0x74, 0x70, 0x77, 0x64, 0x18, 0x16, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x6c, 0x6f, 0x6e, 0x67,
	0x49, 0x74, 0x65, 0x6d, 0x54, 0x70, 0x77, 0x64, 0x12, 0x2a, 0x0a, 0x08, 0x69, 0x74, 0x65, 0x6d,
	0x49, 0x6e, 0x66, 0x6f, 0x18, 0x17, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x74, 0x62, 0x70,
	0x62, 0x2e, 0x49, 0x74, 0x65, 0x6d, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x08, 0x69, 0x74, 0x65, 0x6d,
	0x49, 0x6e, 0x66, 0x6f, 0x12, 0x24, 0x0a, 0x0e, 0x79, 0x73, 0x79, 0x6c, 0x5f, 0x63, 0x6c, 0x69,
	0x63, 0x6b, 0x5f, 0x75, 0x72, 0x6c, 0x18, 0x18, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x79, 0x73,
	0x79, 0x6c, 0x43, 0x6c, 0x69, 0x63, 0x6b, 0x55, 0x72, 0x6c, 0x12, 0x22, 0x0a, 0x0d, 0x79, 0x73,
	0x79, 0x6c, 0x5f, 0x74, 0x6c, 0x6a, 0x5f, 0x66, 0x61, 0x63, 0x65, 0x18, 0x19, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0b, 0x79, 0x73, 0x79, 0x6c, 0x54, 0x6c, 0x6a, 0x46, 0x61, 0x63, 0x65, 0x12, 0x2b,
	0x0a, 0x12, 0x79, 0x73, 0x79, 0x6c, 0x5f, 0x74, 0x6c, 0x6a, 0x5f, 0x73, 0x65, 0x6e, 0x64, 0x5f,
	0x74, 0x69, 0x6d, 0x65, 0x18, 0x1a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x79, 0x73, 0x79, 0x6c,
	0x54, 0x6c, 0x6a, 0x53, 0x65, 0x6e, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x30, 0x0a, 0x14, 0x79,
	0x73, 0x79, 0x6c, 0x5f, 0x63, 0x6f, 0x6d, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x5f, 0x72,
	0x61, 0x74, 0x65, 0x18, 0x1b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x12, 0x79, 0x73, 0x79, 0x6c, 0x43,
	0x6f, 0x6d, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x61, 0x74, 0x65, 0x12, 0x34, 0x0a,
	0x17, 0x79, 0x73, 0x79, 0x6c, 0x5f, 0x74, 0x6c, 0x6a, 0x5f, 0x75, 0x73, 0x65, 0x5f, 0x73, 0x74,
	0x61, 0x72, 0x74, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x1c, 0x20, 0x01, 0x28, 0x09, 0x52, 0x13,
	0x79, 0x73, 0x79, 0x6c, 0x54, 0x6c, 0x6a, 0x55, 0x73, 0x65, 0x53, 0x74, 0x61, 0x72, 0x74, 0x54,
	0x69, 0x6d, 0x65, 0x12, 0x30, 0x0a, 0x15, 0x79, 0x73, 0x79, 0x6c, 0x5f, 0x74, 0x6c, 0x6a, 0x5f,
	0x75, 0x73, 0x65, 0x5f, 0x65, 0x6e, 0x64, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x1d, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x11, 0x79, 0x73, 0x79, 0x6c, 0x54, 0x6c, 0x6a, 0x55, 0x73, 0x65, 0x45, 0x6e,
	0x64, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x2e, 0x0a, 0x13, 0x6d, 0x69, 0x6e, 0x5f, 0x63, 0x6f, 0x6d,
	0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x5f, 0x72, 0x61, 0x74, 0x65, 0x18, 0x1e, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x11, 0x6d, 0x69, 0x6e, 0x43, 0x6f, 0x6d, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f,
	0x6e, 0x52, 0x61, 0x74, 0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x72, 0x65, 0x77, 0x61, 0x72, 0x64, 0x5f,
	0x69, 0x6e, 0x66, 0x6f, 0x18, 0x1f, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0a, 0x72, 0x65, 0x77, 0x61,
	0x72, 0x64, 0x49, 0x6e, 0x66, 0x6f, 0x22, 0x65, 0x0a, 0x12, 0x50, 0x72, 0x6f, 0x6d, 0x6f, 0x74,
	0x65, 0x55, 0x52, 0x4c, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x12, 0x0a, 0x04,
	0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65,
	0x12, 0x10, 0x0a, 0x03, 0x6d, 0x73, 0x67, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6d,
	0x73, 0x67, 0x12, 0x29, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x15, 0x2e, 0x74, 0x62, 0x70, 0x62, 0x2e, 0x50, 0x72, 0x6f, 0x6d, 0x6f, 0x74, 0x65, 0x64,
	0x55, 0x52, 0x4c, 0x44, 0x61, 0x74, 0x61, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x22, 0x98, 0x02,
	0x0a, 0x0b, 0x4f, 0x66, 0x66, 0x6c, 0x69, 0x6e, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x1b, 0x0a,
	0x09, 0x73, 0x68, 0x6f, 0x70, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x08, 0x73, 0x68, 0x6f, 0x70, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x73, 0x68,
	0x6f, 0x70, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x73,
	0x68, 0x6f, 0x70, 0x54, 0x79, 0x70, 0x65, 0x12, 0x21, 0x0a, 0x0c, 0x70, 0x68, 0x6f, 0x6e, 0x65,
	0x5f, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x70,
	0x68, 0x6f, 0x6e, 0x65, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x12, 0x25, 0x0a, 0x0e, 0x64, 0x65,
	0x74, 0x61, 0x69, 0x6c, 0x5f, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0d, 0x64, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73,
	0x73, 0x12, 0x1a, 0x0a, 0x08, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x05, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x08, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x2a, 0x0a,
	0x11, 0x73, 0x68, 0x6f, 0x70, 0x5f, 0x63, 0x65, 0x72, 0x74, 0x69, 0x66, 0x79, 0x5f, 0x74, 0x79,
	0x70, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x73, 0x68, 0x6f, 0x70, 0x43, 0x65,
	0x72, 0x74, 0x69, 0x66, 0x79, 0x54, 0x79, 0x70, 0x65, 0x12, 0x25, 0x0a, 0x0e, 0x63, 0x65, 0x72,
	0x74, 0x69, 0x66, 0x79, 0x5f, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x18, 0x07, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0d, 0x63, 0x65, 0x72, 0x74, 0x69, 0x66, 0x79, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72,
	0x12, 0x16, 0x0a, 0x06, 0x63, 0x61, 0x72, 0x65, 0x65, 0x72, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x06, 0x63, 0x61, 0x72, 0x65, 0x65, 0x72, 0x22, 0xc8, 0x03, 0x0a, 0x07, 0x4d, 0x61, 0x70,
	0x44, 0x61, 0x74, 0x61, 0x12, 0x1f, 0x0a, 0x0b, 0x72, 0x65, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f,
	0x61, 0x70, 0x70, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x72, 0x65, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x41, 0x70, 0x70, 0x12, 0x1f, 0x0a, 0x0b, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x5f,
	0x64, 0x61, 0x74, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x63, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x44, 0x61, 0x74, 0x65, 0x12, 0x21, 0x0a, 0x0c, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e,
	0x74, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x61, 0x63,
	0x63, 0x6f, 0x75, 0x6e, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x19, 0x0a, 0x08, 0x72, 0x65, 0x61,
	0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x72, 0x65, 0x61,
	0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x72, 0x65, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f,
	0x69, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x72, 0x65, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x49, 0x64, 0x12, 0x21, 0x0a, 0x0c, 0x6f, 0x66, 0x66, 0x69, 0x6e, 0x65, 0x5f, 0x73, 0x63,
	0x65, 0x6e, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x6f, 0x66, 0x66, 0x69, 0x6e,
	0x65, 0x53, 0x63, 0x65, 0x6e, 0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x6f, 0x6e, 0x69, 0x6e, 0x65, 0x5f,
	0x73, 0x63, 0x65, 0x6e, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x6f, 0x6e, 0x69,
	0x6e, 0x65, 0x53, 0x63, 0x65, 0x6e, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x6f, 0x74, 0x65, 0x18,
	0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x6f, 0x74, 0x65, 0x12, 0x19, 0x0a, 0x08, 0x72,
	0x6f, 0x6f, 0x74, 0x5f, 0x70, 0x69, 0x64, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x72,
	0x6f, 0x6f, 0x74, 0x50, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x72, 0x74, 0x61, 0x67, 0x18, 0x0a,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x72, 0x74, 0x61, 0x67, 0x12, 0x32, 0x0a, 0x0b, 0x6f, 0x66,
	0x66, 0x69, 0x6e, 0x65, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x11, 0x2e, 0x74, 0x62, 0x70, 0x62, 0x2e, 0x4f, 0x66, 0x66, 0x6c, 0x69, 0x6e, 0x65, 0x49, 0x6e,
	0x66, 0x6f, 0x52, 0x0a, 0x6f, 0x66, 0x66, 0x69, 0x6e, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x1d,
	0x0a, 0x0a, 0x73, 0x70, 0x65, 0x63, 0x69, 0x61, 0x6c, 0x5f, 0x69, 0x64, 0x18, 0x0c, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x09, 0x73, 0x70, 0x65, 0x63, 0x69, 0x61, 0x6c, 0x49, 0x64, 0x12, 0x23, 0x0a,
	0x0d, 0x70, 0x75, 0x6e, 0x69, 0x73, 0x68, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x0d,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x70, 0x75, 0x6e, 0x69, 0x73, 0x68, 0x53, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x12, 0x1f, 0x0a, 0x0b, 0x65, 0x78, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x5f, 0x69,
	0x64, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x65, 0x78, 0x74, 0x65, 0x72, 0x6e, 0x61,
	0x6c, 0x49, 0x64, 0x22, 0x37, 0x0a, 0x0b, 0x49, 0x6e, 0x76, 0x69, 0x74, 0x65, 0x72, 0x4c, 0x69,
	0x73, 0x74, 0x12, 0x28, 0x0a, 0x08, 0x6d, 0x61, 0x70, 0x5f, 0x64, 0x61, 0x74, 0x61, 0x18, 0x01,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x74, 0x62, 0x70, 0x62, 0x2e, 0x4d, 0x61, 0x70, 0x44,
	0x61, 0x74, 0x61, 0x52, 0x07, 0x6d, 0x61, 0x70, 0x44, 0x61, 0x74, 0x61, 0x22, 0x2c, 0x0a, 0x12,
	0x52, 0x6f, 0x6f, 0x74, 0x50, 0x69, 0x64, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x4c, 0x69,
	0x73, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x18, 0x01, 0x20, 0x03,
	0x28, 0x09, 0x52, 0x06, 0x73, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x22, 0xb3, 0x01, 0x0a, 0x0d, 0x50,
	0x75, 0x62, 0x6c, 0x69, 0x73, 0x68, 0x65, 0x72, 0x44, 0x61, 0x74, 0x61, 0x12, 0x34, 0x0a, 0x0c,
	0x69, 0x6e, 0x76, 0x69, 0x74, 0x65, 0x72, 0x5f, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x11, 0x2e, 0x74, 0x62, 0x70, 0x62, 0x2e, 0x49, 0x6e, 0x76, 0x69, 0x74, 0x65,
	0x72, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x0b, 0x69, 0x6e, 0x76, 0x69, 0x74, 0x65, 0x72, 0x4c, 0x69,
	0x73, 0x74, 0x12, 0x4b, 0x0a, 0x15, 0x72, 0x6f, 0x6f, 0x74, 0x5f, 0x70, 0x69, 0x64, 0x5f, 0x63,
	0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x5f, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x18, 0x2e, 0x74, 0x62, 0x70, 0x62, 0x2e, 0x52, 0x6f, 0x6f, 0x74, 0x50, 0x69, 0x64,
	0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x12, 0x72, 0x6f, 0x6f,
	0x74, 0x50, 0x69, 0x64, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x4c, 0x69, 0x73, 0x74, 0x12,
	0x1f, 0x0a, 0x0b, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x5f, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x0a, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x43, 0x6f, 0x75, 0x6e, 0x74,
	0x22, 0xce, 0x02, 0x0a, 0x13, 0x50, 0x75, 0x62, 0x6c, 0x69, 0x73, 0x68, 0x65, 0x72, 0x47, 0x65,
	0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1b, 0x0a, 0x09, 0x69, 0x6e, 0x66, 0x6f,
	0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x69, 0x6e, 0x66,
	0x6f, 0x54, 0x79, 0x70, 0x65, 0x12, 0x21, 0x0a, 0x0c, 0x72, 0x65, 0x6c, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x5f, 0x61, 0x70, 0x70, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x72, 0x65, 0x6c,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x41, 0x70, 0x70, 0x12, 0x24, 0x0a, 0x0b, 0x72, 0x65, 0x6c, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x48, 0x00, 0x52,
	0x0a, 0x72, 0x65, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x88, 0x01, 0x01, 0x12, 0x1c,
	0x0a, 0x07, 0x70, 0x61, 0x67, 0x65, 0x5f, 0x6e, 0x6f, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x48,
	0x01, 0x52, 0x06, 0x70, 0x61, 0x67, 0x65, 0x4e, 0x6f, 0x88, 0x01, 0x01, 0x12, 0x20, 0x0a, 0x09,
	0x70, 0x61, 0x67, 0x65, 0x5f, 0x73, 0x69, 0x7a, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x05, 0x48,
	0x02, 0x52, 0x08, 0x70, 0x61, 0x67, 0x65, 0x53, 0x69, 0x7a, 0x65, 0x88, 0x01, 0x01, 0x12, 0x22,
	0x0a, 0x0a, 0x73, 0x70, 0x65, 0x63, 0x69, 0x61, 0x6c, 0x5f, 0x69, 0x64, 0x18, 0x06, 0x20, 0x01,
	0x28, 0x09, 0x48, 0x03, 0x52, 0x09, 0x73, 0x70, 0x65, 0x63, 0x69, 0x61, 0x6c, 0x49, 0x64, 0x88,
	0x01, 0x01, 0x12, 0x24, 0x0a, 0x0b, 0x65, 0x78, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x5f, 0x69,
	0x64, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x48, 0x04, 0x52, 0x0a, 0x65, 0x78, 0x74, 0x65, 0x72,
	0x6e, 0x61, 0x6c, 0x49, 0x64, 0x88, 0x01, 0x01, 0x42, 0x0e, 0x0a, 0x0c, 0x5f, 0x72, 0x65, 0x6c,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x42, 0x0a, 0x0a, 0x08, 0x5f, 0x70, 0x61, 0x67,
	0x65, 0x5f, 0x6e, 0x6f, 0x42, 0x0c, 0x0a, 0x0a, 0x5f, 0x70, 0x61, 0x67, 0x65, 0x5f, 0x73, 0x69,
	0x7a, 0x65, 0x42, 0x0d, 0x0a, 0x0b, 0x5f, 0x73, 0x70, 0x65, 0x63, 0x69, 0x61, 0x6c, 0x5f, 0x69,
	0x64, 0x42, 0x0e, 0x0a, 0x0c, 0x5f, 0x65, 0x78, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x5f, 0x69,
	0x64, 0x22, 0x65, 0x0a, 0x14, 0x50, 0x75, 0x62, 0x6c, 0x69, 0x73, 0x68, 0x65, 0x72, 0x47, 0x65,
	0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64,
	0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x10, 0x0a,
	0x03, 0x6d, 0x73, 0x67, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6d, 0x73, 0x67, 0x12,
	0x27, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x13, 0x2e,
	0x74, 0x62, 0x70, 0x62, 0x2e, 0x50, 0x75, 0x62, 0x6c, 0x69, 0x73, 0x68, 0x65, 0x72, 0x44, 0x61,
	0x74, 0x61, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x22, 0x54, 0x0a, 0x11, 0x50, 0x75, 0x62, 0x6c,
	0x69, 0x73, 0x68, 0x65, 0x72, 0x53, 0x61, 0x76, 0x65, 0x44, 0x61, 0x74, 0x61, 0x12, 0x2b, 0x0a,
	0x11, 0x61, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x75,
	0x72, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x10, 0x61, 0x75, 0x74, 0x68, 0x6f, 0x72,
	0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x55, 0x72, 0x6c, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x6f,
	0x74, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x6f, 0x74, 0x65, 0x22, 0xbf,
	0x01, 0x0a, 0x14, 0x50, 0x75, 0x62, 0x6c, 0x69, 0x73, 0x68, 0x65, 0x72, 0x53, 0x61, 0x76, 0x65,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x21, 0x0a, 0x0c, 0x63, 0x61, 0x6c, 0x6c, 0x62,
	0x61, 0x63, 0x6b, 0x5f, 0x75, 0x72, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x63,
	0x61, 0x6c, 0x6c, 0x62, 0x61, 0x63, 0x6b, 0x55, 0x72, 0x6c, 0x12, 0x35, 0x0a, 0x14, 0x63, 0x61,
	0x6c, 0x6c, 0x62, 0x61, 0x63, 0x6b, 0x5f, 0x64, 0x61, 0x74, 0x61, 0x5f, 0x66, 0x6f, 0x72, 0x6d,
	0x61, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x12, 0x63, 0x61, 0x6c, 0x6c,
	0x62, 0x61, 0x63, 0x6b, 0x44, 0x61, 0x74, 0x61, 0x46, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x88, 0x01,
	0x01, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x6f, 0x74, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x04, 0x6e, 0x6f, 0x74, 0x65, 0x12, 0x17, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x05, 0x48, 0x01, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x88, 0x01, 0x01, 0x42, 0x17,
	0x0a, 0x15, 0x5f, 0x63, 0x61, 0x6c, 0x6c, 0x62, 0x61, 0x63, 0x6b, 0x5f, 0x64, 0x61, 0x74, 0x61,
	0x5f, 0x66, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x42, 0x07, 0x0a, 0x05, 0x5f, 0x74, 0x79, 0x70, 0x65,
	0x22, 0x6a, 0x0a, 0x15, 0x50, 0x75, 0x62, 0x6c, 0x69, 0x73, 0x68, 0x65, 0x72, 0x53, 0x61, 0x76,
	0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64,
	0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x10, 0x0a,
	0x03, 0x6d, 0x73, 0x67, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6d, 0x73, 0x67, 0x12,
	0x2b, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e,
	0x74, 0x62, 0x70, 0x62, 0x2e, 0x50, 0x75, 0x62, 0x6c, 0x69, 0x73, 0x68, 0x65, 0x72, 0x53, 0x61,
	0x76, 0x65, 0x44, 0x61, 0x74, 0x61, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x22, 0xaa, 0x01, 0x0a,
	0x0a, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x46, 0x65, 0x65, 0x12, 0x2e, 0x0a, 0x13, 0x73,
	0x68, 0x61, 0x72, 0x65, 0x5f, 0x72, 0x65, 0x6c, 0x61, 0x74, 0x69, 0x76, 0x65, 0x5f, 0x72, 0x61,
	0x74, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x11, 0x73, 0x68, 0x61, 0x72, 0x65, 0x52,
	0x65, 0x6c, 0x61, 0x74, 0x69, 0x76, 0x65, 0x52, 0x61, 0x74, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x73,
	0x68, 0x61, 0x72, 0x65, 0x5f, 0x66, 0x65, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08,
	0x73, 0x68, 0x61, 0x72, 0x65, 0x46, 0x65, 0x65, 0x12, 0x22, 0x0a, 0x0d, 0x73, 0x68, 0x61, 0x72,
	0x65, 0x5f, 0x70, 0x72, 0x65, 0x5f, 0x66, 0x65, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0b, 0x73, 0x68, 0x61, 0x72, 0x65, 0x50, 0x72, 0x65, 0x46, 0x65, 0x65, 0x12, 0x2b, 0x0a, 0x12,
	0x74, 0x6b, 0x5f, 0x73, 0x68, 0x61, 0x72, 0x65, 0x5f, 0x72, 0x6f, 0x6c, 0x65, 0x5f, 0x74, 0x79,
	0x70, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0f, 0x74, 0x6b, 0x53, 0x68, 0x61, 0x72,
	0x65, 0x52, 0x6f, 0x6c, 0x65, 0x54, 0x79, 0x70, 0x65, 0x22, 0x8a, 0x10, 0x0a, 0x0b, 0x4f, 0x72,
	0x64, 0x65, 0x72, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x12, 0x20, 0x0a, 0x0c, 0x74, 0x62, 0x5f,
	0x70, 0x61, 0x69, 0x64, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0a, 0x74, 0x62, 0x50, 0x61, 0x69, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x20, 0x0a, 0x0c, 0x74,
	0x6b, 0x5f, 0x70, 0x61, 0x69, 0x64, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0a, 0x74, 0x6b, 0x50, 0x61, 0x69, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x1b, 0x0a,
	0x09, 0x70, 0x61, 0x79, 0x5f, 0x70, 0x72, 0x69, 0x63, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x08, 0x70, 0x61, 0x79, 0x50, 0x72, 0x69, 0x63, 0x65, 0x12, 0x22, 0x0a, 0x0d, 0x70, 0x75,
	0x62, 0x5f, 0x73, 0x68, 0x61, 0x72, 0x65, 0x5f, 0x66, 0x65, 0x65, 0x18, 0x09, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0b, 0x70, 0x75, 0x62, 0x53, 0x68, 0x61, 0x72, 0x65, 0x46, 0x65, 0x65, 0x12, 0x19,
	0x0a, 0x08, 0x74, 0x72, 0x61, 0x64, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x07, 0x74, 0x72, 0x61, 0x64, 0x65, 0x49, 0x64, 0x12, 0x22, 0x0a, 0x0d, 0x74, 0x6b, 0x5f,
	0x6f, 0x72, 0x64, 0x65, 0x72, 0x5f, 0x72, 0x6f, 0x6c, 0x65, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x0b, 0x74, 0x6b, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x52, 0x6f, 0x6c, 0x65, 0x12, 0x26, 0x0a,
	0x0f, 0x74, 0x6b, 0x5f, 0x65, 0x61, 0x72, 0x6e, 0x69, 0x6e, 0x67, 0x5f, 0x74, 0x69, 0x6d, 0x65,
	0x18, 0x0c, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x74, 0x6b, 0x45, 0x61, 0x72, 0x6e, 0x69, 0x6e,
	0x67, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x61, 0x64, 0x7a, 0x6f, 0x6e, 0x65, 0x5f,
	0x69, 0x64, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x61, 0x64, 0x7a, 0x6f, 0x6e, 0x65,
	0x49, 0x64, 0x12, 0x24, 0x0a, 0x0e, 0x70, 0x75, 0x62, 0x5f, 0x73, 0x68, 0x61, 0x72, 0x65, 0x5f,
	0x72, 0x61, 0x74, 0x65, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x70, 0x75, 0x62, 0x53,
	0x68, 0x61, 0x72, 0x65, 0x52, 0x61, 0x74, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x72, 0x65, 0x66, 0x75,
	0x6e, 0x64, 0x5f, 0x74, 0x61, 0x67, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x72, 0x65,
	0x66, 0x75, 0x6e, 0x64, 0x54, 0x61, 0x67, 0x12, 0x21, 0x0a, 0x0c, 0x73, 0x75, 0x62, 0x73, 0x69,
	0x64, 0x79, 0x5f, 0x72, 0x61, 0x74, 0x65, 0x18, 0x10, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x73,
	0x75, 0x62, 0x73, 0x69, 0x64, 0x79, 0x52, 0x61, 0x74, 0x65, 0x12, 0x22, 0x0a, 0x0d, 0x74, 0x6b,
	0x5f, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x5f, 0x72, 0x61, 0x74, 0x65, 0x18, 0x11, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0b, 0x74, 0x6b, 0x54, 0x6f, 0x74, 0x61, 0x6c, 0x52, 0x61, 0x74, 0x65, 0x12, 0x2c,
	0x0a, 0x12, 0x69, 0x74, 0x65, 0x6d, 0x5f, 0x63, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x5f,
	0x6e, 0x61, 0x6d, 0x65, 0x18, 0x12, 0x20, 0x01, 0x28, 0x09, 0x52, 0x10, 0x69, 0x74, 0x65, 0x6d,
	0x43, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1f, 0x0a, 0x0b,
	0x73, 0x65, 0x6c, 0x6c, 0x65, 0x72, 0x5f, 0x6e, 0x69, 0x63, 0x6b, 0x18, 0x13, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0a, 0x73, 0x65, 0x6c, 0x6c, 0x65, 0x72, 0x4e, 0x69, 0x63, 0x6b, 0x12, 0x15, 0x0a,
	0x06, 0x70, 0x75, 0x62, 0x5f, 0x69, 0x64, 0x18, 0x14, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x70,
	0x75, 0x62, 0x49, 0x64, 0x12, 0x21, 0x0a, 0x0c, 0x61, 0x6c, 0x69, 0x6d, 0x61, 0x6d, 0x61, 0x5f,
	0x72, 0x61, 0x74, 0x65, 0x18, 0x15, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x61, 0x6c, 0x69, 0x6d,
	0x61, 0x6d, 0x61, 0x52, 0x61, 0x74, 0x65, 0x12, 0x21, 0x0a, 0x0c, 0x73, 0x75, 0x62, 0x73, 0x69,
	0x64, 0x79, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x16, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x73,
	0x75, 0x62, 0x73, 0x69, 0x64, 0x79, 0x54, 0x79, 0x70, 0x65, 0x12, 0x19, 0x0a, 0x08, 0x69, 0x74,
	0x65, 0x6d, 0x5f, 0x69, 0x6d, 0x67, 0x18, 0x17, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x69, 0x74,
	0x65, 0x6d, 0x49, 0x6d, 0x67, 0x12, 0x29, 0x0a, 0x11, 0x70, 0x75, 0x62, 0x5f, 0x73, 0x68, 0x61,
	0x72, 0x65, 0x5f, 0x70, 0x72, 0x65, 0x5f, 0x66, 0x65, 0x65, 0x18, 0x18, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0e, 0x70, 0x75, 0x62, 0x53, 0x68, 0x61, 0x72, 0x65, 0x50, 0x72, 0x65, 0x46, 0x65, 0x65,
	0x12, 0x2c, 0x0a, 0x12, 0x61, 0x6c, 0x69, 0x70, 0x61, 0x79, 0x5f, 0x74, 0x6f, 0x74, 0x61, 0x6c,
	0x5f, 0x70, 0x72, 0x69, 0x63, 0x65, 0x18, 0x19, 0x20, 0x01, 0x28, 0x09, 0x52, 0x10, 0x61, 0x6c,
	0x69, 0x70, 0x61, 0x79, 0x54, 0x6f, 0x74, 0x61, 0x6c, 0x50, 0x72, 0x69, 0x63, 0x65, 0x12, 0x1d,
	0x0a, 0x0a, 0x69, 0x74, 0x65, 0x6d, 0x5f, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x1a, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x09, 0x69, 0x74, 0x65, 0x6d, 0x54, 0x69, 0x74, 0x6c, 0x65, 0x12, 0x23, 0x0a,
	0x0d, 0x6d, 0x6f, 0x64, 0x69, 0x66, 0x69, 0x65, 0x64, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x1b,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x6d, 0x6f, 0x64, 0x69, 0x66, 0x69, 0x65, 0x64, 0x54, 0x69,
	0x6d, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x73, 0x69, 0x74, 0x65, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18,
	0x1c, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x73, 0x69, 0x74, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x12,
	0x19, 0x0a, 0x08, 0x69, 0x74, 0x65, 0x6d, 0x5f, 0x6e, 0x75, 0x6d, 0x18, 0x1d, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x07, 0x69, 0x74, 0x65, 0x6d, 0x4e, 0x75, 0x6d, 0x12, 0x1f, 0x0a, 0x0b, 0x73, 0x75,
	0x62, 0x73, 0x69, 0x64, 0x79, 0x5f, 0x66, 0x65, 0x65, 0x18, 0x1e, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0a, 0x73, 0x75, 0x62, 0x73, 0x69, 0x64, 0x79, 0x46, 0x65, 0x65, 0x12, 0x2a, 0x0a, 0x11, 0x61,
	0x6c, 0x69, 0x6d, 0x61, 0x6d, 0x61, 0x5f, 0x73, 0x68, 0x61, 0x72, 0x65, 0x5f, 0x66, 0x65, 0x65,
	0x18, 0x1f, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x61, 0x6c, 0x69, 0x6d, 0x61, 0x6d, 0x61, 0x53,
	0x68, 0x61, 0x72, 0x65, 0x46, 0x65, 0x65, 0x12, 0x26, 0x0a, 0x0f, 0x74, 0x72, 0x61, 0x64, 0x65,
	0x5f, 0x70, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x20, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0d, 0x74, 0x72, 0x61, 0x64, 0x65, 0x50, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x12,
	0x1d, 0x0a, 0x0a, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x21, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x09, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x54, 0x79, 0x70, 0x65, 0x12, 0x24,
	0x0a, 0x0e, 0x74, 0x6b, 0x5f, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x5f, 0x74, 0x69, 0x6d, 0x65,
	0x18, 0x22, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x74, 0x6b, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x54, 0x69, 0x6d, 0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x66, 0x6c, 0x6f, 0x77, 0x5f, 0x73, 0x6f, 0x75,
	0x72, 0x63, 0x65, 0x18, 0x23, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x66, 0x6c, 0x6f, 0x77, 0x53,
	0x6f, 0x75, 0x72, 0x63, 0x65, 0x12, 0x23, 0x0a, 0x0d, 0x74, 0x65, 0x72, 0x6d, 0x69, 0x6e, 0x61,
	0x6c, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x24, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x74, 0x65,
	0x72, 0x6d, 0x69, 0x6e, 0x61, 0x6c, 0x54, 0x79, 0x70, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x63, 0x6c,
	0x69, 0x63, 0x6b, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x25, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09,
	0x63, 0x6c, 0x69, 0x63, 0x6b, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x74, 0x6b, 0x5f,
	0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x26, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x74, 0x6b,
	0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x1d, 0x0a, 0x0a, 0x69, 0x74, 0x65, 0x6d, 0x5f, 0x70,
	0x72, 0x69, 0x63, 0x65, 0x18, 0x27, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x69, 0x74, 0x65, 0x6d,
	0x50, 0x72, 0x69, 0x63, 0x65, 0x12, 0x17, 0x0a, 0x07, 0x69, 0x74, 0x65, 0x6d, 0x5f, 0x69, 0x64,
	0x18, 0x28, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x69, 0x74, 0x65, 0x6d, 0x49, 0x64, 0x12, 0x1f,
	0x0a, 0x0b, 0x61, 0x64, 0x7a, 0x6f, 0x6e, 0x65, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x29, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0a, 0x61, 0x64, 0x7a, 0x6f, 0x6e, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x12,
	0x32, 0x0a, 0x15, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x5f, 0x63, 0x6f, 0x6d, 0x6d, 0x69, 0x73, 0x73,
	0x69, 0x6f, 0x6e, 0x5f, 0x72, 0x61, 0x74, 0x65, 0x18, 0x2a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x13,
	0x74, 0x6f, 0x74, 0x61, 0x6c, 0x43, 0x6f, 0x6d, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x52,
	0x61, 0x74, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x69, 0x74, 0x65, 0x6d, 0x5f, 0x6c, 0x69, 0x6e, 0x6b,
	0x18, 0x2b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x69, 0x74, 0x65, 0x6d, 0x4c, 0x69, 0x6e, 0x6b,
	0x12, 0x17, 0x0a, 0x07, 0x73, 0x69, 0x74, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x2c, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x06, 0x73, 0x69, 0x74, 0x65, 0x49, 0x64, 0x12, 0x2a, 0x0a, 0x11, 0x73, 0x65, 0x6c,
	0x6c, 0x65, 0x72, 0x5f, 0x73, 0x68, 0x6f, 0x70, 0x5f, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x2d,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x73, 0x65, 0x6c, 0x6c, 0x65, 0x72, 0x53, 0x68, 0x6f, 0x70,
	0x54, 0x69, 0x74, 0x6c, 0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x69, 0x6e, 0x63, 0x6f, 0x6d, 0x65, 0x5f,
	0x72, 0x61, 0x74, 0x65, 0x18, 0x2e, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x69, 0x6e, 0x63, 0x6f,
	0x6d, 0x65, 0x52, 0x61, 0x74, 0x65, 0x12, 0x30, 0x0a, 0x14, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x5f,
	0x63, 0x6f, 0x6d, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x5f, 0x66, 0x65, 0x65, 0x18, 0x2f,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x12, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x43, 0x6f, 0x6d, 0x6d, 0x69,
	0x73, 0x73, 0x69, 0x6f, 0x6e, 0x46, 0x65, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x73, 0x70, 0x65, 0x63,
	0x69, 0x61, 0x6c, 0x5f, 0x69, 0x64, 0x18, 0x30, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x73, 0x70,
	0x65, 0x63, 0x69, 0x61, 0x6c, 0x49, 0x64, 0x12, 0x1f, 0x0a, 0x0b, 0x72, 0x65, 0x6c, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x31, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0a, 0x72, 0x65,
	0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x12, 0x26, 0x0a, 0x0f, 0x74, 0x6b, 0x5f, 0x64,
	0x65, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x32, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0d, 0x74, 0x6b, 0x44, 0x65, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x54, 0x69, 0x6d, 0x65,
	0x12, 0x26, 0x0a, 0x0f, 0x74, 0x62, 0x5f, 0x64, 0x65, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x5f, 0x74,
	0x69, 0x6d, 0x65, 0x18, 0x33, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x74, 0x62, 0x44, 0x65, 0x70,
	0x6f, 0x73, 0x69, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x23, 0x0a, 0x0d, 0x64, 0x65, 0x70, 0x6f,
	0x73, 0x69, 0x74, 0x5f, 0x70, 0x72, 0x69, 0x63, 0x65, 0x18, 0x34, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0c, 0x64, 0x65, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x50, 0x72, 0x69, 0x63, 0x65, 0x12, 0x54, 0x0a,
	0x28, 0x74, 0x6b, 0x5f, 0x63, 0x6f, 0x6d, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x5f, 0x70,
	0x72, 0x65, 0x5f, 0x66, 0x65, 0x65, 0x5f, 0x66, 0x6f, 0x72, 0x5f, 0x6d, 0x65, 0x64, 0x69, 0x61,
	0x5f, 0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x18, 0x35, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x22, 0x74, 0x6b, 0x43, 0x6f, 0x6d, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x50, 0x72, 0x65,
	0x46, 0x65, 0x65, 0x46, 0x6f, 0x72, 0x4d, 0x65, 0x64, 0x69, 0x61, 0x50, 0x6c, 0x61, 0x74, 0x66,
	0x6f, 0x72, 0x6d, 0x12, 0x4d, 0x0a, 0x24, 0x74, 0x6b, 0x5f, 0x63, 0x6f, 0x6d, 0x6d, 0x69, 0x73,
	0x73, 0x69, 0x6f, 0x6e, 0x5f, 0x66, 0x65, 0x65, 0x5f, 0x66, 0x6f, 0x72, 0x5f, 0x6d, 0x65, 0x64,
	0x69, 0x61, 0x5f, 0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x18, 0x36, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x1f, 0x74, 0x6b, 0x43, 0x6f, 0x6d, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x46,
	0x65, 0x65, 0x46, 0x6f, 0x72, 0x4d, 0x65, 0x64, 0x69, 0x61, 0x50, 0x6c, 0x61, 0x74, 0x66, 0x6f,
	0x72, 0x6d, 0x12, 0x4f, 0x0a, 0x25, 0x74, 0x6b, 0x5f, 0x63, 0x6f, 0x6d, 0x6d, 0x69, 0x73, 0x73,
	0x69, 0x6f, 0x6e, 0x5f, 0x72, 0x61, 0x74, 0x65, 0x5f, 0x66, 0x6f, 0x72, 0x5f, 0x6d, 0x65, 0x64,
	0x69, 0x61, 0x5f, 0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x18, 0x37, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x20, 0x74, 0x6b, 0x43, 0x6f, 0x6d, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x52,
	0x61, 0x74, 0x65, 0x46, 0x6f, 0x72, 0x4d, 0x65, 0x64, 0x69, 0x61, 0x50, 0x6c, 0x61, 0x74, 0x66,
	0x6f, 0x72, 0x6d, 0x12, 0x17, 0x0a, 0x07, 0x61, 0x6c, 0x73, 0x63, 0x5f, 0x69, 0x64, 0x18, 0x38,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x61, 0x6c, 0x73, 0x63, 0x49, 0x64, 0x12, 0x19, 0x0a, 0x08,
	0x61, 0x6c, 0x73, 0x63, 0x5f, 0x70, 0x69, 0x64, 0x18, 0x39, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07,
	0x61, 0x6c, 0x73, 0x63, 0x50, 0x69, 0x64, 0x12, 0x41, 0x0a, 0x14, 0x73, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x5f, 0x66, 0x65, 0x65, 0x5f, 0x64, 0x74, 0x6f, 0x5f, 0x6c, 0x69, 0x73, 0x74, 0x18,
	0x3a, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x74, 0x62, 0x70, 0x62, 0x2e, 0x53, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x46, 0x65, 0x65, 0x52, 0x11, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x46, 0x65, 0x65, 0x44, 0x74, 0x6f, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x15, 0x0a, 0x06, 0x6c, 0x78,
	0x5f, 0x72, 0x69, 0x64, 0x18, 0x3b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x6c, 0x78, 0x52, 0x69,
	0x64, 0x12, 0x13, 0x0a, 0x05, 0x69, 0x73, 0x5f, 0x6c, 0x78, 0x18, 0x3c, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x04, 0x69, 0x73, 0x4c, 0x78, 0x22, 0xce, 0x04, 0x0a, 0x12, 0x4f, 0x72, 0x64, 0x65, 0x72,
	0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1d, 0x0a,
	0x0a, 0x73, 0x74, 0x61, 0x72, 0x74, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x09, 0x73, 0x74, 0x61, 0x72, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x19, 0x0a, 0x08,
	0x65, 0x6e, 0x64, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07,
	0x65, 0x6e, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x22, 0x0a, 0x0a, 0x71, 0x75, 0x65, 0x72, 0x79,
	0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x48, 0x00, 0x52, 0x09, 0x71,
	0x75, 0x65, 0x72, 0x79, 0x54, 0x79, 0x70, 0x65, 0x88, 0x01, 0x01, 0x12, 0x2a, 0x0a, 0x0e, 0x70,
	0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x09, 0x48, 0x01, 0x52, 0x0d, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x49,
	0x6e, 0x64, 0x65, 0x78, 0x88, 0x01, 0x01, 0x12, 0x20, 0x0a, 0x09, 0x70, 0x61, 0x67, 0x65, 0x5f,
	0x73, 0x69, 0x7a, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x05, 0x48, 0x02, 0x52, 0x08, 0x70, 0x61,
	0x67, 0x65, 0x53, 0x69, 0x7a, 0x65, 0x88, 0x01, 0x01, 0x12, 0x1c, 0x0a, 0x07, 0x70, 0x61, 0x67,
	0x65, 0x5f, 0x6e, 0x6f, 0x18, 0x06, 0x20, 0x01, 0x28, 0x05, 0x48, 0x03, 0x52, 0x06, 0x70, 0x61,
	0x67, 0x65, 0x4e, 0x6f, 0x88, 0x01, 0x01, 0x12, 0x24, 0x0a, 0x0b, 0x6d, 0x65, 0x6d, 0x62, 0x65,
	0x72, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x05, 0x48, 0x04, 0x52, 0x0a,
	0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x54, 0x79, 0x70, 0x65, 0x88, 0x01, 0x01, 0x12, 0x20, 0x0a,
	0x09, 0x74, 0x6b, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x08, 0x20, 0x01, 0x28, 0x05,
	0x48, 0x05, 0x52, 0x08, 0x74, 0x6b, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x88, 0x01, 0x01, 0x12,
	0x20, 0x0a, 0x09, 0x6a, 0x75, 0x6d, 0x70, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x09, 0x20, 0x01,
	0x28, 0x05, 0x48, 0x06, 0x52, 0x08, 0x6a, 0x75, 0x6d, 0x70, 0x54, 0x79, 0x70, 0x65, 0x88, 0x01,
	0x01, 0x12, 0x24, 0x0a, 0x0b, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x5f, 0x73, 0x63, 0x65, 0x6e, 0x65,
	0x18, 0x0a, 0x20, 0x01, 0x28, 0x05, 0x48, 0x07, 0x52, 0x0a, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x53,
	0x63, 0x65, 0x6e, 0x65, 0x88, 0x01, 0x01, 0x12, 0x24, 0x0a, 0x0b, 0x61, 0x63, 0x63, 0x65, 0x73,
	0x73, 0x5f, 0x74, 0x6f, 0x6b, 0x65, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x48, 0x08, 0x52, 0x0a,
	0x61, 0x63, 0x63, 0x65, 0x73, 0x73, 0x54, 0x6f, 0x6b, 0x65, 0x88, 0x01, 0x01, 0x12, 0x21, 0x0a,
	0x0a, 0x74, 0x62, 0x5f, 0x61, 0x75, 0x74, 0x68, 0x5f, 0x69, 0x64, 0x18, 0x0c, 0x20, 0x01, 0x28,
	0x09, 0x48, 0x09, 0x52, 0x08, 0x74, 0x62, 0x41, 0x75, 0x74, 0x68, 0x49, 0x64, 0x88, 0x01, 0x01,
	0x42, 0x0d, 0x0a, 0x0b, 0x5f, 0x71, 0x75, 0x65, 0x72, 0x79, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x42,
	0x11, 0x0a, 0x0f, 0x5f, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x6e, 0x64,
	0x65, 0x78, 0x42, 0x0c, 0x0a, 0x0a, 0x5f, 0x70, 0x61, 0x67, 0x65, 0x5f, 0x73, 0x69, 0x7a, 0x65,
	0x42, 0x0a, 0x0a, 0x08, 0x5f, 0x70, 0x61, 0x67, 0x65, 0x5f, 0x6e, 0x6f, 0x42, 0x0e, 0x0a, 0x0c,
	0x5f, 0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x42, 0x0c, 0x0a, 0x0a,
	0x5f, 0x74, 0x6b, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x42, 0x0c, 0x0a, 0x0a, 0x5f, 0x6a,
	0x75, 0x6d, 0x70, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x42, 0x0e, 0x0a, 0x0c, 0x5f, 0x6f, 0x72, 0x64,
	0x65, 0x72, 0x5f, 0x73, 0x63, 0x65, 0x6e, 0x65, 0x42, 0x0e, 0x0a, 0x0c, 0x5f, 0x61, 0x63, 0x63,
	0x65, 0x73, 0x73, 0x5f, 0x74, 0x6f, 0x6b, 0x65, 0x42, 0x0d, 0x0a, 0x0b, 0x5f, 0x74, 0x62, 0x5f,
	0x61, 0x75, 0x74, 0x68, 0x5f, 0x69, 0x64, 0x22, 0xf3, 0x01, 0x0a, 0x13, 0x4f, 0x72, 0x64, 0x65,
	0x72, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x63,
	0x6f, 0x64, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x6d, 0x73, 0x67, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x03, 0x6d, 0x73, 0x67, 0x12, 0x17, 0x0a, 0x07, 0x68, 0x61, 0x73, 0x5f, 0x70, 0x72, 0x65,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x08, 0x52, 0x06, 0x68, 0x61, 0x73, 0x50, 0x72, 0x65, 0x12, 0x19,
	0x0a, 0x08, 0x68, 0x61, 0x73, 0x5f, 0x6e, 0x65, 0x78, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x08,
	0x52, 0x07, 0x68, 0x61, 0x73, 0x4e, 0x65, 0x78, 0x74, 0x12, 0x17, 0x0a, 0x07, 0x70, 0x61, 0x67,
	0x65, 0x5f, 0x6e, 0x6f, 0x18, 0x05, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x70, 0x61, 0x67, 0x65,
	0x4e, 0x6f, 0x12, 0x1b, 0x0a, 0x09, 0x70, 0x61, 0x67, 0x65, 0x5f, 0x73, 0x69, 0x7a, 0x65, 0x18,
	0x06, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x70, 0x61, 0x67, 0x65, 0x53, 0x69, 0x7a, 0x65, 0x12,
	0x25, 0x0a, 0x0e, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x6e, 0x64, 0x65,
	0x78, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f,
	0x6e, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x12, 0x25, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x08,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x74, 0x62, 0x70, 0x62, 0x2e, 0x4f, 0x72, 0x64, 0x65,
	0x72, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x32, 0xc5, 0x03,
	0x0a, 0x0c, 0x54, 0x62, 0x41, 0x70, 0x69, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x44,
	0x0a, 0x0b, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x47, 0x6f, 0x6f, 0x64, 0x73, 0x12, 0x18, 0x2e,
	0x74, 0x62, 0x70, 0x62, 0x2e, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x47, 0x6f, 0x6f, 0x64, 0x73,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x19, 0x2e, 0x74, 0x62, 0x70, 0x62, 0x2e, 0x53,
	0x65, 0x61, 0x72, 0x63, 0x68, 0x47, 0x6f, 0x6f, 0x64, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x22, 0x00, 0x12, 0x46, 0x0a, 0x0b, 0x50, 0x72, 0x6f, 0x6d, 0x6f, 0x74, 0x65, 0x42,
	0x79, 0x49, 0x44, 0x12, 0x1b, 0x2e, 0x74, 0x62, 0x70, 0x62, 0x2e, 0x50, 0x72, 0x6f, 0x6d, 0x6f,
	0x74, 0x65, 0x55, 0x52, 0x4c, 0x42, 0x79, 0x49, 0x44, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x18, 0x2e, 0x74, 0x62, 0x70, 0x62, 0x2e, 0x50, 0x72, 0x6f, 0x6d, 0x6f, 0x74, 0x65, 0x55,
	0x52, 0x4c, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x48, 0x0a, 0x0c,
	0x50, 0x72, 0x6f, 0x6d, 0x6f, 0x74, 0x65, 0x42, 0x79, 0x54, 0x4b, 0x4c, 0x12, 0x1c, 0x2e, 0x74,
	0x62, 0x70, 0x62, 0x2e, 0x50, 0x72, 0x6f, 0x6d, 0x6f, 0x74, 0x65, 0x55, 0x52, 0x4c, 0x42, 0x79,
	0x54, 0x4b, 0x4c, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x18, 0x2e, 0x74, 0x62, 0x70,
	0x62, 0x2e, 0x50, 0x72, 0x6f, 0x6d, 0x6f, 0x74, 0x65, 0x55, 0x52, 0x4c, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x47, 0x0a, 0x0c, 0x50, 0x75, 0x62, 0x6c, 0x69, 0x73,
	0x68, 0x65, 0x72, 0x47, 0x65, 0x74, 0x12, 0x19, 0x2e, 0x74, 0x62, 0x70, 0x62, 0x2e, 0x50, 0x75,
	0x62, 0x6c, 0x69, 0x73, 0x68, 0x65, 0x72, 0x47, 0x65, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x1a, 0x2e, 0x74, 0x62, 0x70, 0x62, 0x2e, 0x50, 0x75, 0x62, 0x6c, 0x69, 0x73, 0x68,
	0x65, 0x72, 0x47, 0x65, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12,
	0x4a, 0x0a, 0x0d, 0x50, 0x75, 0x62, 0x6c, 0x69, 0x73, 0x68, 0x65, 0x72, 0x53, 0x61, 0x76, 0x65,
	0x12, 0x1a, 0x2e, 0x74, 0x62, 0x70, 0x62, 0x2e, 0x50, 0x75, 0x62, 0x6c, 0x69, 0x73, 0x68, 0x65,
	0x72, 0x53, 0x61, 0x76, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1b, 0x2e, 0x74,
	0x62, 0x70, 0x62, 0x2e, 0x50, 0x75, 0x62, 0x6c, 0x69, 0x73, 0x68, 0x65, 0x72, 0x53, 0x61, 0x76,
	0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x48, 0x0a, 0x0f, 0x53,
	0x79, 0x6e, 0x63, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x12, 0x18,
	0x2e, 0x74, 0x62, 0x70, 0x62, 0x2e, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x44, 0x65, 0x74, 0x61, 0x69,
	0x6c, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x19, 0x2e, 0x74, 0x62, 0x70, 0x62, 0x2e,
	0x4f, 0x72, 0x64, 0x65, 0x72, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x22, 0x00, 0x42, 0x07, 0x5a, 0x05, 0x2f, 0x74, 0x62, 0x70, 0x62, 0x62, 0x06,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_api_tb_ddx_proto_rawDescOnce sync.Once
	file_api_tb_ddx_proto_rawDescData = file_api_tb_ddx_proto_rawDesc
)

func file_api_tb_ddx_proto_rawDescGZIP() []byte {
	file_api_tb_ddx_proto_rawDescOnce.Do(func() {
		file_api_tb_ddx_proto_rawDescData = protoimpl.X.CompressGZIP(file_api_tb_ddx_proto_rawDescData)
	})
	return file_api_tb_ddx_proto_rawDescData
}

var file_api_tb_ddx_proto_msgTypes = make([]protoimpl.MessageInfo, 25)
var file_api_tb_ddx_proto_goTypes = []interface{}{
	(*SmallImages)(nil),            // 0: tbpb.SmallImages
	(*GoodsDetail)(nil),            // 1: tbpb.GoodsDetail
	(*SearchGoodsRequest)(nil),     // 2: tbpb.SearchGoodsRequest
	(*SearchGoodsMsgData)(nil),     // 3: tbpb.SearchGoodsMsgData
	(*SearchGoodsResponse)(nil),    // 4: tbpb.SearchGoodsResponse
	(*DdxTbApiSearchGoodsRes)(nil), // 5: tbpb.DdxTbApiSearchGoodsRes
	(*PromoteURLByIDRequest)(nil),  // 6: tbpb.PromoteURLByIDRequest
	(*PromoteURLByTKLRequest)(nil), // 7: tbpb.PromoteURLByTKLRequest
	(*ItemInfo)(nil),               // 8: tbpb.ItemInfo
	(*PromotedURLData)(nil),        // 9: tbpb.PromotedURLData
	(*PromoteURLResponse)(nil),     // 10: tbpb.PromoteURLResponse
	(*OfflineInfo)(nil),            // 11: tbpb.OfflineInfo
	(*MapData)(nil),                // 12: tbpb.MapData
	(*InviterList)(nil),            // 13: tbpb.InviterList
	(*RootPidChannelList)(nil),     // 14: tbpb.RootPidChannelList
	(*PublisherData)(nil),          // 15: tbpb.PublisherData
	(*PublisherGetRequest)(nil),    // 16: tbpb.PublisherGetRequest
	(*PublisherGetResponse)(nil),   // 17: tbpb.PublisherGetResponse
	(*PublisherSaveData)(nil),      // 18: tbpb.PublisherSaveData
	(*PublisherSaveRequest)(nil),   // 19: tbpb.PublisherSaveRequest
	(*PublisherSaveResponse)(nil),  // 20: tbpb.PublisherSaveResponse
	(*ServiceFee)(nil),             // 21: tbpb.ServiceFee
	(*OrderDetail)(nil),            // 22: tbpb.OrderDetail
	(*OrderDetailRequest)(nil),     // 23: tbpb.OrderDetailRequest
	(*OrderDetailResponse)(nil),    // 24: tbpb.OrderDetailResponse
}
var file_api_tb_ddx_proto_depIdxs = []int32{
	0,  // 0: tbpb.GoodsDetail.small_images:type_name -> tbpb.SmallImages
	1,  // 1: tbpb.SearchGoodsMsgData.data:type_name -> tbpb.GoodsDetail
	3,  // 2: tbpb.SearchGoodsResponse.data:type_name -> tbpb.SearchGoodsMsgData
	1,  // 3: tbpb.DdxTbApiSearchGoodsRes.data:type_name -> tbpb.GoodsDetail
	0,  // 4: tbpb.ItemInfo.small_images:type_name -> tbpb.SmallImages
	8,  // 5: tbpb.PromotedURLData.itemInfo:type_name -> tbpb.ItemInfo
	9,  // 6: tbpb.PromoteURLResponse.data:type_name -> tbpb.PromotedURLData
	11, // 7: tbpb.MapData.offine_info:type_name -> tbpb.OfflineInfo
	12, // 8: tbpb.InviterList.map_data:type_name -> tbpb.MapData
	13, // 9: tbpb.PublisherData.inviter_list:type_name -> tbpb.InviterList
	14, // 10: tbpb.PublisherData.root_pid_channel_list:type_name -> tbpb.RootPidChannelList
	15, // 11: tbpb.PublisherGetResponse.data:type_name -> tbpb.PublisherData
	18, // 12: tbpb.PublisherSaveResponse.data:type_name -> tbpb.PublisherSaveData
	21, // 13: tbpb.OrderDetail.service_fee_dto_list:type_name -> tbpb.ServiceFee
	22, // 14: tbpb.OrderDetailResponse.data:type_name -> tbpb.OrderDetail
	2,  // 15: tbpb.TbApiService.SearchGoods:input_type -> tbpb.SearchGoodsRequest
	6,  // 16: tbpb.TbApiService.PromoteByID:input_type -> tbpb.PromoteURLByIDRequest
	7,  // 17: tbpb.TbApiService.PromoteByTKL:input_type -> tbpb.PromoteURLByTKLRequest
	16, // 18: tbpb.TbApiService.PublisherGet:input_type -> tbpb.PublisherGetRequest
	19, // 19: tbpb.TbApiService.PublisherSave:input_type -> tbpb.PublisherSaveRequest
	23, // 20: tbpb.TbApiService.SyncOrderDetail:input_type -> tbpb.OrderDetailRequest
	4,  // 21: tbpb.TbApiService.SearchGoods:output_type -> tbpb.SearchGoodsResponse
	10, // 22: tbpb.TbApiService.PromoteByID:output_type -> tbpb.PromoteURLResponse
	10, // 23: tbpb.TbApiService.PromoteByTKL:output_type -> tbpb.PromoteURLResponse
	17, // 24: tbpb.TbApiService.PublisherGet:output_type -> tbpb.PublisherGetResponse
	20, // 25: tbpb.TbApiService.PublisherSave:output_type -> tbpb.PublisherSaveResponse
	24, // 26: tbpb.TbApiService.SyncOrderDetail:output_type -> tbpb.OrderDetailResponse
	21, // [21:27] is the sub-list for method output_type
	15, // [15:21] is the sub-list for method input_type
	15, // [15:15] is the sub-list for extension type_name
	15, // [15:15] is the sub-list for extension extendee
	0,  // [0:15] is the sub-list for field type_name
}

func init() { file_api_tb_ddx_proto_init() }
func file_api_tb_ddx_proto_init() {
	if File_api_tb_ddx_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_api_tb_ddx_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SmallImages); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_tb_ddx_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GoodsDetail); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_tb_ddx_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SearchGoodsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_tb_ddx_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SearchGoodsMsgData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_tb_ddx_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SearchGoodsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_tb_ddx_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DdxTbApiSearchGoodsRes); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_tb_ddx_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PromoteURLByIDRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_tb_ddx_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PromoteURLByTKLRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_tb_ddx_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ItemInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_tb_ddx_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PromotedURLData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_tb_ddx_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PromoteURLResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_tb_ddx_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*OfflineInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_tb_ddx_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MapData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_tb_ddx_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*InviterList); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_tb_ddx_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RootPidChannelList); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_tb_ddx_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PublisherData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_tb_ddx_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PublisherGetRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_tb_ddx_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PublisherGetResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_tb_ddx_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PublisherSaveData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_tb_ddx_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PublisherSaveRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_tb_ddx_proto_msgTypes[20].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PublisherSaveResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_tb_ddx_proto_msgTypes[21].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ServiceFee); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_tb_ddx_proto_msgTypes[22].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*OrderDetail); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_tb_ddx_proto_msgTypes[23].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*OrderDetailRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_tb_ddx_proto_msgTypes[24].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*OrderDetailResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_api_tb_ddx_proto_msgTypes[2].OneofWrappers = []interface{}{}
	file_api_tb_ddx_proto_msgTypes[6].OneofWrappers = []interface{}{}
	file_api_tb_ddx_proto_msgTypes[7].OneofWrappers = []interface{}{}
	file_api_tb_ddx_proto_msgTypes[16].OneofWrappers = []interface{}{}
	file_api_tb_ddx_proto_msgTypes[19].OneofWrappers = []interface{}{}
	file_api_tb_ddx_proto_msgTypes[23].OneofWrappers = []interface{}{}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_api_tb_ddx_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   25,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_api_tb_ddx_proto_goTypes,
		DependencyIndexes: file_api_tb_ddx_proto_depIdxs,
		MessageInfos:      file_api_tb_ddx_proto_msgTypes,
	}.Build()
	File_api_tb_ddx_proto = out.File
	file_api_tb_ddx_proto_rawDesc = nil
	file_api_tb_ddx_proto_goTypes = nil
	file_api_tb_ddx_proto_depIdxs = nil
}
