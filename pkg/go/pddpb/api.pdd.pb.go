// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.26.0
// 	protoc        v3.15.8
// source: api.pdd.proto

package pddpb

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// ----- The definitions of PDD offical APIs ----
type QQAppInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AppId             string `protobuf:"bytes,1,opt,name=app_id,json=appId,proto3" json:"app_id,omitempty"`
	BannerUrl         string `protobuf:"bytes,2,opt,name=banner_url,json=bannerUrl,proto3" json:"banner_url,omitempty"`
	Desc              string `protobuf:"bytes,3,opt,name=desc,proto3" json:"desc,omitempty"`
	PagePath          string `protobuf:"bytes,4,opt,name=page_path,json=pagePath,proto3" json:"page_path,omitempty"`
	QqAppIconUrl      string `protobuf:"bytes,5,opt,name=qq_app_icon_url,json=qqAppIconUrl,proto3" json:"qq_app_icon_url,omitempty"`
	SourceDisplayName string `protobuf:"bytes,6,opt,name=source_display_name,json=sourceDisplayName,proto3" json:"source_display_name,omitempty"`
	Title             string `protobuf:"bytes,7,opt,name=title,proto3" json:"title,omitempty"`
	UserName          string `protobuf:"bytes,8,opt,name=user_name,json=userName,proto3" json:"user_name,omitempty"`
}

func (x *QQAppInfo) Reset() {
	*x = QQAppInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_pdd_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *QQAppInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QQAppInfo) ProtoMessage() {}

func (x *QQAppInfo) ProtoReflect() protoreflect.Message {
	mi := &file_api_pdd_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QQAppInfo.ProtoReflect.Descriptor instead.
func (*QQAppInfo) Descriptor() ([]byte, []int) {
	return file_api_pdd_proto_rawDescGZIP(), []int{0}
}

func (x *QQAppInfo) GetAppId() string {
	if x != nil {
		return x.AppId
	}
	return ""
}

func (x *QQAppInfo) GetBannerUrl() string {
	if x != nil {
		return x.BannerUrl
	}
	return ""
}

func (x *QQAppInfo) GetDesc() string {
	if x != nil {
		return x.Desc
	}
	return ""
}

func (x *QQAppInfo) GetPagePath() string {
	if x != nil {
		return x.PagePath
	}
	return ""
}

func (x *QQAppInfo) GetQqAppIconUrl() string {
	if x != nil {
		return x.QqAppIconUrl
	}
	return ""
}

func (x *QQAppInfo) GetSourceDisplayName() string {
	if x != nil {
		return x.SourceDisplayName
	}
	return ""
}

func (x *QQAppInfo) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *QQAppInfo) GetUserName() string {
	if x != nil {
		return x.UserName
	}
	return ""
}

type WeAppInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AppId             string `protobuf:"bytes,1,opt,name=app_id,json=appId,proto3" json:"app_id,omitempty"`
	BannerUrl         string `protobuf:"bytes,2,opt,name=banner_url,json=bannerUrl,proto3" json:"banner_url,omitempty"`
	Desc              string `protobuf:"bytes,3,opt,name=desc,proto3" json:"desc,omitempty"`
	PagePath          string `protobuf:"bytes,4,opt,name=page_path,json=pagePath,proto3" json:"page_path,omitempty"`
	WeAppIconUrl      string `protobuf:"bytes,5,opt,name=we_app_icon_url,json=weAppIconUrl,proto3" json:"we_app_icon_url,omitempty"`
	SourceDisplayName string `protobuf:"bytes,6,opt,name=source_display_name,json=sourceDisplayName,proto3" json:"source_display_name,omitempty"`
	Title             string `protobuf:"bytes,7,opt,name=title,proto3" json:"title,omitempty"`
	UserName          string `protobuf:"bytes,8,opt,name=user_name,json=userName,proto3" json:"user_name,omitempty"`
}

func (x *WeAppInfo) Reset() {
	*x = WeAppInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_pdd_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WeAppInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WeAppInfo) ProtoMessage() {}

func (x *WeAppInfo) ProtoReflect() protoreflect.Message {
	mi := &file_api_pdd_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WeAppInfo.ProtoReflect.Descriptor instead.
func (*WeAppInfo) Descriptor() ([]byte, []int) {
	return file_api_pdd_proto_rawDescGZIP(), []int{1}
}

func (x *WeAppInfo) GetAppId() string {
	if x != nil {
		return x.AppId
	}
	return ""
}

func (x *WeAppInfo) GetBannerUrl() string {
	if x != nil {
		return x.BannerUrl
	}
	return ""
}

func (x *WeAppInfo) GetDesc() string {
	if x != nil {
		return x.Desc
	}
	return ""
}

func (x *WeAppInfo) GetPagePath() string {
	if x != nil {
		return x.PagePath
	}
	return ""
}

func (x *WeAppInfo) GetWeAppIconUrl() string {
	if x != nil {
		return x.WeAppIconUrl
	}
	return ""
}

func (x *WeAppInfo) GetSourceDisplayName() string {
	if x != nil {
		return x.SourceDisplayName
	}
	return ""
}

func (x *WeAppInfo) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *WeAppInfo) GetUserName() string {
	if x != nil {
		return x.UserName
	}
	return ""
}

type GoodsPromotionUrl struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MobileShortUrl string     `protobuf:"bytes,1,opt,name=mobile_short_url,json=mobileShortUrl,proto3" json:"mobile_short_url,omitempty"`
	MobileUrl      string     `protobuf:"bytes,2,opt,name=mobile_url,json=mobileUrl,proto3" json:"mobile_url,omitempty"`
	QqAppInfo      *QQAppInfo `protobuf:"bytes,3,opt,name=qq_app_info,json=qqAppInfo,proto3,oneof" json:"qq_app_info,omitempty"`
	SchemaUrl      string     `protobuf:"bytes,4,opt,name=schema_url,json=schemaUrl,proto3" json:"schema_url,omitempty"`
	ShortUrl       string     `protobuf:"bytes,5,opt,name=short_url,json=shortUrl,proto3" json:"short_url,omitempty"`
	Url            string     `protobuf:"bytes,6,opt,name=url,proto3" json:"url,omitempty"`
	WeAppInfo      *WeAppInfo `protobuf:"bytes,7,opt,name=we_app_info,json=weAppInfo,proto3,oneof" json:"we_app_info,omitempty"`
}

func (x *GoodsPromotionUrl) Reset() {
	*x = GoodsPromotionUrl{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_pdd_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GoodsPromotionUrl) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GoodsPromotionUrl) ProtoMessage() {}

func (x *GoodsPromotionUrl) ProtoReflect() protoreflect.Message {
	mi := &file_api_pdd_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GoodsPromotionUrl.ProtoReflect.Descriptor instead.
func (*GoodsPromotionUrl) Descriptor() ([]byte, []int) {
	return file_api_pdd_proto_rawDescGZIP(), []int{2}
}

func (x *GoodsPromotionUrl) GetMobileShortUrl() string {
	if x != nil {
		return x.MobileShortUrl
	}
	return ""
}

func (x *GoodsPromotionUrl) GetMobileUrl() string {
	if x != nil {
		return x.MobileUrl
	}
	return ""
}

func (x *GoodsPromotionUrl) GetQqAppInfo() *QQAppInfo {
	if x != nil {
		return x.QqAppInfo
	}
	return nil
}

func (x *GoodsPromotionUrl) GetSchemaUrl() string {
	if x != nil {
		return x.SchemaUrl
	}
	return ""
}

func (x *GoodsPromotionUrl) GetShortUrl() string {
	if x != nil {
		return x.ShortUrl
	}
	return ""
}

func (x *GoodsPromotionUrl) GetUrl() string {
	if x != nil {
		return x.Url
	}
	return ""
}

func (x *GoodsPromotionUrl) GetWeAppInfo() *WeAppInfo {
	if x != nil {
		return x.WeAppInfo
	}
	return nil
}

type GoodsPromotionUrlGenerateResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	GoodsPromotionUrlList []*GoodsPromotionUrl `protobuf:"bytes,1,rep,name=goods_promotion_url_list,json=goodsPromotionUrlList,proto3" json:"goods_promotion_url_list,omitempty"`
}

func (x *GoodsPromotionUrlGenerateResponse) Reset() {
	*x = GoodsPromotionUrlGenerateResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_pdd_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GoodsPromotionUrlGenerateResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GoodsPromotionUrlGenerateResponse) ProtoMessage() {}

func (x *GoodsPromotionUrlGenerateResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_pdd_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GoodsPromotionUrlGenerateResponse.ProtoReflect.Descriptor instead.
func (*GoodsPromotionUrlGenerateResponse) Descriptor() ([]byte, []int) {
	return file_api_pdd_proto_rawDescGZIP(), []int{3}
}

func (x *GoodsPromotionUrlGenerateResponse) GetGoodsPromotionUrlList() []*GoodsPromotionUrl {
	if x != nil {
		return x.GoodsPromotionUrlList
	}
	return nil
}

type PromotionByURLRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PId                       string   `protobuf:"bytes,1,opt,name=p_id,json=pId,proto3" json:"p_id,omitempty"`                                                                               // 推广位ID
	GoodsSignList             []string `protobuf:"bytes,2,rep,name=goods_sign_list,json=goodsSignList,proto3" json:"goods_sign_list,omitempty"`                                               // 商品goodsSign列表，例如：["c9r2omogKFFAc7WBwvbZU1ikIb16_J3CTa8HNN"]，支持批量生链。goodsSign是加密后的goodsId
	CashGiftId                *uint64  `protobuf:"varint,6,opt,name=cash_gift_id,json=cashGiftId,proto3,oneof" json:"cash_gift_id,omitempty"`                                                 // 多多礼金ID
	CashGiftName              *string  `protobuf:"bytes,7,opt,name=cash_gift_name,json=cashGiftName,proto3,oneof" json:"cash_gift_name,omitempty"`                                            // 自定义礼金标题，用于向用户展示渠道专属福利，不超过12个字
	CustomParameters          *string  `protobuf:"bytes,8,opt,name=custom_parameters,json=customParameters,proto3,oneof" json:"custom_parameters,omitempty"`                                  // 自定义参数，为链接打上自定义标签；自定义参数最长限制64个字节；格式为： {"uid":"11111","sid":"22222"} ，其中 uid 用户唯一标识，可自行加密后传入，每个用户仅且对应一个标识，必填； sid 上下文信息标识，例如sessionId等，非必填。该json字符串中也可以加入其他自定义的key。
	GenerateAuthorityUrl      *bool    `protobuf:"varint,9,opt,name=generate_authority_url,json=generateAuthorityUrl,proto3,oneof" json:"generate_authority_url,omitempty"`                   // 是否生成带授权的单品链接。如果未授权，则会走授权流程
	GenerateMallCollectCoupon *bool    `protobuf:"varint,10,opt,name=generate_mall_collect_coupon,json=generateMallCollectCoupon,proto3,oneof" json:"generate_mall_collect_coupon,omitempty"` // 是否生成店铺收藏券推广链接
	GenerateQqApp             *bool    `protobuf:"varint,11,opt,name=generate_qq_app,json=generateQqApp,proto3,oneof" json:"generate_qq_app,omitempty"`                                       // 是否生成qq小程序
	GenerateSchemaUrl         *bool    `protobuf:"varint,12,opt,name=generate_schema_url,json=generateSchemaUrl,proto3,oneof" json:"generate_schema_url,omitempty"`                           // 是否返回 schema URL
	GenerateShortUrl          *bool    `protobuf:"varint,13,opt,name=generate_short_url,json=generateShortUrl,proto3,oneof" json:"generate_short_url,omitempty"`                              // 是否生成短链接，true-是，false-否
	GenerateWeApp             *bool    `protobuf:"varint,14,opt,name=generate_we_app,json=generateWeApp,proto3,oneof" json:"generate_we_app,omitempty"`                                       // 是否生成拼多多福利券微信小程序推广信息
	MaterialId                *string  `protobuf:"bytes,15,opt,name=material_id,json=materialId,proto3,oneof" json:"material_id,omitempty"`                                                   // 素材ID，可以通过商品详情接口获取商品素材信息
	MultiGroup                *bool    `protobuf:"varint,16,opt,name=multi_group,json=multiGroup,proto3,oneof" json:"multi_group,omitempty"`                                                  // true--生成多人团推广链接 false--生成单人团推广链接（默认false）1、单人团推广链接：用户访问单人团推广链接，可直接购买商品无需拼团。2、多人团推广链接：用户访问双人团推广链接开团，若用户分享给他人参团，则开团者和参团者的佣金均结算给推手
	SearchId                  *string  `protobuf:"bytes,17,opt,name=search_id,json=searchId,proto3,oneof" json:"search_id,omitempty"`                                                         // 搜索id，建议填写，提高收益。来自pdd.ddk.goods.recommend.get、pdd.ddk.goods.search、pdd.ddk.top.goods.list.query等接口
	ZsDuoId                   *uint64  `protobuf:"varint,18,opt,name=zs_duo_id,json=zsDuoId,proto3,oneof" json:"zs_duo_id,omitempty"`                                                         // 招商多多客ID
}

func (x *PromotionByURLRequest) Reset() {
	*x = PromotionByURLRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_pdd_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PromotionByURLRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PromotionByURLRequest) ProtoMessage() {}

func (x *PromotionByURLRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_pdd_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PromotionByURLRequest.ProtoReflect.Descriptor instead.
func (*PromotionByURLRequest) Descriptor() ([]byte, []int) {
	return file_api_pdd_proto_rawDescGZIP(), []int{4}
}

func (x *PromotionByURLRequest) GetPId() string {
	if x != nil {
		return x.PId
	}
	return ""
}

func (x *PromotionByURLRequest) GetGoodsSignList() []string {
	if x != nil {
		return x.GoodsSignList
	}
	return nil
}

func (x *PromotionByURLRequest) GetCashGiftId() uint64 {
	if x != nil && x.CashGiftId != nil {
		return *x.CashGiftId
	}
	return 0
}

func (x *PromotionByURLRequest) GetCashGiftName() string {
	if x != nil && x.CashGiftName != nil {
		return *x.CashGiftName
	}
	return ""
}

func (x *PromotionByURLRequest) GetCustomParameters() string {
	if x != nil && x.CustomParameters != nil {
		return *x.CustomParameters
	}
	return ""
}

func (x *PromotionByURLRequest) GetGenerateAuthorityUrl() bool {
	if x != nil && x.GenerateAuthorityUrl != nil {
		return *x.GenerateAuthorityUrl
	}
	return false
}

func (x *PromotionByURLRequest) GetGenerateMallCollectCoupon() bool {
	if x != nil && x.GenerateMallCollectCoupon != nil {
		return *x.GenerateMallCollectCoupon
	}
	return false
}

func (x *PromotionByURLRequest) GetGenerateQqApp() bool {
	if x != nil && x.GenerateQqApp != nil {
		return *x.GenerateQqApp
	}
	return false
}

func (x *PromotionByURLRequest) GetGenerateSchemaUrl() bool {
	if x != nil && x.GenerateSchemaUrl != nil {
		return *x.GenerateSchemaUrl
	}
	return false
}

func (x *PromotionByURLRequest) GetGenerateShortUrl() bool {
	if x != nil && x.GenerateShortUrl != nil {
		return *x.GenerateShortUrl
	}
	return false
}

func (x *PromotionByURLRequest) GetGenerateWeApp() bool {
	if x != nil && x.GenerateWeApp != nil {
		return *x.GenerateWeApp
	}
	return false
}

func (x *PromotionByURLRequest) GetMaterialId() string {
	if x != nil && x.MaterialId != nil {
		return *x.MaterialId
	}
	return ""
}

func (x *PromotionByURLRequest) GetMultiGroup() bool {
	if x != nil && x.MultiGroup != nil {
		return *x.MultiGroup
	}
	return false
}

func (x *PromotionByURLRequest) GetSearchId() string {
	if x != nil && x.SearchId != nil {
		return *x.SearchId
	}
	return ""
}

func (x *PromotionByURLRequest) GetZsDuoId() uint64 {
	if x != nil && x.ZsDuoId != nil {
		return *x.ZsDuoId
	}
	return 0
}

type PromotionByURLResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	GoodsPromotionUrlGenerateResponse *GoodsPromotionUrlGenerateResponse `protobuf:"bytes,1,opt,name=goods_promotion_url_generate_response,json=goodsPromotionUrlGenerateResponse,proto3" json:"goods_promotion_url_generate_response,omitempty"`
}

func (x *PromotionByURLResponse) Reset() {
	*x = PromotionByURLResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_pdd_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PromotionByURLResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PromotionByURLResponse) ProtoMessage() {}

func (x *PromotionByURLResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_pdd_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PromotionByURLResponse.ProtoReflect.Descriptor instead.
func (*PromotionByURLResponse) Descriptor() ([]byte, []int) {
	return file_api_pdd_proto_rawDescGZIP(), []int{5}
}

func (x *PromotionByURLResponse) GetGoodsPromotionUrlGenerateResponse() *GoodsPromotionUrlGenerateResponse {
	if x != nil {
		return x.GoodsPromotionUrlGenerateResponse
	}
	return nil
}

var File_api_pdd_proto protoreflect.FileDescriptor

var file_api_pdd_proto_rawDesc = []byte{
	0x0a, 0x0d, 0x61, 0x70, 0x69, 0x2e, 0x70, 0x64, 0x64, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12,
	0x05, 0x70, 0x64, 0x64, 0x70, 0x62, 0x22, 0xfc, 0x01, 0x0a, 0x09, 0x51, 0x51, 0x41, 0x70, 0x70,
	0x49, 0x6e, 0x66, 0x6f, 0x12, 0x15, 0x0a, 0x06, 0x61, 0x70, 0x70, 0x5f, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x61, 0x70, 0x70, 0x49, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x62,
	0x61, 0x6e, 0x6e, 0x65, 0x72, 0x5f, 0x75, 0x72, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x09, 0x62, 0x61, 0x6e, 0x6e, 0x65, 0x72, 0x55, 0x72, 0x6c, 0x12, 0x12, 0x0a, 0x04, 0x64, 0x65,
	0x73, 0x63, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x64, 0x65, 0x73, 0x63, 0x12, 0x1b,
	0x0a, 0x09, 0x70, 0x61, 0x67, 0x65, 0x5f, 0x70, 0x61, 0x74, 0x68, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x08, 0x70, 0x61, 0x67, 0x65, 0x50, 0x61, 0x74, 0x68, 0x12, 0x25, 0x0a, 0x0f, 0x71,
	0x71, 0x5f, 0x61, 0x70, 0x70, 0x5f, 0x69, 0x63, 0x6f, 0x6e, 0x5f, 0x75, 0x72, 0x6c, 0x18, 0x05,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x71, 0x71, 0x41, 0x70, 0x70, 0x49, 0x63, 0x6f, 0x6e, 0x55,
	0x72, 0x6c, 0x12, 0x2e, 0x0a, 0x13, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x5f, 0x64, 0x69, 0x73,
	0x70, 0x6c, 0x61, 0x79, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x11, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x44, 0x69, 0x73, 0x70, 0x6c, 0x61, 0x79, 0x4e, 0x61,
	0x6d, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x75, 0x73, 0x65, 0x72,
	0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x75, 0x73, 0x65,
	0x72, 0x4e, 0x61, 0x6d, 0x65, 0x22, 0xfc, 0x01, 0x0a, 0x09, 0x57, 0x65, 0x41, 0x70, 0x70, 0x49,
	0x6e, 0x66, 0x6f, 0x12, 0x15, 0x0a, 0x06, 0x61, 0x70, 0x70, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x05, 0x61, 0x70, 0x70, 0x49, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x62, 0x61,
	0x6e, 0x6e, 0x65, 0x72, 0x5f, 0x75, 0x72, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09,
	0x62, 0x61, 0x6e, 0x6e, 0x65, 0x72, 0x55, 0x72, 0x6c, 0x12, 0x12, 0x0a, 0x04, 0x64, 0x65, 0x73,
	0x63, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x64, 0x65, 0x73, 0x63, 0x12, 0x1b, 0x0a,
	0x09, 0x70, 0x61, 0x67, 0x65, 0x5f, 0x70, 0x61, 0x74, 0x68, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x08, 0x70, 0x61, 0x67, 0x65, 0x50, 0x61, 0x74, 0x68, 0x12, 0x25, 0x0a, 0x0f, 0x77, 0x65,
	0x5f, 0x61, 0x70, 0x70, 0x5f, 0x69, 0x63, 0x6f, 0x6e, 0x5f, 0x75, 0x72, 0x6c, 0x18, 0x05, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0c, 0x77, 0x65, 0x41, 0x70, 0x70, 0x49, 0x63, 0x6f, 0x6e, 0x55, 0x72,
	0x6c, 0x12, 0x2e, 0x0a, 0x13, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x5f, 0x64, 0x69, 0x73, 0x70,
	0x6c, 0x61, 0x79, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x11,
	0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x44, 0x69, 0x73, 0x70, 0x6c, 0x61, 0x79, 0x4e, 0x61, 0x6d,
	0x65, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x75, 0x73, 0x65, 0x72, 0x5f,
	0x6e, 0x61, 0x6d, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x75, 0x73, 0x65, 0x72,
	0x4e, 0x61, 0x6d, 0x65, 0x22, 0xb8, 0x02, 0x0a, 0x11, 0x47, 0x6f, 0x6f, 0x64, 0x73, 0x50, 0x72,
	0x6f, 0x6d, 0x6f, 0x74, 0x69, 0x6f, 0x6e, 0x55, 0x72, 0x6c, 0x12, 0x28, 0x0a, 0x10, 0x6d, 0x6f,
	0x62, 0x69, 0x6c, 0x65, 0x5f, 0x73, 0x68, 0x6f, 0x72, 0x74, 0x5f, 0x75, 0x72, 0x6c, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x6d, 0x6f, 0x62, 0x69, 0x6c, 0x65, 0x53, 0x68, 0x6f, 0x72,
	0x74, 0x55, 0x72, 0x6c, 0x12, 0x1d, 0x0a, 0x0a, 0x6d, 0x6f, 0x62, 0x69, 0x6c, 0x65, 0x5f, 0x75,
	0x72, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x6d, 0x6f, 0x62, 0x69, 0x6c, 0x65,
	0x55, 0x72, 0x6c, 0x12, 0x35, 0x0a, 0x0b, 0x71, 0x71, 0x5f, 0x61, 0x70, 0x70, 0x5f, 0x69, 0x6e,
	0x66, 0x6f, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x70, 0x64, 0x64, 0x70, 0x62,
	0x2e, 0x51, 0x51, 0x41, 0x70, 0x70, 0x49, 0x6e, 0x66, 0x6f, 0x48, 0x00, 0x52, 0x09, 0x71, 0x71,
	0x41, 0x70, 0x70, 0x49, 0x6e, 0x66, 0x6f, 0x88, 0x01, 0x01, 0x12, 0x1d, 0x0a, 0x0a, 0x73, 0x63,
	0x68, 0x65, 0x6d, 0x61, 0x5f, 0x75, 0x72, 0x6c, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09,
	0x73, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x55, 0x72, 0x6c, 0x12, 0x1b, 0x0a, 0x09, 0x73, 0x68, 0x6f,
	0x72, 0x74, 0x5f, 0x75, 0x72, 0x6c, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x73, 0x68,
	0x6f, 0x72, 0x74, 0x55, 0x72, 0x6c, 0x12, 0x10, 0x0a, 0x03, 0x75, 0x72, 0x6c, 0x18, 0x06, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x03, 0x75, 0x72, 0x6c, 0x12, 0x35, 0x0a, 0x0b, 0x77, 0x65, 0x5f, 0x61,
	0x70, 0x70, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x10, 0x2e,
	0x70, 0x64, 0x64, 0x70, 0x62, 0x2e, 0x57, 0x65, 0x41, 0x70, 0x70, 0x49, 0x6e, 0x66, 0x6f, 0x48,
	0x01, 0x52, 0x09, 0x77, 0x65, 0x41, 0x70, 0x70, 0x49, 0x6e, 0x66, 0x6f, 0x88, 0x01, 0x01, 0x42,
	0x0e, 0x0a, 0x0c, 0x5f, 0x71, 0x71, 0x5f, 0x61, 0x70, 0x70, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x42,
	0x0e, 0x0a, 0x0c, 0x5f, 0x77, 0x65, 0x5f, 0x61, 0x70, 0x70, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x22,
	0x76, 0x0a, 0x21, 0x47, 0x6f, 0x6f, 0x64, 0x73, 0x50, 0x72, 0x6f, 0x6d, 0x6f, 0x74, 0x69, 0x6f,
	0x6e, 0x55, 0x72, 0x6c, 0x47, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x51, 0x0a, 0x18, 0x67, 0x6f, 0x6f, 0x64, 0x73, 0x5f, 0x70, 0x72,
	0x6f, 0x6d, 0x6f, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x75, 0x72, 0x6c, 0x5f, 0x6c, 0x69, 0x73, 0x74,
	0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x70, 0x64, 0x64, 0x70, 0x62, 0x2e, 0x47,
	0x6f, 0x6f, 0x64, 0x73, 0x50, 0x72, 0x6f, 0x6d, 0x6f, 0x74, 0x69, 0x6f, 0x6e, 0x55, 0x72, 0x6c,
	0x52, 0x15, 0x67, 0x6f, 0x6f, 0x64, 0x73, 0x50, 0x72, 0x6f, 0x6d, 0x6f, 0x74, 0x69, 0x6f, 0x6e,
	0x55, 0x72, 0x6c, 0x4c, 0x69, 0x73, 0x74, 0x22, 0xb1, 0x07, 0x0a, 0x15, 0x50, 0x72, 0x6f, 0x6d,
	0x6f, 0x74, 0x69, 0x6f, 0x6e, 0x42, 0x79, 0x55, 0x52, 0x4c, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x11, 0x0a, 0x04, 0x70, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x03, 0x70, 0x49, 0x64, 0x12, 0x26, 0x0a, 0x0f, 0x67, 0x6f, 0x6f, 0x64, 0x73, 0x5f, 0x73, 0x69,
	0x67, 0x6e, 0x5f, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x02, 0x20, 0x03, 0x28, 0x09, 0x52, 0x0d, 0x67,
	0x6f, 0x6f, 0x64, 0x73, 0x53, 0x69, 0x67, 0x6e, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x25, 0x0a, 0x0c,
	0x63, 0x61, 0x73, 0x68, 0x5f, 0x67, 0x69, 0x66, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x06, 0x20, 0x01,
	0x28, 0x04, 0x48, 0x00, 0x52, 0x0a, 0x63, 0x61, 0x73, 0x68, 0x47, 0x69, 0x66, 0x74, 0x49, 0x64,
	0x88, 0x01, 0x01, 0x12, 0x29, 0x0a, 0x0e, 0x63, 0x61, 0x73, 0x68, 0x5f, 0x67, 0x69, 0x66, 0x74,
	0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x48, 0x01, 0x52, 0x0c, 0x63,
	0x61, 0x73, 0x68, 0x47, 0x69, 0x66, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x88, 0x01, 0x01, 0x12, 0x30,
	0x0a, 0x11, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x5f, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x65, 0x74,
	0x65, 0x72, 0x73, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x48, 0x02, 0x52, 0x10, 0x63, 0x75, 0x73,
	0x74, 0x6f, 0x6d, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x65, 0x74, 0x65, 0x72, 0x73, 0x88, 0x01, 0x01,
	0x12, 0x39, 0x0a, 0x16, 0x67, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x74, 0x65, 0x5f, 0x61, 0x75, 0x74,
	0x68, 0x6f, 0x72, 0x69, 0x74, 0x79, 0x5f, 0x75, 0x72, 0x6c, 0x18, 0x09, 0x20, 0x01, 0x28, 0x08,
	0x48, 0x03, 0x52, 0x14, 0x67, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x74, 0x65, 0x41, 0x75, 0x74, 0x68,
	0x6f, 0x72, 0x69, 0x74, 0x79, 0x55, 0x72, 0x6c, 0x88, 0x01, 0x01, 0x12, 0x44, 0x0a, 0x1c, 0x67,
	0x65, 0x6e, 0x65, 0x72, 0x61, 0x74, 0x65, 0x5f, 0x6d, 0x61, 0x6c, 0x6c, 0x5f, 0x63, 0x6f, 0x6c,
	0x6c, 0x65, 0x63, 0x74, 0x5f, 0x63, 0x6f, 0x75, 0x70, 0x6f, 0x6e, 0x18, 0x0a, 0x20, 0x01, 0x28,
	0x08, 0x48, 0x04, 0x52, 0x19, 0x67, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x74, 0x65, 0x4d, 0x61, 0x6c,
	0x6c, 0x43, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x43, 0x6f, 0x75, 0x70, 0x6f, 0x6e, 0x88, 0x01,
	0x01, 0x12, 0x2b, 0x0a, 0x0f, 0x67, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x74, 0x65, 0x5f, 0x71, 0x71,
	0x5f, 0x61, 0x70, 0x70, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x08, 0x48, 0x05, 0x52, 0x0d, 0x67, 0x65,
	0x6e, 0x65, 0x72, 0x61, 0x74, 0x65, 0x51, 0x71, 0x41, 0x70, 0x70, 0x88, 0x01, 0x01, 0x12, 0x33,
	0x0a, 0x13, 0x67, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x74, 0x65, 0x5f, 0x73, 0x63, 0x68, 0x65, 0x6d,
	0x61, 0x5f, 0x75, 0x72, 0x6c, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x08, 0x48, 0x06, 0x52, 0x11, 0x67,
	0x65, 0x6e, 0x65, 0x72, 0x61, 0x74, 0x65, 0x53, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x55, 0x72, 0x6c,
	0x88, 0x01, 0x01, 0x12, 0x31, 0x0a, 0x12, 0x67, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x74, 0x65, 0x5f,
	0x73, 0x68, 0x6f, 0x72, 0x74, 0x5f, 0x75, 0x72, 0x6c, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x08, 0x48,
	0x07, 0x52, 0x10, 0x67, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x74, 0x65, 0x53, 0x68, 0x6f, 0x72, 0x74,
	0x55, 0x72, 0x6c, 0x88, 0x01, 0x01, 0x12, 0x2b, 0x0a, 0x0f, 0x67, 0x65, 0x6e, 0x65, 0x72, 0x61,
	0x74, 0x65, 0x5f, 0x77, 0x65, 0x5f, 0x61, 0x70, 0x70, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x08, 0x48,
	0x08, 0x52, 0x0d, 0x67, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x74, 0x65, 0x57, 0x65, 0x41, 0x70, 0x70,
	0x88, 0x01, 0x01, 0x12, 0x24, 0x0a, 0x0b, 0x6d, 0x61, 0x74, 0x65, 0x72, 0x69, 0x61, 0x6c, 0x5f,
	0x69, 0x64, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x09, 0x48, 0x09, 0x52, 0x0a, 0x6d, 0x61, 0x74, 0x65,
	0x72, 0x69, 0x61, 0x6c, 0x49, 0x64, 0x88, 0x01, 0x01, 0x12, 0x24, 0x0a, 0x0b, 0x6d, 0x75, 0x6c,
	0x74, 0x69, 0x5f, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x18, 0x10, 0x20, 0x01, 0x28, 0x08, 0x48, 0x0a,
	0x52, 0x0a, 0x6d, 0x75, 0x6c, 0x74, 0x69, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x88, 0x01, 0x01, 0x12,
	0x20, 0x0a, 0x09, 0x73, 0x65, 0x61, 0x72, 0x63, 0x68, 0x5f, 0x69, 0x64, 0x18, 0x11, 0x20, 0x01,
	0x28, 0x09, 0x48, 0x0b, 0x52, 0x08, 0x73, 0x65, 0x61, 0x72, 0x63, 0x68, 0x49, 0x64, 0x88, 0x01,
	0x01, 0x12, 0x1f, 0x0a, 0x09, 0x7a, 0x73, 0x5f, 0x64, 0x75, 0x6f, 0x5f, 0x69, 0x64, 0x18, 0x12,
	0x20, 0x01, 0x28, 0x04, 0x48, 0x0c, 0x52, 0x07, 0x7a, 0x73, 0x44, 0x75, 0x6f, 0x49, 0x64, 0x88,
	0x01, 0x01, 0x42, 0x0f, 0x0a, 0x0d, 0x5f, 0x63, 0x61, 0x73, 0x68, 0x5f, 0x67, 0x69, 0x66, 0x74,
	0x5f, 0x69, 0x64, 0x42, 0x11, 0x0a, 0x0f, 0x5f, 0x63, 0x61, 0x73, 0x68, 0x5f, 0x67, 0x69, 0x66,
	0x74, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x42, 0x14, 0x0a, 0x12, 0x5f, 0x63, 0x75, 0x73, 0x74, 0x6f,
	0x6d, 0x5f, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x65, 0x74, 0x65, 0x72, 0x73, 0x42, 0x19, 0x0a, 0x17,
	0x5f, 0x67, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x74, 0x65, 0x5f, 0x61, 0x75, 0x74, 0x68, 0x6f, 0x72,
	0x69, 0x74, 0x79, 0x5f, 0x75, 0x72, 0x6c, 0x42, 0x1f, 0x0a, 0x1d, 0x5f, 0x67, 0x65, 0x6e, 0x65,
	0x72, 0x61, 0x74, 0x65, 0x5f, 0x6d, 0x61, 0x6c, 0x6c, 0x5f, 0x63, 0x6f, 0x6c, 0x6c, 0x65, 0x63,
	0x74, 0x5f, 0x63, 0x6f, 0x75, 0x70, 0x6f, 0x6e, 0x42, 0x12, 0x0a, 0x10, 0x5f, 0x67, 0x65, 0x6e,
	0x65, 0x72, 0x61, 0x74, 0x65, 0x5f, 0x71, 0x71, 0x5f, 0x61, 0x70, 0x70, 0x42, 0x16, 0x0a, 0x14,
	0x5f, 0x67, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x74, 0x65, 0x5f, 0x73, 0x63, 0x68, 0x65, 0x6d, 0x61,
	0x5f, 0x75, 0x72, 0x6c, 0x42, 0x15, 0x0a, 0x13, 0x5f, 0x67, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x74,
	0x65, 0x5f, 0x73, 0x68, 0x6f, 0x72, 0x74, 0x5f, 0x75, 0x72, 0x6c, 0x42, 0x12, 0x0a, 0x10, 0x5f,
	0x67, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x74, 0x65, 0x5f, 0x77, 0x65, 0x5f, 0x61, 0x70, 0x70, 0x42,
	0x0e, 0x0a, 0x0c, 0x5f, 0x6d, 0x61, 0x74, 0x65, 0x72, 0x69, 0x61, 0x6c, 0x5f, 0x69, 0x64, 0x42,
	0x0e, 0x0a, 0x0c, 0x5f, 0x6d, 0x75, 0x6c, 0x74, 0x69, 0x5f, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x42,
	0x0c, 0x0a, 0x0a, 0x5f, 0x73, 0x65, 0x61, 0x72, 0x63, 0x68, 0x5f, 0x69, 0x64, 0x42, 0x0c, 0x0a,
	0x0a, 0x5f, 0x7a, 0x73, 0x5f, 0x64, 0x75, 0x6f, 0x5f, 0x69, 0x64, 0x22, 0x94, 0x01, 0x0a, 0x16,
	0x50, 0x72, 0x6f, 0x6d, 0x6f, 0x74, 0x69, 0x6f, 0x6e, 0x42, 0x79, 0x55, 0x52, 0x4c, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x7a, 0x0a, 0x25, 0x67, 0x6f, 0x6f, 0x64, 0x73, 0x5f,
	0x70, 0x72, 0x6f, 0x6d, 0x6f, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x75, 0x72, 0x6c, 0x5f, 0x67, 0x65,
	0x6e, 0x65, 0x72, 0x61, 0x74, 0x65, 0x5f, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x28, 0x2e, 0x70, 0x64, 0x64, 0x70, 0x62, 0x2e, 0x47, 0x6f,
	0x6f, 0x64, 0x73, 0x50, 0x72, 0x6f, 0x6d, 0x6f, 0x74, 0x69, 0x6f, 0x6e, 0x55, 0x72, 0x6c, 0x47,
	0x65, 0x6e, 0x65, 0x72, 0x61, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x52,
	0x21, 0x67, 0x6f, 0x6f, 0x64, 0x73, 0x50, 0x72, 0x6f, 0x6d, 0x6f, 0x74, 0x69, 0x6f, 0x6e, 0x55,
	0x72, 0x6c, 0x47, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x42, 0x08, 0x5a, 0x06, 0x2f, 0x70, 0x64, 0x64, 0x70, 0x62, 0x62, 0x06, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_api_pdd_proto_rawDescOnce sync.Once
	file_api_pdd_proto_rawDescData = file_api_pdd_proto_rawDesc
)

func file_api_pdd_proto_rawDescGZIP() []byte {
	file_api_pdd_proto_rawDescOnce.Do(func() {
		file_api_pdd_proto_rawDescData = protoimpl.X.CompressGZIP(file_api_pdd_proto_rawDescData)
	})
	return file_api_pdd_proto_rawDescData
}

var file_api_pdd_proto_msgTypes = make([]protoimpl.MessageInfo, 6)
var file_api_pdd_proto_goTypes = []interface{}{
	(*QQAppInfo)(nil),                         // 0: pddpb.QQAppInfo
	(*WeAppInfo)(nil),                         // 1: pddpb.WeAppInfo
	(*GoodsPromotionUrl)(nil),                 // 2: pddpb.GoodsPromotionUrl
	(*GoodsPromotionUrlGenerateResponse)(nil), // 3: pddpb.GoodsPromotionUrlGenerateResponse
	(*PromotionByURLRequest)(nil),             // 4: pddpb.PromotionByURLRequest
	(*PromotionByURLResponse)(nil),            // 5: pddpb.PromotionByURLResponse
}
var file_api_pdd_proto_depIdxs = []int32{
	0, // 0: pddpb.GoodsPromotionUrl.qq_app_info:type_name -> pddpb.QQAppInfo
	1, // 1: pddpb.GoodsPromotionUrl.we_app_info:type_name -> pddpb.WeAppInfo
	2, // 2: pddpb.GoodsPromotionUrlGenerateResponse.goods_promotion_url_list:type_name -> pddpb.GoodsPromotionUrl
	3, // 3: pddpb.PromotionByURLResponse.goods_promotion_url_generate_response:type_name -> pddpb.GoodsPromotionUrlGenerateResponse
	4, // [4:4] is the sub-list for method output_type
	4, // [4:4] is the sub-list for method input_type
	4, // [4:4] is the sub-list for extension type_name
	4, // [4:4] is the sub-list for extension extendee
	0, // [0:4] is the sub-list for field type_name
}

func init() { file_api_pdd_proto_init() }
func file_api_pdd_proto_init() {
	if File_api_pdd_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_api_pdd_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*QQAppInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_pdd_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*WeAppInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_pdd_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GoodsPromotionUrl); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_pdd_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GoodsPromotionUrlGenerateResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_pdd_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PromotionByURLRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_pdd_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PromotionByURLResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_api_pdd_proto_msgTypes[2].OneofWrappers = []interface{}{}
	file_api_pdd_proto_msgTypes[4].OneofWrappers = []interface{}{}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_api_pdd_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   6,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_api_pdd_proto_goTypes,
		DependencyIndexes: file_api_pdd_proto_depIdxs,
		MessageInfos:      file_api_pdd_proto_msgTypes,
	}.Build()
	File_api_pdd_proto = out.File
	file_api_pdd_proto_rawDesc = nil
	file_api_pdd_proto_goTypes = nil
	file_api_pdd_proto_depIdxs = nil
}
