// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.26.0
// 	protoc        v3.15.8
// source: api.pdd.ddx.proto

package pddxpb

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// API: http://api.tbk.dingdanxia.com/pdd/authority_query
type AuthorityQueryData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Bind int32 `protobuf:"varint,1,opt,name=bind,proto3" json:"bind,omitempty"` // 1-已绑定；0-未绑定
}

func (x *AuthorityQueryData) Reset() {
	*x = AuthorityQueryData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_pdd_ddx_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AuthorityQueryData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AuthorityQueryData) ProtoMessage() {}

func (x *AuthorityQueryData) ProtoReflect() protoreflect.Message {
	mi := &file_api_pdd_ddx_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AuthorityQueryData.ProtoReflect.Descriptor instead.
func (*AuthorityQueryData) Descriptor() ([]byte, []int) {
	return file_api_pdd_ddx_proto_rawDescGZIP(), []int{0}
}

func (x *AuthorityQueryData) GetBind() int32 {
	if x != nil {
		return x.Bind
	}
	return 0
}

type AuthorityQueryRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Pid              *string `protobuf:"bytes,1,opt,name=pid,proto3,oneof" json:"pid,omitempty"`                                                   // 推广位ID; 和custom_parameters至少传入1个;不传时server侧会使用默认PID
	CustomParameters *string `protobuf:"bytes,2,opt,name=custom_parameters,json=customParameters,proto3,oneof" json:"custom_parameters,omitempty"` // 自定义参数，为链接打上自定义标签；自定义参数最长限制64个字节；格式为： {"uid":"11111","sid":"22222"} ，其中 uid 用户唯一标识，可自行加密后传入，每个用户仅且对应一个标识，必填； sid 上下文信息标识，例如sessionId等，非必填。该json字符串中也可以加入其他自定义的key
	PddAuthId        *string `protobuf:"bytes,3,opt,name=pdd_auth_id,json=pddAuthId,proto3,oneof" json:"pdd_auth_id,omitempty"`                    // 切换授权参数
}

func (x *AuthorityQueryRequest) Reset() {
	*x = AuthorityQueryRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_pdd_ddx_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AuthorityQueryRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AuthorityQueryRequest) ProtoMessage() {}

func (x *AuthorityQueryRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_pdd_ddx_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AuthorityQueryRequest.ProtoReflect.Descriptor instead.
func (*AuthorityQueryRequest) Descriptor() ([]byte, []int) {
	return file_api_pdd_ddx_proto_rawDescGZIP(), []int{1}
}

func (x *AuthorityQueryRequest) GetPid() string {
	if x != nil && x.Pid != nil {
		return *x.Pid
	}
	return ""
}

func (x *AuthorityQueryRequest) GetCustomParameters() string {
	if x != nil && x.CustomParameters != nil {
		return *x.CustomParameters
	}
	return ""
}

func (x *AuthorityQueryRequest) GetPddAuthId() string {
	if x != nil && x.PddAuthId != nil {
		return *x.PddAuthId
	}
	return ""
}

type AuthorityQueryResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code int32               `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Msg  string              `protobuf:"bytes,2,opt,name=msg,proto3" json:"msg,omitempty"`
	Data *AuthorityQueryData `protobuf:"bytes,3,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *AuthorityQueryResponse) Reset() {
	*x = AuthorityQueryResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_pdd_ddx_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AuthorityQueryResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AuthorityQueryResponse) ProtoMessage() {}

func (x *AuthorityQueryResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_pdd_ddx_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AuthorityQueryResponse.ProtoReflect.Descriptor instead.
func (*AuthorityQueryResponse) Descriptor() ([]byte, []int) {
	return file_api_pdd_ddx_proto_rawDescGZIP(), []int{2}
}

func (x *AuthorityQueryResponse) GetCode() int32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *AuthorityQueryResponse) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

func (x *AuthorityQueryResponse) GetData() *AuthorityQueryData {
	if x != nil {
		return x.Data
	}
	return nil
}

// API: http://api.tbk.dingdanxia.com/pdd/prom_url_generate
type Resource struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Desc string `protobuf:"bytes,1,opt,name=desc,proto3" json:"desc,omitempty"` // 活动描述
	Url  string `protobuf:"bytes,2,opt,name=url,proto3" json:"url,omitempty"`   // 活动地址
}

func (x *Resource) Reset() {
	*x = Resource{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_pdd_ddx_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Resource) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Resource) ProtoMessage() {}

func (x *Resource) ProtoReflect() protoreflect.Message {
	mi := &file_api_pdd_ddx_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Resource.ProtoReflect.Descriptor instead.
func (*Resource) Descriptor() ([]byte, []int) {
	return file_api_pdd_ddx_proto_rawDescGZIP(), []int{3}
}

func (x *Resource) GetDesc() string {
	if x != nil {
		return x.Desc
	}
	return ""
}

func (x *Resource) GetUrl() string {
	if x != nil {
		return x.Url
	}
	return ""
}

type QQAppInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AppId             string `protobuf:"bytes,1,opt,name=app_id,json=appId,proto3" json:"app_id,omitempty"`
	BannerUrl         string `protobuf:"bytes,2,opt,name=banner_url,json=bannerUrl,proto3" json:"banner_url,omitempty"`
	Desc              string `protobuf:"bytes,3,opt,name=desc,proto3" json:"desc,omitempty"`
	PagePath          string `protobuf:"bytes,4,opt,name=page_path,json=pagePath,proto3" json:"page_path,omitempty"`
	QqAppIconUrl      string `protobuf:"bytes,5,opt,name=qq_app_icon_url,json=qqAppIconUrl,proto3" json:"qq_app_icon_url,omitempty"`
	SourceDisplayName string `protobuf:"bytes,6,opt,name=source_display_name,json=sourceDisplayName,proto3" json:"source_display_name,omitempty"`
	Title             string `protobuf:"bytes,7,opt,name=title,proto3" json:"title,omitempty"`
	UserName          string `protobuf:"bytes,8,opt,name=user_name,json=userName,proto3" json:"user_name,omitempty"`
}

func (x *QQAppInfo) Reset() {
	*x = QQAppInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_pdd_ddx_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *QQAppInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QQAppInfo) ProtoMessage() {}

func (x *QQAppInfo) ProtoReflect() protoreflect.Message {
	mi := &file_api_pdd_ddx_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QQAppInfo.ProtoReflect.Descriptor instead.
func (*QQAppInfo) Descriptor() ([]byte, []int) {
	return file_api_pdd_ddx_proto_rawDescGZIP(), []int{4}
}

func (x *QQAppInfo) GetAppId() string {
	if x != nil {
		return x.AppId
	}
	return ""
}

func (x *QQAppInfo) GetBannerUrl() string {
	if x != nil {
		return x.BannerUrl
	}
	return ""
}

func (x *QQAppInfo) GetDesc() string {
	if x != nil {
		return x.Desc
	}
	return ""
}

func (x *QQAppInfo) GetPagePath() string {
	if x != nil {
		return x.PagePath
	}
	return ""
}

func (x *QQAppInfo) GetQqAppIconUrl() string {
	if x != nil {
		return x.QqAppIconUrl
	}
	return ""
}

func (x *QQAppInfo) GetSourceDisplayName() string {
	if x != nil {
		return x.SourceDisplayName
	}
	return ""
}

func (x *QQAppInfo) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *QQAppInfo) GetUserName() string {
	if x != nil {
		return x.UserName
	}
	return ""
}

type WeAppInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AppId             string `protobuf:"bytes,1,opt,name=app_id,json=appId,proto3" json:"app_id,omitempty"`
	BannerUrl         string `protobuf:"bytes,2,opt,name=banner_url,json=bannerUrl,proto3" json:"banner_url,omitempty"`
	Desc              string `protobuf:"bytes,3,opt,name=desc,proto3" json:"desc,omitempty"`
	PagePath          string `protobuf:"bytes,4,opt,name=page_path,json=pagePath,proto3" json:"page_path,omitempty"`
	WeAppIconUrl      string `protobuf:"bytes,5,opt,name=we_app_icon_url,json=weAppIconUrl,proto3" json:"we_app_icon_url,omitempty"`
	SourceDisplayName string `protobuf:"bytes,6,opt,name=source_display_name,json=sourceDisplayName,proto3" json:"source_display_name,omitempty"`
	Title             string `protobuf:"bytes,7,opt,name=title,proto3" json:"title,omitempty"`
	UserName          string `protobuf:"bytes,8,opt,name=user_name,json=userName,proto3" json:"user_name,omitempty"`
}

func (x *WeAppInfo) Reset() {
	*x = WeAppInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_pdd_ddx_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WeAppInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WeAppInfo) ProtoMessage() {}

func (x *WeAppInfo) ProtoReflect() protoreflect.Message {
	mi := &file_api_pdd_ddx_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WeAppInfo.ProtoReflect.Descriptor instead.
func (*WeAppInfo) Descriptor() ([]byte, []int) {
	return file_api_pdd_ddx_proto_rawDescGZIP(), []int{5}
}

func (x *WeAppInfo) GetAppId() string {
	if x != nil {
		return x.AppId
	}
	return ""
}

func (x *WeAppInfo) GetBannerUrl() string {
	if x != nil {
		return x.BannerUrl
	}
	return ""
}

func (x *WeAppInfo) GetDesc() string {
	if x != nil {
		return x.Desc
	}
	return ""
}

func (x *WeAppInfo) GetPagePath() string {
	if x != nil {
		return x.PagePath
	}
	return ""
}

func (x *WeAppInfo) GetWeAppIconUrl() string {
	if x != nil {
		return x.WeAppIconUrl
	}
	return ""
}

func (x *WeAppInfo) GetSourceDisplayName() string {
	if x != nil {
		return x.SourceDisplayName
	}
	return ""
}

func (x *WeAppInfo) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *WeAppInfo) GetUserName() string {
	if x != nil {
		return x.UserName
	}
	return ""
}

type URLInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MobileShortUrl           string     `protobuf:"bytes,1,opt,name=mobile_short_url,json=mobileShortUrl,proto3" json:"mobile_short_url,omitempty"`
	MobileUrl                string     `protobuf:"bytes,2,opt,name=mobile_url,json=mobileUrl,proto3" json:"mobile_url,omitempty"`
	MultiGroupMobileShortUrl string     `protobuf:"bytes,3,opt,name=multi_group_mobile_short_url,json=multiGroupMobileShortUrl,proto3" json:"multi_group_mobile_short_url,omitempty"`
	MultiGroupMobileUrl      string     `protobuf:"bytes,4,opt,name=multi_group_mobile_url,json=multiGroupMobileUrl,proto3" json:"multi_group_mobile_url,omitempty"`
	MultiGroupShortUrl       string     `protobuf:"bytes,5,opt,name=multi_group_short_url,json=multiGroupShortUrl,proto3" json:"multi_group_short_url,omitempty"`
	MultiGroupUrl            string     `protobuf:"bytes,6,opt,name=multi_group_url,json=multiGroupUrl,proto3" json:"multi_group_url,omitempty"`
	QqAppInfo                *QQAppInfo `protobuf:"bytes,7,opt,name=qq_app_info,json=qqAppInfo,proto3" json:"qq_app_info,omitempty"`
	SchemaUrl                string     `protobuf:"bytes,8,opt,name=schema_url,json=schemaUrl,proto3" json:"schema_url,omitempty"`
	ShortUrl                 string     `protobuf:"bytes,9,opt,name=short_url,json=shortUrl,proto3" json:"short_url,omitempty"`
	Url                      string     `protobuf:"bytes,10,opt,name=url,proto3" json:"url,omitempty"`
	WeAppInfo                *WeAppInfo `protobuf:"bytes,11,opt,name=we_app_info,json=weAppInfo,proto3" json:"we_app_info,omitempty"`
}

func (x *URLInfo) Reset() {
	*x = URLInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_pdd_ddx_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *URLInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*URLInfo) ProtoMessage() {}

func (x *URLInfo) ProtoReflect() protoreflect.Message {
	mi := &file_api_pdd_ddx_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use URLInfo.ProtoReflect.Descriptor instead.
func (*URLInfo) Descriptor() ([]byte, []int) {
	return file_api_pdd_ddx_proto_rawDescGZIP(), []int{6}
}

func (x *URLInfo) GetMobileShortUrl() string {
	if x != nil {
		return x.MobileShortUrl
	}
	return ""
}

func (x *URLInfo) GetMobileUrl() string {
	if x != nil {
		return x.MobileUrl
	}
	return ""
}

func (x *URLInfo) GetMultiGroupMobileShortUrl() string {
	if x != nil {
		return x.MultiGroupMobileShortUrl
	}
	return ""
}

func (x *URLInfo) GetMultiGroupMobileUrl() string {
	if x != nil {
		return x.MultiGroupMobileUrl
	}
	return ""
}

func (x *URLInfo) GetMultiGroupShortUrl() string {
	if x != nil {
		return x.MultiGroupShortUrl
	}
	return ""
}

func (x *URLInfo) GetMultiGroupUrl() string {
	if x != nil {
		return x.MultiGroupUrl
	}
	return ""
}

func (x *URLInfo) GetQqAppInfo() *QQAppInfo {
	if x != nil {
		return x.QqAppInfo
	}
	return nil
}

func (x *URLInfo) GetSchemaUrl() string {
	if x != nil {
		return x.SchemaUrl
	}
	return ""
}

func (x *URLInfo) GetShortUrl() string {
	if x != nil {
		return x.ShortUrl
	}
	return ""
}

func (x *URLInfo) GetUrl() string {
	if x != nil {
		return x.Url
	}
	return ""
}

func (x *URLInfo) GetWeAppInfo() *WeAppInfo {
	if x != nil {
		return x.WeAppInfo
	}
	return nil
}

type MarketingURLData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ResourceList []*Resource `protobuf:"bytes,1,rep,name=resource_list,json=resourceList,proto3" json:"resource_list,omitempty"`
	UrlList      []*URLInfo  `protobuf:"bytes,2,rep,name=url_list,json=urlList,proto3" json:"url_list,omitempty"`
}

func (x *MarketingURLData) Reset() {
	*x = MarketingURLData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_pdd_ddx_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MarketingURLData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MarketingURLData) ProtoMessage() {}

func (x *MarketingURLData) ProtoReflect() protoreflect.Message {
	mi := &file_api_pdd_ddx_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MarketingURLData.ProtoReflect.Descriptor instead.
func (*MarketingURLData) Descriptor() ([]byte, []int) {
	return file_api_pdd_ddx_proto_rawDescGZIP(), []int{7}
}

func (x *MarketingURLData) GetResourceList() []*Resource {
	if x != nil {
		return x.ResourceList
	}
	return nil
}

func (x *MarketingURLData) GetUrlList() []*URLInfo {
	if x != nil {
		return x.UrlList
	}
	return nil
}

type CreateMarketingURLRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PIdList           *string `protobuf:"bytes,1,opt,name=p_id_list,json=pIdList,proto3,oneof" json:"p_id_list,omitempty"`                                // 推广位ID; 和custom_parameters至少传入1个;不传时server侧会使用默认PID
	CustomParameters  *string `protobuf:"bytes,2,opt,name=custom_parameters,json=customParameters,proto3,oneof" json:"custom_parameters,omitempty"`       // 自定义参数，为链接打上自定义标签；自定义参数最长限制64个字节；
	GenerateQqApp     *bool   `protobuf:"varint,3,opt,name=generate_qq_app,json=generateQqApp,proto3,oneof" json:"generate_qq_app,omitempty"`             // 是否生成qq小程序
	GenerateSchemaUrl *bool   `protobuf:"varint,4,opt,name=generate_schema_url,json=generateSchemaUrl,proto3,oneof" json:"generate_schema_url,omitempty"` // 是否返回 schema URL
	GenerateShortUrl  *bool   `protobuf:"varint,5,opt,name=generate_short_url,json=generateShortUrl,proto3,oneof" json:"generate_short_url,omitempty"`    // 是否生成短链接。true-是，false-否，默认false
	GenerateWeApp     *bool   `protobuf:"varint,6,opt,name=generate_we_app,json=generateWeApp,proto3,oneof" json:"generate_we_app,omitempty"`             // 是否生成小程序推广
	ChannelType       int32   `protobuf:"varint,7,opt,name=channel_type,json=channelType,proto3" json:"channel_type,omitempty"`                           // 营销工具类型，必填：-1-活动列表，0-红包(需申请推广权限)，2–新人红包，3-刮刮卡，5-员工内购，6-购物车，10-生成绑定备案链接，12-砸金蛋，13-一元购，14-千万补贴B端页面，15-充值中心B端页面
	ScratchCardAmount *uint64 `protobuf:"varint,8,opt,name=scratch_card_amount,json=scratchCardAmount,proto3,oneof" json:"scratch_card_amount,omitempty"` // 刮刮卡指定金额（单位分），可指定2-100元间数值，即有效区间为：[200,10000]
	PddAuthId         *string `protobuf:"bytes,9,opt,name=pdd_auth_id,json=pddAuthId,proto3,oneof" json:"pdd_auth_id,omitempty"`                          // 切换授权参数
}

func (x *CreateMarketingURLRequest) Reset() {
	*x = CreateMarketingURLRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_pdd_ddx_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateMarketingURLRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateMarketingURLRequest) ProtoMessage() {}

func (x *CreateMarketingURLRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_pdd_ddx_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateMarketingURLRequest.ProtoReflect.Descriptor instead.
func (*CreateMarketingURLRequest) Descriptor() ([]byte, []int) {
	return file_api_pdd_ddx_proto_rawDescGZIP(), []int{8}
}

func (x *CreateMarketingURLRequest) GetPIdList() string {
	if x != nil && x.PIdList != nil {
		return *x.PIdList
	}
	return ""
}

func (x *CreateMarketingURLRequest) GetCustomParameters() string {
	if x != nil && x.CustomParameters != nil {
		return *x.CustomParameters
	}
	return ""
}

func (x *CreateMarketingURLRequest) GetGenerateQqApp() bool {
	if x != nil && x.GenerateQqApp != nil {
		return *x.GenerateQqApp
	}
	return false
}

func (x *CreateMarketingURLRequest) GetGenerateSchemaUrl() bool {
	if x != nil && x.GenerateSchemaUrl != nil {
		return *x.GenerateSchemaUrl
	}
	return false
}

func (x *CreateMarketingURLRequest) GetGenerateShortUrl() bool {
	if x != nil && x.GenerateShortUrl != nil {
		return *x.GenerateShortUrl
	}
	return false
}

func (x *CreateMarketingURLRequest) GetGenerateWeApp() bool {
	if x != nil && x.GenerateWeApp != nil {
		return *x.GenerateWeApp
	}
	return false
}

func (x *CreateMarketingURLRequest) GetChannelType() int32 {
	if x != nil {
		return x.ChannelType
	}
	return 0
}

func (x *CreateMarketingURLRequest) GetScratchCardAmount() uint64 {
	if x != nil && x.ScratchCardAmount != nil {
		return *x.ScratchCardAmount
	}
	return 0
}

func (x *CreateMarketingURLRequest) GetPddAuthId() string {
	if x != nil && x.PddAuthId != nil {
		return *x.PddAuthId
	}
	return ""
}

type CreateMarketingURLResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code int32             `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Msg  string            `protobuf:"bytes,2,opt,name=msg,proto3" json:"msg,omitempty"`
	Data *MarketingURLData `protobuf:"bytes,3,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *CreateMarketingURLResponse) Reset() {
	*x = CreateMarketingURLResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_pdd_ddx_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateMarketingURLResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateMarketingURLResponse) ProtoMessage() {}

func (x *CreateMarketingURLResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_pdd_ddx_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateMarketingURLResponse.ProtoReflect.Descriptor instead.
func (*CreateMarketingURLResponse) Descriptor() ([]byte, []int) {
	return file_api_pdd_ddx_proto_rawDescGZIP(), []int{9}
}

func (x *CreateMarketingURLResponse) GetCode() int32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *CreateMarketingURLResponse) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

func (x *CreateMarketingURLResponse) GetData() *MarketingURLData {
	if x != nil {
		return x.Data
	}
	return nil
}

// API: http://api.tbk.dingdanxia.com/pdd/url_convert
type ItemInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	GoodsName            string `protobuf:"bytes,1,opt,name=goods_name,json=goodsName,proto3" json:"goods_name,omitempty"`                                       // 商品名称
	GoodsId              uint64 `protobuf:"varint,2,opt,name=goods_id,json=goodsId,proto3" json:"goods_id,omitempty"`                                            // 商品ID
	MinNormalPrice       uint64 `protobuf:"varint,3,opt,name=min_normal_price,json=minNormalPrice,proto3" json:"min_normal_price,omitempty"`                     // 最小单买价格（单位为分）
	MinGroupPrice        uint64 `protobuf:"varint,4,opt,name=min_group_price,json=minGroupPrice,proto3" json:"min_group_price,omitempty"`                        // 最小拼团价（单位为分）
	PromotionRate        uint64 `protobuf:"varint,5,opt,name=promotion_rate,json=promotionRate,proto3" json:"promotion_rate,omitempty"`                          // 佣金比例，千分比
	PredictPromotionRate uint64 `protobuf:"varint,6,opt,name=predict_promotion_rate,json=predictPromotionRate,proto3" json:"predict_promotion_rate,omitempty"`   // 比价行为预判定佣金，需要用户备案
	CouponMinOrderAmount uint64 `protobuf:"varint,7,opt,name=coupon_min_order_amount,json=couponMinOrderAmount,proto3" json:"coupon_min_order_amount,omitempty"` // 优惠券门槛价格，单位为分
	CouponDiscount       uint64 `protobuf:"varint,8,opt,name=coupon_discount,json=couponDiscount,proto3" json:"coupon_discount,omitempty"`                       // 优惠券面额，单位为分
	CouponTotalQuantity  uint64 `protobuf:"varint,9,opt,name=coupon_total_quantity,json=couponTotalQuantity,proto3" json:"coupon_total_quantity,omitempty"`      // 优惠券总数量
	CouponRemainQuantity uint64 `protobuf:"varint,10,opt,name=coupon_remain_quantity,json=couponRemainQuantity,proto3" json:"coupon_remain_quantity,omitempty"`  // 优惠券剩余数量
	CouponStartTime      uint64 `protobuf:"varint,11,opt,name=coupon_start_time,json=couponStartTime,proto3" json:"coupon_start_time,omitempty"`                 // 优惠券生效时间，UNIX时间戳
	CouponEndTime        uint64 `protobuf:"varint,12,opt,name=coupon_end_time,json=couponEndTime,proto3" json:"coupon_end_time,omitempty"`                       // 优惠券失效时间，UNIX时间戳
	HasCoupon            bool   `protobuf:"varint,13,opt,name=has_coupon,json=hasCoupon,proto3" json:"has_coupon,omitempty"`                                     // 商品是否有优惠券 true-有，false-没有
}

func (x *ItemInfo) Reset() {
	*x = ItemInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_pdd_ddx_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ItemInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ItemInfo) ProtoMessage() {}

func (x *ItemInfo) ProtoReflect() protoreflect.Message {
	mi := &file_api_pdd_ddx_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ItemInfo.ProtoReflect.Descriptor instead.
func (*ItemInfo) Descriptor() ([]byte, []int) {
	return file_api_pdd_ddx_proto_rawDescGZIP(), []int{10}
}

func (x *ItemInfo) GetGoodsName() string {
	if x != nil {
		return x.GoodsName
	}
	return ""
}

func (x *ItemInfo) GetGoodsId() uint64 {
	if x != nil {
		return x.GoodsId
	}
	return 0
}

func (x *ItemInfo) GetMinNormalPrice() uint64 {
	if x != nil {
		return x.MinNormalPrice
	}
	return 0
}

func (x *ItemInfo) GetMinGroupPrice() uint64 {
	if x != nil {
		return x.MinGroupPrice
	}
	return 0
}

func (x *ItemInfo) GetPromotionRate() uint64 {
	if x != nil {
		return x.PromotionRate
	}
	return 0
}

func (x *ItemInfo) GetPredictPromotionRate() uint64 {
	if x != nil {
		return x.PredictPromotionRate
	}
	return 0
}

func (x *ItemInfo) GetCouponMinOrderAmount() uint64 {
	if x != nil {
		return x.CouponMinOrderAmount
	}
	return 0
}

func (x *ItemInfo) GetCouponDiscount() uint64 {
	if x != nil {
		return x.CouponDiscount
	}
	return 0
}

func (x *ItemInfo) GetCouponTotalQuantity() uint64 {
	if x != nil {
		return x.CouponTotalQuantity
	}
	return 0
}

func (x *ItemInfo) GetCouponRemainQuantity() uint64 {
	if x != nil {
		return x.CouponRemainQuantity
	}
	return 0
}

func (x *ItemInfo) GetCouponStartTime() uint64 {
	if x != nil {
		return x.CouponStartTime
	}
	return 0
}

func (x *ItemInfo) GetCouponEndTime() uint64 {
	if x != nil {
		return x.CouponEndTime
	}
	return 0
}

func (x *ItemInfo) GetHasCoupon() bool {
	if x != nil {
		return x.HasCoupon
	}
	return false
}

type URLConvertData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MobileShortUrl           string    `protobuf:"bytes,1,opt,name=mobile_short_url,json=mobileShortUrl,proto3" json:"mobile_short_url,omitempty"`                                   // 推广短链接（可唤起拼多多app）
	MobileUrl                string    `protobuf:"bytes,2,opt,name=mobile_url,json=mobileUrl,proto3" json:"mobile_url,omitempty"`                                                    // 推广长链接（唤起拼多多app）
	MultiGroupMobileShortUrl string    `protobuf:"bytes,3,opt,name=multi_group_mobile_short_url,json=multiGroupMobileShortUrl,proto3" json:"multi_group_mobile_short_url,omitempty"` // 推广短链接（唤起拼多多app）
	MultiGroupMobileUrl      string    `protobuf:"bytes,4,opt,name=multi_group_mobile_url,json=multiGroupMobileUrl,proto3" json:"multi_group_mobile_url,omitempty"`                  // 推广长链接（可唤起拼多多app）
	MultiGroupShortUrl       string    `protobuf:"bytes,5,opt,name=multi_group_short_url,json=multiGroupShortUrl,proto3" json:"multi_group_short_url,omitempty"`                     // 双人团推广短链接
	MultiGroupUrl            string    `protobuf:"bytes,6,opt,name=multi_group_url,json=multiGroupUrl,proto3" json:"multi_group_url,omitempty"`                                      // 双人团推广长链接
	SchemaUrl                string    `protobuf:"bytes,7,opt,name=schema_url,json=schemaUrl,proto3" json:"schema_url,omitempty"`                                                    // schema的链接
	ShortUrl                 string    `protobuf:"bytes,8,opt,name=short_url,json=shortUrl,proto3" json:"short_url,omitempty"`                                                       // 单人团推广短链接
	Url                      string    `protobuf:"bytes,9,opt,name=url,proto3" json:"url,omitempty"`                                                                                 // 单人团推广长链接
	GoodsId                  string    `protobuf:"bytes,10,opt,name=goods_id,json=goodsId,proto3" json:"goods_id,omitempty"`                                                         // 商品ID
	ItemInfo                 *ItemInfo `protobuf:"bytes,11,opt,name=itemInfo,proto3,oneof" json:"itemInfo,omitempty"`                                                                // 商品基本信息 itemInfo＝true 才会出
}

func (x *URLConvertData) Reset() {
	*x = URLConvertData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_pdd_ddx_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *URLConvertData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*URLConvertData) ProtoMessage() {}

func (x *URLConvertData) ProtoReflect() protoreflect.Message {
	mi := &file_api_pdd_ddx_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use URLConvertData.ProtoReflect.Descriptor instead.
func (*URLConvertData) Descriptor() ([]byte, []int) {
	return file_api_pdd_ddx_proto_rawDescGZIP(), []int{11}
}

func (x *URLConvertData) GetMobileShortUrl() string {
	if x != nil {
		return x.MobileShortUrl
	}
	return ""
}

func (x *URLConvertData) GetMobileUrl() string {
	if x != nil {
		return x.MobileUrl
	}
	return ""
}

func (x *URLConvertData) GetMultiGroupMobileShortUrl() string {
	if x != nil {
		return x.MultiGroupMobileShortUrl
	}
	return ""
}

func (x *URLConvertData) GetMultiGroupMobileUrl() string {
	if x != nil {
		return x.MultiGroupMobileUrl
	}
	return ""
}

func (x *URLConvertData) GetMultiGroupShortUrl() string {
	if x != nil {
		return x.MultiGroupShortUrl
	}
	return ""
}

func (x *URLConvertData) GetMultiGroupUrl() string {
	if x != nil {
		return x.MultiGroupUrl
	}
	return ""
}

func (x *URLConvertData) GetSchemaUrl() string {
	if x != nil {
		return x.SchemaUrl
	}
	return ""
}

func (x *URLConvertData) GetShortUrl() string {
	if x != nil {
		return x.ShortUrl
	}
	return ""
}

func (x *URLConvertData) GetUrl() string {
	if x != nil {
		return x.Url
	}
	return ""
}

func (x *URLConvertData) GetGoodsId() string {
	if x != nil {
		return x.GoodsId
	}
	return ""
}

func (x *URLConvertData) GetItemInfo() *ItemInfo {
	if x != nil {
		return x.ItemInfo
	}
	return nil
}

type URLConvertRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SourceUrl         string  `protobuf:"bytes,1,opt,name=source_url,json=sourceUrl,proto3" json:"source_url,omitempty"`                                  // 需转链/解析ID的链
	Pid               *string `protobuf:"bytes,2,opt,name=pid,proto3,oneof" json:"pid,omitempty"`                                                         // 推广位ID; 和custom_parameters至少传入1个;不传时server侧会使用默认PID
	CustomParameters  *string `protobuf:"bytes,3,opt,name=custom_parameters,json=customParameters,proto3,oneof" json:"custom_parameters,omitempty"`       // 自定义参数，为链接打上自定义标签；自定义参数最长限制64个字节；格式为： {"uid":"11111","sid":"22222"} ，其中 uid 用户唯一标识，可自行加密后传入，每个用户仅且对应一个标识，必填； sid 上下文信息标识，例如sessionId等，非必填。该json字符串中也可以加入其他自定义的key
	GenerateSchemaUrl *bool   `protobuf:"varint,4,opt,name=generate_schema_url,json=generateSchemaUrl,proto3,oneof" json:"generate_schema_url,omitempty"` // 是否返回 schema URL
	ItemInfo          *bool   `protobuf:"varint,5,opt,name=itemInfo,proto3,oneof" json:"itemInfo,omitempty"`                                              // 是否返回商品信息 包含商品标题、ID、价格、佣金、优惠券信息
}

func (x *URLConvertRequest) Reset() {
	*x = URLConvertRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_pdd_ddx_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *URLConvertRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*URLConvertRequest) ProtoMessage() {}

func (x *URLConvertRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_pdd_ddx_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use URLConvertRequest.ProtoReflect.Descriptor instead.
func (*URLConvertRequest) Descriptor() ([]byte, []int) {
	return file_api_pdd_ddx_proto_rawDescGZIP(), []int{12}
}

func (x *URLConvertRequest) GetSourceUrl() string {
	if x != nil {
		return x.SourceUrl
	}
	return ""
}

func (x *URLConvertRequest) GetPid() string {
	if x != nil && x.Pid != nil {
		return *x.Pid
	}
	return ""
}

func (x *URLConvertRequest) GetCustomParameters() string {
	if x != nil && x.CustomParameters != nil {
		return *x.CustomParameters
	}
	return ""
}

func (x *URLConvertRequest) GetGenerateSchemaUrl() bool {
	if x != nil && x.GenerateSchemaUrl != nil {
		return *x.GenerateSchemaUrl
	}
	return false
}

func (x *URLConvertRequest) GetItemInfo() bool {
	if x != nil && x.ItemInfo != nil {
		return *x.ItemInfo
	}
	return false
}

type URLConvertResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code int32           `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Msg  string          `protobuf:"bytes,2,opt,name=msg,proto3" json:"msg,omitempty"`
	Data *URLConvertData `protobuf:"bytes,3,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *URLConvertResponse) Reset() {
	*x = URLConvertResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_pdd_ddx_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *URLConvertResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*URLConvertResponse) ProtoMessage() {}

func (x *URLConvertResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_pdd_ddx_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use URLConvertResponse.ProtoReflect.Descriptor instead.
func (*URLConvertResponse) Descriptor() ([]byte, []int) {
	return file_api_pdd_ddx_proto_rawDescGZIP(), []int{13}
}

func (x *URLConvertResponse) GetCode() int32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *URLConvertResponse) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

func (x *URLConvertResponse) GetData() *URLConvertData {
	if x != nil {
		return x.Data
	}
	return nil
}

// API: http://api.tbk.dingdanxia.com/pdd/goods_search
type SearchData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	HasMallCoupon               bool     `protobuf:"varint,1,opt,name=has_mall_coupon,json=hasMallCoupon,proto3" json:"has_mall_coupon,omitempty"`                                               // 是否有店铺券
	MallCouponId                uint64   `protobuf:"varint,2,opt,name=mall_coupon_id,json=mallCouponId,proto3" json:"mall_coupon_id,omitempty"`                                                  // 店铺券id
	MallCouponDiscountPct       int32    `protobuf:"varint,3,opt,name=mall_coupon_discount_pct,json=mallCouponDiscountPct,proto3" json:"mall_coupon_discount_pct,omitempty"`                     // 店铺券折扣
	MallCouponMinOrderAmount    int32    `protobuf:"varint,4,opt,name=mall_coupon_min_order_amount,json=mallCouponMinOrderAmount,proto3" json:"mall_coupon_min_order_amount,omitempty"`          // 最小使用金额
	MallCouponMaxDiscountAmount int32    `protobuf:"varint,5,opt,name=mall_coupon_max_discount_amount,json=mallCouponMaxDiscountAmount,proto3" json:"mall_coupon_max_discount_amount,omitempty"` // 最大使用金额
	MallCouponTotalQuantity     uint64   `protobuf:"varint,6,opt,name=mall_coupon_total_quantity,json=mallCouponTotalQuantity,proto3" json:"mall_coupon_total_quantity,omitempty"`               // 店铺券总量
	MallCouponRemainQuantity    uint64   `protobuf:"varint,7,opt,name=mall_coupon_remain_quantity,json=mallCouponRemainQuantity,proto3" json:"mall_coupon_remain_quantity,omitempty"`            // 店铺券余量
	MallCouponStartTime         uint64   `protobuf:"varint,8,opt,name=mall_coupon_start_time,json=mallCouponStartTime,proto3" json:"mall_coupon_start_time,omitempty"`                           // 店铺券开始使用时间
	MallCouponEndTime           uint64   `protobuf:"varint,9,opt,name=mall_coupon_end_time,json=mallCouponEndTime,proto3" json:"mall_coupon_end_time,omitempty"`                                 // 店铺券结束使用时间
	CreateAt                    uint64   `protobuf:"varint,10,opt,name=create_at,json=createAt,proto3" json:"create_at,omitempty"`                                                               // 创建时间（unix时间戳）
	GoodsId                     uint64   `protobuf:"varint,11,opt,name=goods_id,json=goodsId,proto3" json:"goods_id,omitempty"`                                                                  // 商品id
	GoodsName                   string   `protobuf:"bytes,12,opt,name=goods_name,json=goodsName,proto3" json:"goods_name,omitempty"`                                                             // 商品名称
	GoodsDesc                   string   `protobuf:"bytes,13,opt,name=goods_desc,json=goodsDesc,proto3" json:"goods_desc,omitempty"`                                                             // 商品描述
	GoodsThumbnailUrl           string   `protobuf:"bytes,14,opt,name=goods_thumbnail_url,json=goodsThumbnailUrl,proto3" json:"goods_thumbnail_url,omitempty"`                                   // 商品缩略图
	GoodsImageUrl               string   `protobuf:"bytes,15,opt,name=goods_image_url,json=goodsImageUrl,proto3" json:"goods_image_url,omitempty"`                                               // 商品主图
	MinGroupPrice               uint64   `protobuf:"varint,16,opt,name=min_group_price,json=minGroupPrice,proto3" json:"min_group_price,omitempty"`                                              // 最小拼团价（单位为分）
	MinNormalPrice              uint64   `protobuf:"varint,17,opt,name=min_normal_price,json=minNormalPrice,proto3" json:"min_normal_price,omitempty"`                                           // 最小单买价格（单位为分）
	MallName                    string   `protobuf:"bytes,18,opt,name=mall_name,json=mallName,proto3" json:"mall_name,omitempty"`                                                                // 店铺名字
	MerchantType                int32    `protobuf:"varint,19,opt,name=merchant_type,json=merchantType,proto3" json:"merchant_type,omitempty"`                                                   // 店铺类型，1-个人，2-企业，3-旗舰店，4-专卖店，5-专营店，6-普通店（未传为全部)
	CategoryId                  uint64   `protobuf:"varint,20,opt,name=category_id,json=categoryId,proto3" json:"category_id,omitempty"`                                                         // 商品类目ID，使用pdd.goods.cats.get接口获取
	CategoryName                uint64   `protobuf:"varint,21,opt,name=category_name,json=categoryName,proto3" json:"category_name,omitempty"`                                                   // 商品类目名
	OptId                       uint64   `protobuf:"varint,22,opt,name=opt_id,json=optId,proto3" json:"opt_id,omitempty"`                                                                        // 商品标签ID
	OptName                     string   `protobuf:"bytes,23,opt,name=opt_name,json=optName,proto3" json:"opt_name,omitempty"`                                                                   // 商品标签名
	OptIds                      []uint64 `protobuf:"varint,24,rep,packed,name=opt_ids,json=optIds,proto3" json:"opt_ids,omitempty"`                                                              // 商品标签ID list
	CatIds                      []uint64 `protobuf:"varint,25,rep,packed,name=cat_ids,json=catIds,proto3" json:"cat_ids,omitempty"`                                                              // 商品类目ID list
	MallCps                     int32    `protobuf:"varint,26,opt,name=mall_cps,json=mallCps,proto3" json:"mall_cps,omitempty"`                                                                  // 该商品所在店铺是否参与全店推广，0：否，1：是
	HasCoupon                   bool     `protobuf:"varint,27,opt,name=has_coupon,json=hasCoupon,proto3" json:"has_coupon,omitempty"`                                                            // 商品是否有优惠券 true-有，false-没有
	CouponMinOrderAmount        uint64   `protobuf:"varint,28,opt,name=coupon_min_order_amount,json=couponMinOrderAmount,proto3" json:"coupon_min_order_amount,omitempty"`                       // 优惠券门槛价格，单位为分
	CouponDiscount              uint64   `protobuf:"varint,29,opt,name=coupon_discount,json=couponDiscount,proto3" json:"coupon_discount,omitempty"`                                             // 优惠券面额，单位为分
	CouponTotalQuantity         uint64   `protobuf:"varint,30,opt,name=coupon_total_quantity,json=couponTotalQuantity,proto3" json:"coupon_total_quantity,omitempty"`                            // 优惠券总数量
	CouponRemainQuantity        uint64   `protobuf:"varint,31,opt,name=coupon_remain_quantity,json=couponRemainQuantity,proto3" json:"coupon_remain_quantity,omitempty"`                         // 优惠券剩余数量
	CouponStartTime             uint64   `protobuf:"varint,32,opt,name=coupon_start_time,json=couponStartTime,proto3" json:"coupon_start_time,omitempty"`                                        // 优惠券生效时间，UNIX时间戳
	CouponEndTime               uint64   `protobuf:"varint,33,opt,name=coupon_end_time,json=couponEndTime,proto3" json:"coupon_end_time,omitempty"`                                              // 优惠券失效时间，UNIX时间戳
	PromotionRate               uint64   `protobuf:"varint,34,opt,name=promotion_rate,json=promotionRate,proto3" json:"promotion_rate,omitempty"`                                                // 佣金比例，千分比
	SalesTip                    string   `protobuf:"bytes,35,opt,name=sales_tip,json=salesTip,proto3" json:"sales_tip,omitempty"`                                                                // 已售卖件数
	ActivityType                int32    `protobuf:"varint,36,opt,name=activity_type,json=activityType,proto3" json:"activity_type,omitempty"`                                                   // 活动类型，0-无活动;1-秒杀;3-限量折扣;12-限时折扣;13-大促活动;14-名品折扣;15-品牌清仓;16-食品超市;17-一元幸运团;18-爱逛街;19-时尚穿搭;20-男人帮;21-9块9;22-竞价活动;23-榜单活动;24-幸运半价购;25-定金预售;26-幸运人气购;27-特色主题活动;28-断码清仓;29-一元话费;30-电器城;31-每日好店;32-品牌卡;101-大促搜索池;102-大促品类分会场;
	CltCpnBatchSn               string   `protobuf:"bytes,37,opt,name=clt_cpn_batch_sn,json=cltCpnBatchSn,proto3" json:"clt_cpn_batch_sn,omitempty"`                                             // 店铺收藏券id
	CltCpnStartTime             uint64   `protobuf:"varint,38,opt,name=clt_cpn_start_time,json=cltCpnStartTime,proto3" json:"clt_cpn_start_time,omitempty"`                                      // 店铺收藏券起始时间
	CltCpnEndTime               uint64   `protobuf:"varint,39,opt,name=clt_cpn_end_time,json=cltCpnEndTime,proto3" json:"clt_cpn_end_time,omitempty"`                                            // 店铺收藏券截止时间
	CltCpnQuantity              uint64   `protobuf:"varint,40,opt,name=clt_cpn_quantity,json=cltCpnQuantity,proto3" json:"clt_cpn_quantity,omitempty"`                                           // 店铺收藏券总量
	CltCpnRemainQuantity        uint64   `protobuf:"varint,41,opt,name=clt_cpn_remain_quantity,json=cltCpnRemainQuantity,proto3" json:"clt_cpn_remain_quantity,omitempty"`                       // 店铺收藏券剩余量
	CltCpnDiscount              uint64   `protobuf:"varint,42,opt,name=clt_cpn_discount,json=cltCpnDiscount,proto3" json:"clt_cpn_discount,omitempty"`                                           // 店铺收藏券面额，单位为分
	CltCpnMinAmt                uint64   `protobuf:"varint,43,opt,name=clt_cpn_min_amt,json=cltCpnMinAmt,proto3" json:"clt_cpn_min_amt,omitempty"`                                               // 店铺收藏券使用门槛价格，单位为分
	DescTxt                     string   `protobuf:"bytes,44,opt,name=desc_txt,json=descTxt,proto3" json:"desc_txt,omitempty"`                                                                   // 描述分
	ServTxt                     string   `protobuf:"bytes,45,opt,name=serv_txt,json=servTxt,proto3" json:"serv_txt,omitempty"`                                                                   // 服务分
	LgstTxt                     string   `protobuf:"bytes,46,opt,name=lgst_txt,json=lgstTxt,proto3" json:"lgst_txt,omitempty"`                                                                   // 物流分
	PlanType                    int32    `protobuf:"varint,47,opt,name=plan_type,json=planType,proto3" json:"plan_type,omitempty"`                                                               // 推广计划类型 3:定向 4:招商
	ZsDuoId                     uint64   `protobuf:"varint,48,opt,name=zs_duo_id,json=zsDuoId,proto3" json:"zs_duo_id,omitempty"`                                                                // 招商团长id
	OnlySceneAuth               bool     `protobuf:"varint,49,opt,name=only_scene_auth,json=onlySceneAuth,proto3" json:"only_scene_auth,omitempty"`                                              // 快手专享
	MallId                      uint64   `protobuf:"varint,50,opt,name=mall_id,json=mallId,proto3" json:"mall_id,omitempty"`                                                                     // 店铺ID
	PredictPromotionRate        uint64   `protobuf:"varint,51,opt,name=predict_promotion_rate,json=predictPromotionRate,proto3" json:"predict_promotion_rate,omitempty"`                         // 比价行为预判定佣金，需要用户备案
	GoodsSign                   string   `protobuf:"bytes,52,opt,name=goods_sign,json=goodsSign,proto3" json:"goods_sign,omitempty"`                                                             // goods_sign
	TotalResults                int32    `protobuf:"varint,53,opt,name=total_results,json=totalResults,proto3" json:"total_results,omitempty"`                                                   // 返回商品总数
}

func (x *SearchData) Reset() {
	*x = SearchData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_pdd_ddx_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SearchData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SearchData) ProtoMessage() {}

func (x *SearchData) ProtoReflect() protoreflect.Message {
	mi := &file_api_pdd_ddx_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SearchData.ProtoReflect.Descriptor instead.
func (*SearchData) Descriptor() ([]byte, []int) {
	return file_api_pdd_ddx_proto_rawDescGZIP(), []int{14}
}

func (x *SearchData) GetHasMallCoupon() bool {
	if x != nil {
		return x.HasMallCoupon
	}
	return false
}

func (x *SearchData) GetMallCouponId() uint64 {
	if x != nil {
		return x.MallCouponId
	}
	return 0
}

func (x *SearchData) GetMallCouponDiscountPct() int32 {
	if x != nil {
		return x.MallCouponDiscountPct
	}
	return 0
}

func (x *SearchData) GetMallCouponMinOrderAmount() int32 {
	if x != nil {
		return x.MallCouponMinOrderAmount
	}
	return 0
}

func (x *SearchData) GetMallCouponMaxDiscountAmount() int32 {
	if x != nil {
		return x.MallCouponMaxDiscountAmount
	}
	return 0
}

func (x *SearchData) GetMallCouponTotalQuantity() uint64 {
	if x != nil {
		return x.MallCouponTotalQuantity
	}
	return 0
}

func (x *SearchData) GetMallCouponRemainQuantity() uint64 {
	if x != nil {
		return x.MallCouponRemainQuantity
	}
	return 0
}

func (x *SearchData) GetMallCouponStartTime() uint64 {
	if x != nil {
		return x.MallCouponStartTime
	}
	return 0
}

func (x *SearchData) GetMallCouponEndTime() uint64 {
	if x != nil {
		return x.MallCouponEndTime
	}
	return 0
}

func (x *SearchData) GetCreateAt() uint64 {
	if x != nil {
		return x.CreateAt
	}
	return 0
}

func (x *SearchData) GetGoodsId() uint64 {
	if x != nil {
		return x.GoodsId
	}
	return 0
}

func (x *SearchData) GetGoodsName() string {
	if x != nil {
		return x.GoodsName
	}
	return ""
}

func (x *SearchData) GetGoodsDesc() string {
	if x != nil {
		return x.GoodsDesc
	}
	return ""
}

func (x *SearchData) GetGoodsThumbnailUrl() string {
	if x != nil {
		return x.GoodsThumbnailUrl
	}
	return ""
}

func (x *SearchData) GetGoodsImageUrl() string {
	if x != nil {
		return x.GoodsImageUrl
	}
	return ""
}

func (x *SearchData) GetMinGroupPrice() uint64 {
	if x != nil {
		return x.MinGroupPrice
	}
	return 0
}

func (x *SearchData) GetMinNormalPrice() uint64 {
	if x != nil {
		return x.MinNormalPrice
	}
	return 0
}

func (x *SearchData) GetMallName() string {
	if x != nil {
		return x.MallName
	}
	return ""
}

func (x *SearchData) GetMerchantType() int32 {
	if x != nil {
		return x.MerchantType
	}
	return 0
}

func (x *SearchData) GetCategoryId() uint64 {
	if x != nil {
		return x.CategoryId
	}
	return 0
}

func (x *SearchData) GetCategoryName() uint64 {
	if x != nil {
		return x.CategoryName
	}
	return 0
}

func (x *SearchData) GetOptId() uint64 {
	if x != nil {
		return x.OptId
	}
	return 0
}

func (x *SearchData) GetOptName() string {
	if x != nil {
		return x.OptName
	}
	return ""
}

func (x *SearchData) GetOptIds() []uint64 {
	if x != nil {
		return x.OptIds
	}
	return nil
}

func (x *SearchData) GetCatIds() []uint64 {
	if x != nil {
		return x.CatIds
	}
	return nil
}

func (x *SearchData) GetMallCps() int32 {
	if x != nil {
		return x.MallCps
	}
	return 0
}

func (x *SearchData) GetHasCoupon() bool {
	if x != nil {
		return x.HasCoupon
	}
	return false
}

func (x *SearchData) GetCouponMinOrderAmount() uint64 {
	if x != nil {
		return x.CouponMinOrderAmount
	}
	return 0
}

func (x *SearchData) GetCouponDiscount() uint64 {
	if x != nil {
		return x.CouponDiscount
	}
	return 0
}

func (x *SearchData) GetCouponTotalQuantity() uint64 {
	if x != nil {
		return x.CouponTotalQuantity
	}
	return 0
}

func (x *SearchData) GetCouponRemainQuantity() uint64 {
	if x != nil {
		return x.CouponRemainQuantity
	}
	return 0
}

func (x *SearchData) GetCouponStartTime() uint64 {
	if x != nil {
		return x.CouponStartTime
	}
	return 0
}

func (x *SearchData) GetCouponEndTime() uint64 {
	if x != nil {
		return x.CouponEndTime
	}
	return 0
}

func (x *SearchData) GetPromotionRate() uint64 {
	if x != nil {
		return x.PromotionRate
	}
	return 0
}

func (x *SearchData) GetSalesTip() string {
	if x != nil {
		return x.SalesTip
	}
	return ""
}

func (x *SearchData) GetActivityType() int32 {
	if x != nil {
		return x.ActivityType
	}
	return 0
}

func (x *SearchData) GetCltCpnBatchSn() string {
	if x != nil {
		return x.CltCpnBatchSn
	}
	return ""
}

func (x *SearchData) GetCltCpnStartTime() uint64 {
	if x != nil {
		return x.CltCpnStartTime
	}
	return 0
}

func (x *SearchData) GetCltCpnEndTime() uint64 {
	if x != nil {
		return x.CltCpnEndTime
	}
	return 0
}

func (x *SearchData) GetCltCpnQuantity() uint64 {
	if x != nil {
		return x.CltCpnQuantity
	}
	return 0
}

func (x *SearchData) GetCltCpnRemainQuantity() uint64 {
	if x != nil {
		return x.CltCpnRemainQuantity
	}
	return 0
}

func (x *SearchData) GetCltCpnDiscount() uint64 {
	if x != nil {
		return x.CltCpnDiscount
	}
	return 0
}

func (x *SearchData) GetCltCpnMinAmt() uint64 {
	if x != nil {
		return x.CltCpnMinAmt
	}
	return 0
}

func (x *SearchData) GetDescTxt() string {
	if x != nil {
		return x.DescTxt
	}
	return ""
}

func (x *SearchData) GetServTxt() string {
	if x != nil {
		return x.ServTxt
	}
	return ""
}

func (x *SearchData) GetLgstTxt() string {
	if x != nil {
		return x.LgstTxt
	}
	return ""
}

func (x *SearchData) GetPlanType() int32 {
	if x != nil {
		return x.PlanType
	}
	return 0
}

func (x *SearchData) GetZsDuoId() uint64 {
	if x != nil {
		return x.ZsDuoId
	}
	return 0
}

func (x *SearchData) GetOnlySceneAuth() bool {
	if x != nil {
		return x.OnlySceneAuth
	}
	return false
}

func (x *SearchData) GetMallId() uint64 {
	if x != nil {
		return x.MallId
	}
	return 0
}

func (x *SearchData) GetPredictPromotionRate() uint64 {
	if x != nil {
		return x.PredictPromotionRate
	}
	return 0
}

func (x *SearchData) GetGoodsSign() string {
	if x != nil {
		return x.GoodsSign
	}
	return ""
}

func (x *SearchData) GetTotalResults() int32 {
	if x != nil {
		return x.TotalResults
	}
	return 0
}

type SearchRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Keyword          *string  `protobuf:"bytes,1,opt,name=keyword,proto3,oneof" json:"keyword,omitempty"`                                                // 商品关键词，与opt_id字段选填一个或全部填写。可支持goods_id、拼多多链接
	OptId            *uint64  `protobuf:"varint,2,opt,name=opt_id,json=optId,proto3,oneof" json:"opt_id,omitempty"`                                      // 商品标签类目ID 详见：https://www.dingdanxia.com/doc/212/86
	Page             *int32   `protobuf:"varint,3,opt,name=page,proto3,oneof" json:"page,omitempty"`                                                     // 默认值1，商品分页数
	PageSize         *int32   `protobuf:"varint,4,opt,name=page_size,json=pageSize,proto3,oneof" json:"page_size,omitempty"`                             // 默认100，每页商品数量
	SortType         *int32   `protobuf:"varint,5,opt,name=sort_type,json=sortType,proto3,oneof" json:"sort_type,omitempty"`                             // 排序方式:0-综合排序;1-按佣金比率升序;2-按佣金比例降序;3-按价格升序;4-按价格降序;5-按销量升序;6-按销量降序;7-优惠券金额排序升序;8-优惠券金额排序降序;9-券后价升序排序;10-券后价降序排序;11-按照加入多多进宝时间升序;12-按照加入多多进宝时间降序;13-按佣金金额升序排序;14-按佣金金额降序排序;15-店铺描述评分升序;16-店铺描述评分降序;17-店铺物流评分升序;18-店铺物流评分降序;19-店铺服务评分升序;20-店铺服务评分降序;27-描述评分击败同类店铺百分比升序，28-描述评分击败同类店铺百分比降序，29-物流评分击败同类店铺百分比升序，30-物流评分击败同类店铺百分比降序，31-服务评分击败同类店铺百分比升序，32-服务评分击败同类店铺百分比降序
	WithCoupon       *bool    `protobuf:"varint,6,opt,name=with_coupon,json=withCoupon,proto3,oneof" json:"with_coupon,omitempty"`                       // 是否只返回优惠券的商品，false返回所有商品，true只返回有优惠券的商品
	RangeList        *string  `protobuf:"bytes,7,opt,name=range_list,json=rangeList,proto3,oneof" json:"range_list,omitempty"`                           // 筛选范围列表 样例：[{"range_id":0,"range_from":1,"range_to":1500},{"range_id":1,"range_from":1,"range_to":1500}] range_id枚举及描述： 0，最小成团价 1，券后价 2，佣金比例 3，优惠券价格 4，广告创建时间 5，销量 6，佣金金额 7，店铺描述分 8，店铺物流分 9，店铺服务分 10， 店铺描述分击败同行业百分比 11， 店铺物流分击败同行业百分比 12，店铺服务分击败同行业百分比 13，商品分 17 ，优惠券/最小团购价 18，过去两小时pv 19，过去两小时销量
	CatId            *uint64  `protobuf:"varint,8,opt,name=cat_id,json=catId,proto3,oneof" json:"cat_id,omitempty"`                                      // 商品类目ID 详见：https://www.dingdanxia.com/doc/85/86
	MerchantType     *int32   `protobuf:"varint,9,opt,name=merchant_type,json=merchantType,proto3,oneof" json:"merchant_type,omitempty"`                 // 店铺类型，1-个人，2-企业，3-旗舰店，4-专卖店，5-专营店，6-普通店（未传为全部)
	Pid              *string  `protobuf:"bytes,10,opt,name=pid,proto3,oneof" json:"pid,omitempty"`                                                       // 推广位ID; 和custom_parameters至少传入1个;不传时server侧会使用默认PID
	CustomParameters *string  `protobuf:"bytes,11,opt,name=custom_parameters,json=customParameters,proto3,oneof" json:"custom_parameters,omitempty"`     // 自定义参数，为链接打上自定义标签；自定义参数最长限制64个字节；格式为： {"uid":"11111","sid":"22222"} ，其中 uid 用户唯一标识，可自行加密后传入，每个用户仅且对应一个标识，必填； sid 上下文信息标识，例如sessionId等，非必填。该json字符串中也可以加入其他自定义的key
	MerchantTypeList []int32  `protobuf:"varint,12,rep,packed,name=merchant_type_list,json=merchantTypeList,proto3" json:"merchant_type_list,omitempty"` // 店铺类型数组
	IsBrandGoods     *bool    `protobuf:"varint,13,opt,name=is_brand_goods,json=isBrandGoods,proto3,oneof" json:"is_brand_goods,omitempty"`              // 是否为品牌商品
	ActivityTags     []int32  `protobuf:"varint,14,rep,packed,name=activity_tags,json=activityTags,proto3" json:"activity_tags,omitempty"`               // 商品活动标记数组，例：[4,7]，4-秒杀 7-百亿补贴 10143-每日必推等
	BlockCatPackages []int32  `protobuf:"varint,15,rep,packed,name=block_cat_packages,json=blockCatPackages,proto3" json:"block_cat_packages,omitempty"` // 屏蔽商品类目：1-拼多多小程序屏蔽类目;2-虚拟类目;3-医疗器械;4-处方药;5-非处方药
	GoodsSignList    []string `protobuf:"bytes,16,rep,name=goods_sign_list,json=goodsSignList,proto3" json:"goods_sign_list,omitempty"`                  // goodsSign列表，支持通过goodsSign查询商品
	PddAuthId        *string  `protobuf:"bytes,17,opt,name=pdd_auth_id,json=pddAuthId,proto3,oneof" json:"pdd_auth_id,omitempty"`                        // 切换授权参数
}

func (x *SearchRequest) Reset() {
	*x = SearchRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_pdd_ddx_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SearchRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SearchRequest) ProtoMessage() {}

func (x *SearchRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_pdd_ddx_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SearchRequest.ProtoReflect.Descriptor instead.
func (*SearchRequest) Descriptor() ([]byte, []int) {
	return file_api_pdd_ddx_proto_rawDescGZIP(), []int{15}
}

func (x *SearchRequest) GetKeyword() string {
	if x != nil && x.Keyword != nil {
		return *x.Keyword
	}
	return ""
}

func (x *SearchRequest) GetOptId() uint64 {
	if x != nil && x.OptId != nil {
		return *x.OptId
	}
	return 0
}

func (x *SearchRequest) GetPage() int32 {
	if x != nil && x.Page != nil {
		return *x.Page
	}
	return 0
}

func (x *SearchRequest) GetPageSize() int32 {
	if x != nil && x.PageSize != nil {
		return *x.PageSize
	}
	return 0
}

func (x *SearchRequest) GetSortType() int32 {
	if x != nil && x.SortType != nil {
		return *x.SortType
	}
	return 0
}

func (x *SearchRequest) GetWithCoupon() bool {
	if x != nil && x.WithCoupon != nil {
		return *x.WithCoupon
	}
	return false
}

func (x *SearchRequest) GetRangeList() string {
	if x != nil && x.RangeList != nil {
		return *x.RangeList
	}
	return ""
}

func (x *SearchRequest) GetCatId() uint64 {
	if x != nil && x.CatId != nil {
		return *x.CatId
	}
	return 0
}

func (x *SearchRequest) GetMerchantType() int32 {
	if x != nil && x.MerchantType != nil {
		return *x.MerchantType
	}
	return 0
}

func (x *SearchRequest) GetPid() string {
	if x != nil && x.Pid != nil {
		return *x.Pid
	}
	return ""
}

func (x *SearchRequest) GetCustomParameters() string {
	if x != nil && x.CustomParameters != nil {
		return *x.CustomParameters
	}
	return ""
}

func (x *SearchRequest) GetMerchantTypeList() []int32 {
	if x != nil {
		return x.MerchantTypeList
	}
	return nil
}

func (x *SearchRequest) GetIsBrandGoods() bool {
	if x != nil && x.IsBrandGoods != nil {
		return *x.IsBrandGoods
	}
	return false
}

func (x *SearchRequest) GetActivityTags() []int32 {
	if x != nil {
		return x.ActivityTags
	}
	return nil
}

func (x *SearchRequest) GetBlockCatPackages() []int32 {
	if x != nil {
		return x.BlockCatPackages
	}
	return nil
}

func (x *SearchRequest) GetGoodsSignList() []string {
	if x != nil {
		return x.GoodsSignList
	}
	return nil
}

func (x *SearchRequest) GetPddAuthId() string {
	if x != nil && x.PddAuthId != nil {
		return *x.PddAuthId
	}
	return ""
}

type SearchResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code int32       `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Msg  string      `protobuf:"bytes,2,opt,name=msg,proto3" json:"msg,omitempty"`
	Data *SearchData `protobuf:"bytes,3,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *SearchResponse) Reset() {
	*x = SearchResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_pdd_ddx_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SearchResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SearchResponse) ProtoMessage() {}

func (x *SearchResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_pdd_ddx_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SearchResponse.ProtoReflect.Descriptor instead.
func (*SearchResponse) Descriptor() ([]byte, []int) {
	return file_api_pdd_ddx_proto_rawDescGZIP(), []int{16}
}

func (x *SearchResponse) GetCode() int32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *SearchResponse) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

func (x *SearchResponse) GetData() *SearchData {
	if x != nil {
		return x.Data
	}
	return nil
}

// PromotedData promotion by goods sign
type PromotedData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	WeAppWebViewShortUrl    string     `protobuf:"bytes,1,opt,name=we_app_web_view_short_url,json=weAppWebViewShortUrl,proto3" json:"we_app_web_view_short_url,omitempty"`          // 唤起微信app推广短链接
	WeAppWebViewUrl         string     `protobuf:"bytes,2,opt,name=we_app_web_view_url,json=weAppWebViewUrl,proto3" json:"we_app_web_view_url,omitempty"`                           // 唤起微信app推广链接
	MobileShortUrl          string     `protobuf:"bytes,3,opt,name=mobile_short_url,json=mobileShortUrl,proto3" json:"mobile_short_url,omitempty"`                                  // 唤醒拼多多app的推广短链接
	MobileUrl               string     `protobuf:"bytes,4,opt,name=mobile_url,json=mobileUrl,proto3" json:"mobile_url,omitempty"`                                                   // 唤醒拼多多app的推广长链接
	ShortUrl                string     `protobuf:"bytes,5,opt,name=short_url,json=shortUrl,proto3" json:"short_url,omitempty"`                                                      // 推广短链接
	Url                     string     `protobuf:"bytes,6,opt,name=url,proto3" json:"url,omitempty"`                                                                                // 推广长链接
	WeiboAppWebViewShortUrl string     `protobuf:"bytes,7,opt,name=weibo_app_web_view_short_url,json=weiboAppWebViewShortUrl,proto3" json:"weibo_app_web_view_short_url,omitempty"` // 唤起微博app推广短链接
	WeiboAppWebViewUrl      string     `protobuf:"bytes,8,opt,name=weibo_app_web_view_url,json=weiboAppWebViewUrl,proto3" json:"weibo_app_web_view_url,omitempty"`                  // 唤起微博app推广链接
	SchemaUrl               string     `protobuf:"bytes,9,opt,name=schema_url,json=schemaUrl,proto3" json:"schema_url,omitempty"`                                                   // schema的链接
	WeAppInfo               *WeAppInfo `protobuf:"bytes,10,opt,name=we_app_info,json=weAppInfo,proto3" json:"we_app_info,omitempty"`                                                // 小程序信息
	ItemInfo                *ItemInfo  `protobuf:"bytes,11,opt,name=itemInfo,proto3" json:"itemInfo,omitempty"`                                                                     // 商品基本信息 itemInfo＝true 才会出
}

func (x *PromotedData) Reset() {
	*x = PromotedData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_pdd_ddx_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PromotedData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PromotedData) ProtoMessage() {}

func (x *PromotedData) ProtoReflect() protoreflect.Message {
	mi := &file_api_pdd_ddx_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PromotedData.ProtoReflect.Descriptor instead.
func (*PromotedData) Descriptor() ([]byte, []int) {
	return file_api_pdd_ddx_proto_rawDescGZIP(), []int{17}
}

func (x *PromotedData) GetWeAppWebViewShortUrl() string {
	if x != nil {
		return x.WeAppWebViewShortUrl
	}
	return ""
}

func (x *PromotedData) GetWeAppWebViewUrl() string {
	if x != nil {
		return x.WeAppWebViewUrl
	}
	return ""
}

func (x *PromotedData) GetMobileShortUrl() string {
	if x != nil {
		return x.MobileShortUrl
	}
	return ""
}

func (x *PromotedData) GetMobileUrl() string {
	if x != nil {
		return x.MobileUrl
	}
	return ""
}

func (x *PromotedData) GetShortUrl() string {
	if x != nil {
		return x.ShortUrl
	}
	return ""
}

func (x *PromotedData) GetUrl() string {
	if x != nil {
		return x.Url
	}
	return ""
}

func (x *PromotedData) GetWeiboAppWebViewShortUrl() string {
	if x != nil {
		return x.WeiboAppWebViewShortUrl
	}
	return ""
}

func (x *PromotedData) GetWeiboAppWebViewUrl() string {
	if x != nil {
		return x.WeiboAppWebViewUrl
	}
	return ""
}

func (x *PromotedData) GetSchemaUrl() string {
	if x != nil {
		return x.SchemaUrl
	}
	return ""
}

func (x *PromotedData) GetWeAppInfo() *WeAppInfo {
	if x != nil {
		return x.WeAppInfo
	}
	return nil
}

func (x *PromotedData) GetItemInfo() *ItemInfo {
	if x != nil {
		return x.ItemInfo
	}
	return nil
}

type PromotionRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	GoodsSign                 string  `protobuf:"bytes,1,opt,name=goods_sign,json=goodsSign,proto3" json:"goods_sign,omitempty"`                                                             // 商品goodsSign，推荐使用，可走最优计划
	Pid                       *string `protobuf:"bytes,2,opt,name=pid,proto3,oneof" json:"pid,omitempty"`                                                                                    // 推广位ID; 和custom_parameters至少传入1个;不传时server侧会使用默认PID
	CustomParameters          *string `protobuf:"bytes,3,opt,name=custom_parameters,json=customParameters,proto3,oneof" json:"custom_parameters,omitempty"`                                  // 自定义参数，为链接打上自定义标签；自定义参数最长限制64个字节；格式为： {"uid":"11111","sid":"22222"} ，其中 uid 用户唯一标识，可自行加密后传入，每个用户仅且对应一个标识，必填； sid 上下文信息标识，例如sessionId等，非必填。该json字符串中也可以加入其他自定义的key
	CashGiftId                *uint64 `protobuf:"varint,4,opt,name=cash_gift_id,json=cashGiftId,proto3,oneof" json:"cash_gift_id,omitempty"`                                                 // 多多礼金ID
	CashGiftName              *string `protobuf:"bytes,5,opt,name=cash_gift_name,json=cashGiftName,proto3,oneof" json:"cash_gift_name,omitempty"`                                            // 自定义礼金标题，用于向用户展示渠道专属福利，不超过12个字
	ItemInfo                  *bool   `protobuf:"varint,6,opt,name=itemInfo,proto3,oneof" json:"itemInfo,omitempty"`                                                                         // 是否返回商品信息 包含商品标题、ID、价格、佣金、优惠券信息
	GenerateAuthorityUrl      *bool   `protobuf:"varint,7,opt,name=generate_authority_url,json=generateAuthorityUrl,proto3,oneof" json:"generate_authority_url,omitempty"`                   // 是否生成带授权的单品链接。如果未授权，则会走授权流程
	GenerateShortUrl          *bool   `protobuf:"varint,8,opt,name=generate_short_url,json=generateShortUrl,proto3,oneof" json:"generate_short_url,omitempty"`                               // 是否生成短链接
	MultiGroup                *bool   `protobuf:"varint,9,opt,name=multi_group,json=multiGroup,proto3,oneof" json:"multi_group,omitempty"`                                                   // true--生成多人团推广链接 false--生成单人团推广链接（默认false）1、单人团推广链接：用户访问单人团推广链接，可直接购买商品无需拼团。2、多人团推广链接：用户访问双人团推广链接开团，若用户分享给他
	GenerateWeappWebview      *bool   `protobuf:"varint,10,opt,name=generate_weapp_webview,json=generateWeappWebview,proto3,oneof" json:"generate_weapp_webview,omitempty"`                  // 是否生成唤起微信客户端链接，true-是，false-否，默认false
	ZsDuoId                   *string `protobuf:"bytes,11,opt,name=zs_duo_id,json=zsDuoId,proto3,oneof" json:"zs_duo_id,omitempty"`                                                          // 招商多多客ID
	GenerateWeApp             *bool   `protobuf:"varint,12,opt,name=generate_we_app,json=generateWeApp,proto3,oneof" json:"generate_we_app,omitempty"`                                       // 是否生成小程序推广
	GenerateWeiboappWebview   *bool   `protobuf:"varint,13,opt,name=generate_weiboapp_webview,json=generateWeiboappWebview,proto3,oneof" json:"generate_weiboapp_webview,omitempty"`         // 是否生成微博推广
	GenerateMallCollectCoupon *bool   `protobuf:"varint,14,opt,name=generate_mall_collect_coupon,json=generateMallCollectCoupon,proto3,oneof" json:"generate_mall_collect_coupon,omitempty"` // 是否生成店铺收藏券推广链接
	GenerateQqApp             *bool   `protobuf:"varint,15,opt,name=generate_qq_app,json=generateQqApp,proto3,oneof" json:"generate_qq_app,omitempty"`                                       // 是否生成qq小程序
	GenerateSchemaUrl         *bool   `protobuf:"varint,16,opt,name=generate_schema_url,json=generateSchemaUrl,proto3,oneof" json:"generate_schema_url,omitempty"`                           // 是否返回 schema URL
	SearchId                  *string `protobuf:"bytes,17,opt,name=search_id,json=searchId,proto3,oneof" json:"search_id,omitempty"`                                                         // 搜索id，建议填写，提高收益,通过搜索接口获取
	ForceDuoId                *bool   `protobuf:"varint,18,opt,name=force_duo_id,json=forceDuoId,proto3,oneof" json:"force_duo_id,omitempty"`                                                // 是否使用多多客专属推广计划
	GoodsIdList               *string `protobuf:"bytes,19,opt,name=goods_id_list,json=goodsIdList,proto3,oneof" json:"goods_id_list,omitempty"`                                              // 商品ID，不建议使用，请优先使用goods_sign
	PddAuthId                 *string `protobuf:"bytes,20,opt,name=pdd_auth_id,json=pddAuthId,proto3,oneof" json:"pdd_auth_id,omitempty"`                                                    // 切换授权参数
}

func (x *PromotionRequest) Reset() {
	*x = PromotionRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_pdd_ddx_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PromotionRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PromotionRequest) ProtoMessage() {}

func (x *PromotionRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_pdd_ddx_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PromotionRequest.ProtoReflect.Descriptor instead.
func (*PromotionRequest) Descriptor() ([]byte, []int) {
	return file_api_pdd_ddx_proto_rawDescGZIP(), []int{18}
}

func (x *PromotionRequest) GetGoodsSign() string {
	if x != nil {
		return x.GoodsSign
	}
	return ""
}

func (x *PromotionRequest) GetPid() string {
	if x != nil && x.Pid != nil {
		return *x.Pid
	}
	return ""
}

func (x *PromotionRequest) GetCustomParameters() string {
	if x != nil && x.CustomParameters != nil {
		return *x.CustomParameters
	}
	return ""
}

func (x *PromotionRequest) GetCashGiftId() uint64 {
	if x != nil && x.CashGiftId != nil {
		return *x.CashGiftId
	}
	return 0
}

func (x *PromotionRequest) GetCashGiftName() string {
	if x != nil && x.CashGiftName != nil {
		return *x.CashGiftName
	}
	return ""
}

func (x *PromotionRequest) GetItemInfo() bool {
	if x != nil && x.ItemInfo != nil {
		return *x.ItemInfo
	}
	return false
}

func (x *PromotionRequest) GetGenerateAuthorityUrl() bool {
	if x != nil && x.GenerateAuthorityUrl != nil {
		return *x.GenerateAuthorityUrl
	}
	return false
}

func (x *PromotionRequest) GetGenerateShortUrl() bool {
	if x != nil && x.GenerateShortUrl != nil {
		return *x.GenerateShortUrl
	}
	return false
}

func (x *PromotionRequest) GetMultiGroup() bool {
	if x != nil && x.MultiGroup != nil {
		return *x.MultiGroup
	}
	return false
}

func (x *PromotionRequest) GetGenerateWeappWebview() bool {
	if x != nil && x.GenerateWeappWebview != nil {
		return *x.GenerateWeappWebview
	}
	return false
}

func (x *PromotionRequest) GetZsDuoId() string {
	if x != nil && x.ZsDuoId != nil {
		return *x.ZsDuoId
	}
	return ""
}

func (x *PromotionRequest) GetGenerateWeApp() bool {
	if x != nil && x.GenerateWeApp != nil {
		return *x.GenerateWeApp
	}
	return false
}

func (x *PromotionRequest) GetGenerateWeiboappWebview() bool {
	if x != nil && x.GenerateWeiboappWebview != nil {
		return *x.GenerateWeiboappWebview
	}
	return false
}

func (x *PromotionRequest) GetGenerateMallCollectCoupon() bool {
	if x != nil && x.GenerateMallCollectCoupon != nil {
		return *x.GenerateMallCollectCoupon
	}
	return false
}

func (x *PromotionRequest) GetGenerateQqApp() bool {
	if x != nil && x.GenerateQqApp != nil {
		return *x.GenerateQqApp
	}
	return false
}

func (x *PromotionRequest) GetGenerateSchemaUrl() bool {
	if x != nil && x.GenerateSchemaUrl != nil {
		return *x.GenerateSchemaUrl
	}
	return false
}

func (x *PromotionRequest) GetSearchId() string {
	if x != nil && x.SearchId != nil {
		return *x.SearchId
	}
	return ""
}

func (x *PromotionRequest) GetForceDuoId() bool {
	if x != nil && x.ForceDuoId != nil {
		return *x.ForceDuoId
	}
	return false
}

func (x *PromotionRequest) GetGoodsIdList() string {
	if x != nil && x.GoodsIdList != nil {
		return *x.GoodsIdList
	}
	return ""
}

func (x *PromotionRequest) GetPddAuthId() string {
	if x != nil && x.PddAuthId != nil {
		return *x.PddAuthId
	}
	return ""
}

type PromotionResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code int32         `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Msg  string        `protobuf:"bytes,2,opt,name=msg,proto3" json:"msg,omitempty"`
	Data *PromotedData `protobuf:"bytes,3,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *PromotionResponse) Reset() {
	*x = PromotionResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_pdd_ddx_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PromotionResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PromotionResponse) ProtoMessage() {}

func (x *PromotionResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_pdd_ddx_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PromotionResponse.ProtoReflect.Descriptor instead.
func (*PromotionResponse) Descriptor() ([]byte, []int) {
	return file_api_pdd_ddx_proto_rawDescGZIP(), []int{19}
}

func (x *PromotionResponse) GetCode() int32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *PromotionResponse) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

func (x *PromotionResponse) GetData() *PromotedData {
	if x != nil {
		return x.Data
	}
	return nil
}

var File_api_pdd_ddx_proto protoreflect.FileDescriptor

var file_api_pdd_ddx_proto_rawDesc = []byte{
	0x0a, 0x11, 0x61, 0x70, 0x69, 0x2e, 0x70, 0x64, 0x64, 0x2e, 0x64, 0x64, 0x78, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x12, 0x06, 0x70, 0x64, 0x64, 0x78, 0x70, 0x62, 0x22, 0x28, 0x0a, 0x12, 0x41,
	0x75, 0x74, 0x68, 0x6f, 0x72, 0x69, 0x74, 0x79, 0x51, 0x75, 0x65, 0x72, 0x79, 0x44, 0x61, 0x74,
	0x61, 0x12, 0x12, 0x0a, 0x04, 0x62, 0x69, 0x6e, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x04, 0x62, 0x69, 0x6e, 0x64, 0x22, 0xb3, 0x01, 0x0a, 0x15, 0x41, 0x75, 0x74, 0x68, 0x6f, 0x72,
	0x69, 0x74, 0x79, 0x51, 0x75, 0x65, 0x72, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x15, 0x0a, 0x03, 0x70, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x03,
	0x70, 0x69, 0x64, 0x88, 0x01, 0x01, 0x12, 0x30, 0x0a, 0x11, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d,
	0x5f, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x65, 0x74, 0x65, 0x72, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x48, 0x01, 0x52, 0x10, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x50, 0x61, 0x72, 0x61, 0x6d,
	0x65, 0x74, 0x65, 0x72, 0x73, 0x88, 0x01, 0x01, 0x12, 0x23, 0x0a, 0x0b, 0x70, 0x64, 0x64, 0x5f,
	0x61, 0x75, 0x74, 0x68, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x48, 0x02, 0x52,
	0x09, 0x70, 0x64, 0x64, 0x41, 0x75, 0x74, 0x68, 0x49, 0x64, 0x88, 0x01, 0x01, 0x42, 0x06, 0x0a,
	0x04, 0x5f, 0x70, 0x69, 0x64, 0x42, 0x14, 0x0a, 0x12, 0x5f, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d,
	0x5f, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x65, 0x74, 0x65, 0x72, 0x73, 0x42, 0x0e, 0x0a, 0x0c, 0x5f,
	0x70, 0x64, 0x64, 0x5f, 0x61, 0x75, 0x74, 0x68, 0x5f, 0x69, 0x64, 0x22, 0x6e, 0x0a, 0x16, 0x41,
	0x75, 0x74, 0x68, 0x6f, 0x72, 0x69, 0x74, 0x79, 0x51, 0x75, 0x65, 0x72, 0x79, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x6d, 0x73, 0x67,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6d, 0x73, 0x67, 0x12, 0x2e, 0x0a, 0x04, 0x64,
	0x61, 0x74, 0x61, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x70, 0x64, 0x64, 0x78,
	0x70, 0x62, 0x2e, 0x41, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x69, 0x74, 0x79, 0x51, 0x75, 0x65, 0x72,
	0x79, 0x44, 0x61, 0x74, 0x61, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x22, 0x30, 0x0a, 0x08, 0x52,
	0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x64, 0x65, 0x73, 0x63, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x64, 0x65, 0x73, 0x63, 0x12, 0x10, 0x0a, 0x03, 0x75,
	0x72, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x75, 0x72, 0x6c, 0x22, 0xfc, 0x01,
	0x0a, 0x09, 0x51, 0x51, 0x41, 0x70, 0x70, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x15, 0x0a, 0x06, 0x61,
	0x70, 0x70, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x61, 0x70, 0x70,
	0x49, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x62, 0x61, 0x6e, 0x6e, 0x65, 0x72, 0x5f, 0x75, 0x72, 0x6c,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x62, 0x61, 0x6e, 0x6e, 0x65, 0x72, 0x55, 0x72,
	0x6c, 0x12, 0x12, 0x0a, 0x04, 0x64, 0x65, 0x73, 0x63, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x04, 0x64, 0x65, 0x73, 0x63, 0x12, 0x1b, 0x0a, 0x09, 0x70, 0x61, 0x67, 0x65, 0x5f, 0x70, 0x61,
	0x74, 0x68, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x70, 0x61, 0x67, 0x65, 0x50, 0x61,
	0x74, 0x68, 0x12, 0x25, 0x0a, 0x0f, 0x71, 0x71, 0x5f, 0x61, 0x70, 0x70, 0x5f, 0x69, 0x63, 0x6f,
	0x6e, 0x5f, 0x75, 0x72, 0x6c, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x71, 0x71, 0x41,
	0x70, 0x70, 0x49, 0x63, 0x6f, 0x6e, 0x55, 0x72, 0x6c, 0x12, 0x2e, 0x0a, 0x13, 0x73, 0x6f, 0x75,
	0x72, 0x63, 0x65, 0x5f, 0x64, 0x69, 0x73, 0x70, 0x6c, 0x61, 0x79, 0x5f, 0x6e, 0x61, 0x6d, 0x65,
	0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x11, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x44, 0x69,
	0x73, 0x70, 0x6c, 0x61, 0x79, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x69, 0x74,
	0x6c, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x12,
	0x1b, 0x0a, 0x09, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x08, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x08, 0x75, 0x73, 0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x22, 0xfc, 0x01, 0x0a,
	0x09, 0x57, 0x65, 0x41, 0x70, 0x70, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x15, 0x0a, 0x06, 0x61, 0x70,
	0x70, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x61, 0x70, 0x70, 0x49,
	0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x62, 0x61, 0x6e, 0x6e, 0x65, 0x72, 0x5f, 0x75, 0x72, 0x6c, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x62, 0x61, 0x6e, 0x6e, 0x65, 0x72, 0x55, 0x72, 0x6c,
	0x12, 0x12, 0x0a, 0x04, 0x64, 0x65, 0x73, 0x63, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04,
	0x64, 0x65, 0x73, 0x63, 0x12, 0x1b, 0x0a, 0x09, 0x70, 0x61, 0x67, 0x65, 0x5f, 0x70, 0x61, 0x74,
	0x68, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x70, 0x61, 0x67, 0x65, 0x50, 0x61, 0x74,
	0x68, 0x12, 0x25, 0x0a, 0x0f, 0x77, 0x65, 0x5f, 0x61, 0x70, 0x70, 0x5f, 0x69, 0x63, 0x6f, 0x6e,
	0x5f, 0x75, 0x72, 0x6c, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x77, 0x65, 0x41, 0x70,
	0x70, 0x49, 0x63, 0x6f, 0x6e, 0x55, 0x72, 0x6c, 0x12, 0x2e, 0x0a, 0x13, 0x73, 0x6f, 0x75, 0x72,
	0x63, 0x65, 0x5f, 0x64, 0x69, 0x73, 0x70, 0x6c, 0x61, 0x79, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18,
	0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x11, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x44, 0x69, 0x73,
	0x70, 0x6c, 0x61, 0x79, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x69, 0x74, 0x6c,
	0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x12, 0x1b,
	0x0a, 0x09, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x08, 0x75, 0x73, 0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x22, 0xd6, 0x03, 0x0a, 0x07,
	0x55, 0x52, 0x4c, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x28, 0x0a, 0x10, 0x6d, 0x6f, 0x62, 0x69, 0x6c,
	0x65, 0x5f, 0x73, 0x68, 0x6f, 0x72, 0x74, 0x5f, 0x75, 0x72, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0e, 0x6d, 0x6f, 0x62, 0x69, 0x6c, 0x65, 0x53, 0x68, 0x6f, 0x72, 0x74, 0x55, 0x72,
	0x6c, 0x12, 0x1d, 0x0a, 0x0a, 0x6d, 0x6f, 0x62, 0x69, 0x6c, 0x65, 0x5f, 0x75, 0x72, 0x6c, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x6d, 0x6f, 0x62, 0x69, 0x6c, 0x65, 0x55, 0x72, 0x6c,
	0x12, 0x3e, 0x0a, 0x1c, 0x6d, 0x75, 0x6c, 0x74, 0x69, 0x5f, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x5f,
	0x6d, 0x6f, 0x62, 0x69, 0x6c, 0x65, 0x5f, 0x73, 0x68, 0x6f, 0x72, 0x74, 0x5f, 0x75, 0x72, 0x6c,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x18, 0x6d, 0x75, 0x6c, 0x74, 0x69, 0x47, 0x72, 0x6f,
	0x75, 0x70, 0x4d, 0x6f, 0x62, 0x69, 0x6c, 0x65, 0x53, 0x68, 0x6f, 0x72, 0x74, 0x55, 0x72, 0x6c,
	0x12, 0x33, 0x0a, 0x16, 0x6d, 0x75, 0x6c, 0x74, 0x69, 0x5f, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x5f,
	0x6d, 0x6f, 0x62, 0x69, 0x6c, 0x65, 0x5f, 0x75, 0x72, 0x6c, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x13, 0x6d, 0x75, 0x6c, 0x74, 0x69, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x4d, 0x6f, 0x62, 0x69,
	0x6c, 0x65, 0x55, 0x72, 0x6c, 0x12, 0x31, 0x0a, 0x15, 0x6d, 0x75, 0x6c, 0x74, 0x69, 0x5f, 0x67,
	0x72, 0x6f, 0x75, 0x70, 0x5f, 0x73, 0x68, 0x6f, 0x72, 0x74, 0x5f, 0x75, 0x72, 0x6c, 0x18, 0x05,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x12, 0x6d, 0x75, 0x6c, 0x74, 0x69, 0x47, 0x72, 0x6f, 0x75, 0x70,
	0x53, 0x68, 0x6f, 0x72, 0x74, 0x55, 0x72, 0x6c, 0x12, 0x26, 0x0a, 0x0f, 0x6d, 0x75, 0x6c, 0x74,
	0x69, 0x5f, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x5f, 0x75, 0x72, 0x6c, 0x18, 0x06, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0d, 0x6d, 0x75, 0x6c, 0x74, 0x69, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x55, 0x72, 0x6c,
	0x12, 0x31, 0x0a, 0x0b, 0x71, 0x71, 0x5f, 0x61, 0x70, 0x70, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x18,
	0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x70, 0x64, 0x64, 0x78, 0x70, 0x62, 0x2e, 0x51,
	0x51, 0x41, 0x70, 0x70, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x09, 0x71, 0x71, 0x41, 0x70, 0x70, 0x49,
	0x6e, 0x66, 0x6f, 0x12, 0x1d, 0x0a, 0x0a, 0x73, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x5f, 0x75, 0x72,
	0x6c, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x73, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x55,
	0x72, 0x6c, 0x12, 0x1b, 0x0a, 0x09, 0x73, 0x68, 0x6f, 0x72, 0x74, 0x5f, 0x75, 0x72, 0x6c, 0x18,
	0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x73, 0x68, 0x6f, 0x72, 0x74, 0x55, 0x72, 0x6c, 0x12,
	0x10, 0x0a, 0x03, 0x75, 0x72, 0x6c, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x75, 0x72,
	0x6c, 0x12, 0x31, 0x0a, 0x0b, 0x77, 0x65, 0x5f, 0x61, 0x70, 0x70, 0x5f, 0x69, 0x6e, 0x66, 0x6f,
	0x18, 0x0b, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x70, 0x64, 0x64, 0x78, 0x70, 0x62, 0x2e,
	0x57, 0x65, 0x41, 0x70, 0x70, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x09, 0x77, 0x65, 0x41, 0x70, 0x70,
	0x49, 0x6e, 0x66, 0x6f, 0x22, 0x75, 0x0a, 0x10, 0x4d, 0x61, 0x72, 0x6b, 0x65, 0x74, 0x69, 0x6e,
	0x67, 0x55, 0x52, 0x4c, 0x44, 0x61, 0x74, 0x61, 0x12, 0x35, 0x0a, 0x0d, 0x72, 0x65, 0x73, 0x6f,
	0x75, 0x72, 0x63, 0x65, 0x5f, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x10, 0x2e, 0x70, 0x64, 0x64, 0x78, 0x70, 0x62, 0x2e, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63,
	0x65, 0x52, 0x0c, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x12,
	0x2a, 0x0a, 0x08, 0x75, 0x72, 0x6c, 0x5f, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x02, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x0f, 0x2e, 0x70, 0x64, 0x64, 0x78, 0x70, 0x62, 0x2e, 0x55, 0x52, 0x4c, 0x49, 0x6e,
	0x66, 0x6f, 0x52, 0x07, 0x75, 0x72, 0x6c, 0x4c, 0x69, 0x73, 0x74, 0x22, 0xd0, 0x04, 0x0a, 0x19,
	0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x4d, 0x61, 0x72, 0x6b, 0x65, 0x74, 0x69, 0x6e, 0x67, 0x55,
	0x52, 0x4c, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1f, 0x0a, 0x09, 0x70, 0x5f, 0x69,
	0x64, 0x5f, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x07,
	0x70, 0x49, 0x64, 0x4c, 0x69, 0x73, 0x74, 0x88, 0x01, 0x01, 0x12, 0x30, 0x0a, 0x11, 0x63, 0x75,
	0x73, 0x74, 0x6f, 0x6d, 0x5f, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x65, 0x74, 0x65, 0x72, 0x73, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x48, 0x01, 0x52, 0x10, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x50,
	0x61, 0x72, 0x61, 0x6d, 0x65, 0x74, 0x65, 0x72, 0x73, 0x88, 0x01, 0x01, 0x12, 0x2b, 0x0a, 0x0f,
	0x67, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x74, 0x65, 0x5f, 0x71, 0x71, 0x5f, 0x61, 0x70, 0x70, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x08, 0x48, 0x02, 0x52, 0x0d, 0x67, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x74,
	0x65, 0x51, 0x71, 0x41, 0x70, 0x70, 0x88, 0x01, 0x01, 0x12, 0x33, 0x0a, 0x13, 0x67, 0x65, 0x6e,
	0x65, 0x72, 0x61, 0x74, 0x65, 0x5f, 0x73, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x5f, 0x75, 0x72, 0x6c,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x08, 0x48, 0x03, 0x52, 0x11, 0x67, 0x65, 0x6e, 0x65, 0x72, 0x61,
	0x74, 0x65, 0x53, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x55, 0x72, 0x6c, 0x88, 0x01, 0x01, 0x12, 0x31,
	0x0a, 0x12, 0x67, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x74, 0x65, 0x5f, 0x73, 0x68, 0x6f, 0x72, 0x74,
	0x5f, 0x75, 0x72, 0x6c, 0x18, 0x05, 0x20, 0x01, 0x28, 0x08, 0x48, 0x04, 0x52, 0x10, 0x67, 0x65,
	0x6e, 0x65, 0x72, 0x61, 0x74, 0x65, 0x53, 0x68, 0x6f, 0x72, 0x74, 0x55, 0x72, 0x6c, 0x88, 0x01,
	0x01, 0x12, 0x2b, 0x0a, 0x0f, 0x67, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x74, 0x65, 0x5f, 0x77, 0x65,
	0x5f, 0x61, 0x70, 0x70, 0x18, 0x06, 0x20, 0x01, 0x28, 0x08, 0x48, 0x05, 0x52, 0x0d, 0x67, 0x65,
	0x6e, 0x65, 0x72, 0x61, 0x74, 0x65, 0x57, 0x65, 0x41, 0x70, 0x70, 0x88, 0x01, 0x01, 0x12, 0x21,
	0x0a, 0x0c, 0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x07,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x0b, 0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x54, 0x79, 0x70,
	0x65, 0x12, 0x33, 0x0a, 0x13, 0x73, 0x63, 0x72, 0x61, 0x74, 0x63, 0x68, 0x5f, 0x63, 0x61, 0x72,
	0x64, 0x5f, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x08, 0x20, 0x01, 0x28, 0x04, 0x48, 0x06,
	0x52, 0x11, 0x73, 0x63, 0x72, 0x61, 0x74, 0x63, 0x68, 0x43, 0x61, 0x72, 0x64, 0x41, 0x6d, 0x6f,
	0x75, 0x6e, 0x74, 0x88, 0x01, 0x01, 0x12, 0x23, 0x0a, 0x0b, 0x70, 0x64, 0x64, 0x5f, 0x61, 0x75,
	0x74, 0x68, 0x5f, 0x69, 0x64, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x48, 0x07, 0x52, 0x09, 0x70,
	0x64, 0x64, 0x41, 0x75, 0x74, 0x68, 0x49, 0x64, 0x88, 0x01, 0x01, 0x42, 0x0c, 0x0a, 0x0a, 0x5f,
	0x70, 0x5f, 0x69, 0x64, 0x5f, 0x6c, 0x69, 0x73, 0x74, 0x42, 0x14, 0x0a, 0x12, 0x5f, 0x63, 0x75,
	0x73, 0x74, 0x6f, 0x6d, 0x5f, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x65, 0x74, 0x65, 0x72, 0x73, 0x42,
	0x12, 0x0a, 0x10, 0x5f, 0x67, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x74, 0x65, 0x5f, 0x71, 0x71, 0x5f,
	0x61, 0x70, 0x70, 0x42, 0x16, 0x0a, 0x14, 0x5f, 0x67, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x74, 0x65,
	0x5f, 0x73, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x5f, 0x75, 0x72, 0x6c, 0x42, 0x15, 0x0a, 0x13, 0x5f,
	0x67, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x74, 0x65, 0x5f, 0x73, 0x68, 0x6f, 0x72, 0x74, 0x5f, 0x75,
	0x72, 0x6c, 0x42, 0x12, 0x0a, 0x10, 0x5f, 0x67, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x74, 0x65, 0x5f,
	0x77, 0x65, 0x5f, 0x61, 0x70, 0x70, 0x42, 0x16, 0x0a, 0x14, 0x5f, 0x73, 0x63, 0x72, 0x61, 0x74,
	0x63, 0x68, 0x5f, 0x63, 0x61, 0x72, 0x64, 0x5f, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x42, 0x0e,
	0x0a, 0x0c, 0x5f, 0x70, 0x64, 0x64, 0x5f, 0x61, 0x75, 0x74, 0x68, 0x5f, 0x69, 0x64, 0x22, 0x70,
	0x0a, 0x1a, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x4d, 0x61, 0x72, 0x6b, 0x65, 0x74, 0x69, 0x6e,
	0x67, 0x55, 0x52, 0x4c, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x12, 0x0a, 0x04,
	0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65,
	0x12, 0x10, 0x0a, 0x03, 0x6d, 0x73, 0x67, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6d,
	0x73, 0x67, 0x12, 0x2c, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x18, 0x2e, 0x70, 0x64, 0x64, 0x78, 0x70, 0x62, 0x2e, 0x4d, 0x61, 0x72, 0x6b, 0x65, 0x74,
	0x69, 0x6e, 0x67, 0x55, 0x52, 0x4c, 0x44, 0x61, 0x74, 0x61, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61,
	0x22, 0xb0, 0x04, 0x0a, 0x08, 0x49, 0x74, 0x65, 0x6d, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x1d, 0x0a,
	0x0a, 0x67, 0x6f, 0x6f, 0x64, 0x73, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x09, 0x67, 0x6f, 0x6f, 0x64, 0x73, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x19, 0x0a, 0x08,
	0x67, 0x6f, 0x6f, 0x64, 0x73, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x07,
	0x67, 0x6f, 0x6f, 0x64, 0x73, 0x49, 0x64, 0x12, 0x28, 0x0a, 0x10, 0x6d, 0x69, 0x6e, 0x5f, 0x6e,
	0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x5f, 0x70, 0x72, 0x69, 0x63, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x04, 0x52, 0x0e, 0x6d, 0x69, 0x6e, 0x4e, 0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x50, 0x72, 0x69, 0x63,
	0x65, 0x12, 0x26, 0x0a, 0x0f, 0x6d, 0x69, 0x6e, 0x5f, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x5f, 0x70,
	0x72, 0x69, 0x63, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0d, 0x6d, 0x69, 0x6e, 0x47,
	0x72, 0x6f, 0x75, 0x70, 0x50, 0x72, 0x69, 0x63, 0x65, 0x12, 0x25, 0x0a, 0x0e, 0x70, 0x72, 0x6f,
	0x6d, 0x6f, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x72, 0x61, 0x74, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28,
	0x04, 0x52, 0x0d, 0x70, 0x72, 0x6f, 0x6d, 0x6f, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x61, 0x74, 0x65,
	0x12, 0x34, 0x0a, 0x16, 0x70, 0x72, 0x65, 0x64, 0x69, 0x63, 0x74, 0x5f, 0x70, 0x72, 0x6f, 0x6d,
	0x6f, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x72, 0x61, 0x74, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x04,
	0x52, 0x14, 0x70, 0x72, 0x65, 0x64, 0x69, 0x63, 0x74, 0x50, 0x72, 0x6f, 0x6d, 0x6f, 0x74, 0x69,
	0x6f, 0x6e, 0x52, 0x61, 0x74, 0x65, 0x12, 0x35, 0x0a, 0x17, 0x63, 0x6f, 0x75, 0x70, 0x6f, 0x6e,
	0x5f, 0x6d, 0x69, 0x6e, 0x5f, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x5f, 0x61, 0x6d, 0x6f, 0x75, 0x6e,
	0x74, 0x18, 0x07, 0x20, 0x01, 0x28, 0x04, 0x52, 0x14, 0x63, 0x6f, 0x75, 0x70, 0x6f, 0x6e, 0x4d,
	0x69, 0x6e, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x27, 0x0a,
	0x0f, 0x63, 0x6f, 0x75, 0x70, 0x6f, 0x6e, 0x5f, 0x64, 0x69, 0x73, 0x63, 0x6f, 0x75, 0x6e, 0x74,
	0x18, 0x08, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0e, 0x63, 0x6f, 0x75, 0x70, 0x6f, 0x6e, 0x44, 0x69,
	0x73, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x32, 0x0a, 0x15, 0x63, 0x6f, 0x75, 0x70, 0x6f, 0x6e,
	0x5f, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x5f, 0x71, 0x75, 0x61, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x18,
	0x09, 0x20, 0x01, 0x28, 0x04, 0x52, 0x13, 0x63, 0x6f, 0x75, 0x70, 0x6f, 0x6e, 0x54, 0x6f, 0x74,
	0x61, 0x6c, 0x51, 0x75, 0x61, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x12, 0x34, 0x0a, 0x16, 0x63, 0x6f,
	0x75, 0x70, 0x6f, 0x6e, 0x5f, 0x72, 0x65, 0x6d, 0x61, 0x69, 0x6e, 0x5f, 0x71, 0x75, 0x61, 0x6e,
	0x74, 0x69, 0x74, 0x79, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x04, 0x52, 0x14, 0x63, 0x6f, 0x75, 0x70,
	0x6f, 0x6e, 0x52, 0x65, 0x6d, 0x61, 0x69, 0x6e, 0x51, 0x75, 0x61, 0x6e, 0x74, 0x69, 0x74, 0x79,
	0x12, 0x2a, 0x0a, 0x11, 0x63, 0x6f, 0x75, 0x70, 0x6f, 0x6e, 0x5f, 0x73, 0x74, 0x61, 0x72, 0x74,
	0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0f, 0x63, 0x6f, 0x75,
	0x70, 0x6f, 0x6e, 0x53, 0x74, 0x61, 0x72, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x26, 0x0a, 0x0f,
	0x63, 0x6f, 0x75, 0x70, 0x6f, 0x6e, 0x5f, 0x65, 0x6e, 0x64, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18,
	0x0c, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0d, 0x63, 0x6f, 0x75, 0x70, 0x6f, 0x6e, 0x45, 0x6e, 0x64,
	0x54, 0x69, 0x6d, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x68, 0x61, 0x73, 0x5f, 0x63, 0x6f, 0x75, 0x70,
	0x6f, 0x6e, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x08, 0x52, 0x09, 0x68, 0x61, 0x73, 0x43, 0x6f, 0x75,
	0x70, 0x6f, 0x6e, 0x22, 0xd2, 0x03, 0x0a, 0x0e, 0x55, 0x52, 0x4c, 0x43, 0x6f, 0x6e, 0x76, 0x65,
	0x72, 0x74, 0x44, 0x61, 0x74, 0x61, 0x12, 0x28, 0x0a, 0x10, 0x6d, 0x6f, 0x62, 0x69, 0x6c, 0x65,
	0x5f, 0x73, 0x68, 0x6f, 0x72, 0x74, 0x5f, 0x75, 0x72, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0e, 0x6d, 0x6f, 0x62, 0x69, 0x6c, 0x65, 0x53, 0x68, 0x6f, 0x72, 0x74, 0x55, 0x72, 0x6c,
	0x12, 0x1d, 0x0a, 0x0a, 0x6d, 0x6f, 0x62, 0x69, 0x6c, 0x65, 0x5f, 0x75, 0x72, 0x6c, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x6d, 0x6f, 0x62, 0x69, 0x6c, 0x65, 0x55, 0x72, 0x6c, 0x12,
	0x3e, 0x0a, 0x1c, 0x6d, 0x75, 0x6c, 0x74, 0x69, 0x5f, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x5f, 0x6d,
	0x6f, 0x62, 0x69, 0x6c, 0x65, 0x5f, 0x73, 0x68, 0x6f, 0x72, 0x74, 0x5f, 0x75, 0x72, 0x6c, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x18, 0x6d, 0x75, 0x6c, 0x74, 0x69, 0x47, 0x72, 0x6f, 0x75,
	0x70, 0x4d, 0x6f, 0x62, 0x69, 0x6c, 0x65, 0x53, 0x68, 0x6f, 0x72, 0x74, 0x55, 0x72, 0x6c, 0x12,
	0x33, 0x0a, 0x16, 0x6d, 0x75, 0x6c, 0x74, 0x69, 0x5f, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x5f, 0x6d,
	0x6f, 0x62, 0x69, 0x6c, 0x65, 0x5f, 0x75, 0x72, 0x6c, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x13, 0x6d, 0x75, 0x6c, 0x74, 0x69, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x4d, 0x6f, 0x62, 0x69, 0x6c,
	0x65, 0x55, 0x72, 0x6c, 0x12, 0x31, 0x0a, 0x15, 0x6d, 0x75, 0x6c, 0x74, 0x69, 0x5f, 0x67, 0x72,
	0x6f, 0x75, 0x70, 0x5f, 0x73, 0x68, 0x6f, 0x72, 0x74, 0x5f, 0x75, 0x72, 0x6c, 0x18, 0x05, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x12, 0x6d, 0x75, 0x6c, 0x74, 0x69, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x53,
	0x68, 0x6f, 0x72, 0x74, 0x55, 0x72, 0x6c, 0x12, 0x26, 0x0a, 0x0f, 0x6d, 0x75, 0x6c, 0x74, 0x69,
	0x5f, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x5f, 0x75, 0x72, 0x6c, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0d, 0x6d, 0x75, 0x6c, 0x74, 0x69, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x55, 0x72, 0x6c, 0x12,
	0x1d, 0x0a, 0x0a, 0x73, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x5f, 0x75, 0x72, 0x6c, 0x18, 0x07, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x09, 0x73, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x55, 0x72, 0x6c, 0x12, 0x1b,
	0x0a, 0x09, 0x73, 0x68, 0x6f, 0x72, 0x74, 0x5f, 0x75, 0x72, 0x6c, 0x18, 0x08, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x08, 0x73, 0x68, 0x6f, 0x72, 0x74, 0x55, 0x72, 0x6c, 0x12, 0x10, 0x0a, 0x03, 0x75,
	0x72, 0x6c, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x75, 0x72, 0x6c, 0x12, 0x19, 0x0a,
	0x08, 0x67, 0x6f, 0x6f, 0x64, 0x73, 0x5f, 0x69, 0x64, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x07, 0x67, 0x6f, 0x6f, 0x64, 0x73, 0x49, 0x64, 0x12, 0x31, 0x0a, 0x08, 0x69, 0x74, 0x65, 0x6d,
	0x49, 0x6e, 0x66, 0x6f, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x70, 0x64, 0x64,
	0x78, 0x70, 0x62, 0x2e, 0x49, 0x74, 0x65, 0x6d, 0x49, 0x6e, 0x66, 0x6f, 0x48, 0x00, 0x52, 0x08,
	0x69, 0x74, 0x65, 0x6d, 0x49, 0x6e, 0x66, 0x6f, 0x88, 0x01, 0x01, 0x42, 0x0b, 0x0a, 0x09, 0x5f,
	0x69, 0x74, 0x65, 0x6d, 0x49, 0x6e, 0x66, 0x6f, 0x22, 0x94, 0x02, 0x0a, 0x11, 0x55, 0x52, 0x4c,
	0x43, 0x6f, 0x6e, 0x76, 0x65, 0x72, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1d,
	0x0a, 0x0a, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x5f, 0x75, 0x72, 0x6c, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x09, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x55, 0x72, 0x6c, 0x12, 0x15, 0x0a,
	0x03, 0x70, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x03, 0x70, 0x69,
	0x64, 0x88, 0x01, 0x01, 0x12, 0x30, 0x0a, 0x11, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x5f, 0x70,
	0x61, 0x72, 0x61, 0x6d, 0x65, 0x74, 0x65, 0x72, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x48,
	0x01, 0x52, 0x10, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x65, 0x74,
	0x65, 0x72, 0x73, 0x88, 0x01, 0x01, 0x12, 0x33, 0x0a, 0x13, 0x67, 0x65, 0x6e, 0x65, 0x72, 0x61,
	0x74, 0x65, 0x5f, 0x73, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x5f, 0x75, 0x72, 0x6c, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x08, 0x48, 0x02, 0x52, 0x11, 0x67, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x74, 0x65, 0x53,
	0x63, 0x68, 0x65, 0x6d, 0x61, 0x55, 0x72, 0x6c, 0x88, 0x01, 0x01, 0x12, 0x1f, 0x0a, 0x08, 0x69,
	0x74, 0x65, 0x6d, 0x49, 0x6e, 0x66, 0x6f, 0x18, 0x05, 0x20, 0x01, 0x28, 0x08, 0x48, 0x03, 0x52,
	0x08, 0x69, 0x74, 0x65, 0x6d, 0x49, 0x6e, 0x66, 0x6f, 0x88, 0x01, 0x01, 0x42, 0x06, 0x0a, 0x04,
	0x5f, 0x70, 0x69, 0x64, 0x42, 0x14, 0x0a, 0x12, 0x5f, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x5f,
	0x70, 0x61, 0x72, 0x61, 0x6d, 0x65, 0x74, 0x65, 0x72, 0x73, 0x42, 0x16, 0x0a, 0x14, 0x5f, 0x67,
	0x65, 0x6e, 0x65, 0x72, 0x61, 0x74, 0x65, 0x5f, 0x73, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x5f, 0x75,
	0x72, 0x6c, 0x42, 0x0b, 0x0a, 0x09, 0x5f, 0x69, 0x74, 0x65, 0x6d, 0x49, 0x6e, 0x66, 0x6f, 0x22,
	0x66, 0x0a, 0x12, 0x55, 0x52, 0x4c, 0x43, 0x6f, 0x6e, 0x76, 0x65, 0x72, 0x74, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x6d, 0x73, 0x67,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6d, 0x73, 0x67, 0x12, 0x2a, 0x0a, 0x04, 0x64,
	0x61, 0x74, 0x61, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x70, 0x64, 0x64, 0x78,
	0x70, 0x62, 0x2e, 0x55, 0x52, 0x4c, 0x43, 0x6f, 0x6e, 0x76, 0x65, 0x72, 0x74, 0x44, 0x61, 0x74,
	0x61, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x22, 0xbe, 0x10, 0x0a, 0x0a, 0x53, 0x65, 0x61, 0x72,
	0x63, 0x68, 0x44, 0x61, 0x74, 0x61, 0x12, 0x26, 0x0a, 0x0f, 0x68, 0x61, 0x73, 0x5f, 0x6d, 0x61,
	0x6c, 0x6c, 0x5f, 0x63, 0x6f, 0x75, 0x70, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52,
	0x0d, 0x68, 0x61, 0x73, 0x4d, 0x61, 0x6c, 0x6c, 0x43, 0x6f, 0x75, 0x70, 0x6f, 0x6e, 0x12, 0x24,
	0x0a, 0x0e, 0x6d, 0x61, 0x6c, 0x6c, 0x5f, 0x63, 0x6f, 0x75, 0x70, 0x6f, 0x6e, 0x5f, 0x69, 0x64,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0c, 0x6d, 0x61, 0x6c, 0x6c, 0x43, 0x6f, 0x75, 0x70,
	0x6f, 0x6e, 0x49, 0x64, 0x12, 0x37, 0x0a, 0x18, 0x6d, 0x61, 0x6c, 0x6c, 0x5f, 0x63, 0x6f, 0x75,
	0x70, 0x6f, 0x6e, 0x5f, 0x64, 0x69, 0x73, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x5f, 0x70, 0x63, 0x74,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x15, 0x6d, 0x61, 0x6c, 0x6c, 0x43, 0x6f, 0x75, 0x70,
	0x6f, 0x6e, 0x44, 0x69, 0x73, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x50, 0x63, 0x74, 0x12, 0x3e, 0x0a,
	0x1c, 0x6d, 0x61, 0x6c, 0x6c, 0x5f, 0x63, 0x6f, 0x75, 0x70, 0x6f, 0x6e, 0x5f, 0x6d, 0x69, 0x6e,
	0x5f, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x5f, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x18, 0x6d, 0x61, 0x6c, 0x6c, 0x43, 0x6f, 0x75, 0x70, 0x6f, 0x6e, 0x4d,
	0x69, 0x6e, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x44, 0x0a,
	0x1f, 0x6d, 0x61, 0x6c, 0x6c, 0x5f, 0x63, 0x6f, 0x75, 0x70, 0x6f, 0x6e, 0x5f, 0x6d, 0x61, 0x78,
	0x5f, 0x64, 0x69, 0x73, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x5f, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74,
	0x18, 0x05, 0x20, 0x01, 0x28, 0x05, 0x52, 0x1b, 0x6d, 0x61, 0x6c, 0x6c, 0x43, 0x6f, 0x75, 0x70,
	0x6f, 0x6e, 0x4d, 0x61, 0x78, 0x44, 0x69, 0x73, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x41, 0x6d, 0x6f,
	0x75, 0x6e, 0x74, 0x12, 0x3b, 0x0a, 0x1a, 0x6d, 0x61, 0x6c, 0x6c, 0x5f, 0x63, 0x6f, 0x75, 0x70,
	0x6f, 0x6e, 0x5f, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x5f, 0x71, 0x75, 0x61, 0x6e, 0x74, 0x69, 0x74,
	0x79, 0x18, 0x06, 0x20, 0x01, 0x28, 0x04, 0x52, 0x17, 0x6d, 0x61, 0x6c, 0x6c, 0x43, 0x6f, 0x75,
	0x70, 0x6f, 0x6e, 0x54, 0x6f, 0x74, 0x61, 0x6c, 0x51, 0x75, 0x61, 0x6e, 0x74, 0x69, 0x74, 0x79,
	0x12, 0x3d, 0x0a, 0x1b, 0x6d, 0x61, 0x6c, 0x6c, 0x5f, 0x63, 0x6f, 0x75, 0x70, 0x6f, 0x6e, 0x5f,
	0x72, 0x65, 0x6d, 0x61, 0x69, 0x6e, 0x5f, 0x71, 0x75, 0x61, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x18,
	0x07, 0x20, 0x01, 0x28, 0x04, 0x52, 0x18, 0x6d, 0x61, 0x6c, 0x6c, 0x43, 0x6f, 0x75, 0x70, 0x6f,
	0x6e, 0x52, 0x65, 0x6d, 0x61, 0x69, 0x6e, 0x51, 0x75, 0x61, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x12,
	0x33, 0x0a, 0x16, 0x6d, 0x61, 0x6c, 0x6c, 0x5f, 0x63, 0x6f, 0x75, 0x70, 0x6f, 0x6e, 0x5f, 0x73,
	0x74, 0x61, 0x72, 0x74, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x04, 0x52,
	0x13, 0x6d, 0x61, 0x6c, 0x6c, 0x43, 0x6f, 0x75, 0x70, 0x6f, 0x6e, 0x53, 0x74, 0x61, 0x72, 0x74,
	0x54, 0x69, 0x6d, 0x65, 0x12, 0x2f, 0x0a, 0x14, 0x6d, 0x61, 0x6c, 0x6c, 0x5f, 0x63, 0x6f, 0x75,
	0x70, 0x6f, 0x6e, 0x5f, 0x65, 0x6e, 0x64, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x09, 0x20, 0x01,
	0x28, 0x04, 0x52, 0x11, 0x6d, 0x61, 0x6c, 0x6c, 0x43, 0x6f, 0x75, 0x70, 0x6f, 0x6e, 0x45, 0x6e,
	0x64, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x5f,
	0x61, 0x74, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x04, 0x52, 0x08, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x41, 0x74, 0x12, 0x19, 0x0a, 0x08, 0x67, 0x6f, 0x6f, 0x64, 0x73, 0x5f, 0x69, 0x64, 0x18, 0x0b,
	0x20, 0x01, 0x28, 0x04, 0x52, 0x07, 0x67, 0x6f, 0x6f, 0x64, 0x73, 0x49, 0x64, 0x12, 0x1d, 0x0a,
	0x0a, 0x67, 0x6f, 0x6f, 0x64, 0x73, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x0c, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x09, 0x67, 0x6f, 0x6f, 0x64, 0x73, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1d, 0x0a, 0x0a,
	0x67, 0x6f, 0x6f, 0x64, 0x73, 0x5f, 0x64, 0x65, 0x73, 0x63, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x09, 0x67, 0x6f, 0x6f, 0x64, 0x73, 0x44, 0x65, 0x73, 0x63, 0x12, 0x2e, 0x0a, 0x13, 0x67,
	0x6f, 0x6f, 0x64, 0x73, 0x5f, 0x74, 0x68, 0x75, 0x6d, 0x62, 0x6e, 0x61, 0x69, 0x6c, 0x5f, 0x75,
	0x72, 0x6c, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x09, 0x52, 0x11, 0x67, 0x6f, 0x6f, 0x64, 0x73, 0x54,
	0x68, 0x75, 0x6d, 0x62, 0x6e, 0x61, 0x69, 0x6c, 0x55, 0x72, 0x6c, 0x12, 0x26, 0x0a, 0x0f, 0x67,
	0x6f, 0x6f, 0x64, 0x73, 0x5f, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x5f, 0x75, 0x72, 0x6c, 0x18, 0x0f,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x67, 0x6f, 0x6f, 0x64, 0x73, 0x49, 0x6d, 0x61, 0x67, 0x65,
	0x55, 0x72, 0x6c, 0x12, 0x26, 0x0a, 0x0f, 0x6d, 0x69, 0x6e, 0x5f, 0x67, 0x72, 0x6f, 0x75, 0x70,
	0x5f, 0x70, 0x72, 0x69, 0x63, 0x65, 0x18, 0x10, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0d, 0x6d, 0x69,
	0x6e, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x50, 0x72, 0x69, 0x63, 0x65, 0x12, 0x28, 0x0a, 0x10, 0x6d,
	0x69, 0x6e, 0x5f, 0x6e, 0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x5f, 0x70, 0x72, 0x69, 0x63, 0x65, 0x18,
	0x11, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0e, 0x6d, 0x69, 0x6e, 0x4e, 0x6f, 0x72, 0x6d, 0x61, 0x6c,
	0x50, 0x72, 0x69, 0x63, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x6d, 0x61, 0x6c, 0x6c, 0x5f, 0x6e, 0x61,
	0x6d, 0x65, 0x18, 0x12, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6d, 0x61, 0x6c, 0x6c, 0x4e, 0x61,
	0x6d, 0x65, 0x12, 0x23, 0x0a, 0x0d, 0x6d, 0x65, 0x72, 0x63, 0x68, 0x61, 0x6e, 0x74, 0x5f, 0x74,
	0x79, 0x70, 0x65, 0x18, 0x13, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0c, 0x6d, 0x65, 0x72, 0x63, 0x68,
	0x61, 0x6e, 0x74, 0x54, 0x79, 0x70, 0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x63, 0x61, 0x74, 0x65, 0x67,
	0x6f, 0x72, 0x79, 0x5f, 0x69, 0x64, 0x18, 0x14, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0a, 0x63, 0x61,
	0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x49, 0x64, 0x12, 0x23, 0x0a, 0x0d, 0x63, 0x61, 0x74, 0x65,
	0x67, 0x6f, 0x72, 0x79, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x15, 0x20, 0x01, 0x28, 0x04, 0x52,
	0x0c, 0x63, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x15, 0x0a,
	0x06, 0x6f, 0x70, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x16, 0x20, 0x01, 0x28, 0x04, 0x52, 0x05, 0x6f,
	0x70, 0x74, 0x49, 0x64, 0x12, 0x19, 0x0a, 0x08, 0x6f, 0x70, 0x74, 0x5f, 0x6e, 0x61, 0x6d, 0x65,
	0x18, 0x17, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6f, 0x70, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x12,
	0x17, 0x0a, 0x07, 0x6f, 0x70, 0x74, 0x5f, 0x69, 0x64, 0x73, 0x18, 0x18, 0x20, 0x03, 0x28, 0x04,
	0x52, 0x06, 0x6f, 0x70, 0x74, 0x49, 0x64, 0x73, 0x12, 0x17, 0x0a, 0x07, 0x63, 0x61, 0x74, 0x5f,
	0x69, 0x64, 0x73, 0x18, 0x19, 0x20, 0x03, 0x28, 0x04, 0x52, 0x06, 0x63, 0x61, 0x74, 0x49, 0x64,
	0x73, 0x12, 0x19, 0x0a, 0x08, 0x6d, 0x61, 0x6c, 0x6c, 0x5f, 0x63, 0x70, 0x73, 0x18, 0x1a, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x07, 0x6d, 0x61, 0x6c, 0x6c, 0x43, 0x70, 0x73, 0x12, 0x1d, 0x0a, 0x0a,
	0x68, 0x61, 0x73, 0x5f, 0x63, 0x6f, 0x75, 0x70, 0x6f, 0x6e, 0x18, 0x1b, 0x20, 0x01, 0x28, 0x08,
	0x52, 0x09, 0x68, 0x61, 0x73, 0x43, 0x6f, 0x75, 0x70, 0x6f, 0x6e, 0x12, 0x35, 0x0a, 0x17, 0x63,
	0x6f, 0x75, 0x70, 0x6f, 0x6e, 0x5f, 0x6d, 0x69, 0x6e, 0x5f, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x5f,
	0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x1c, 0x20, 0x01, 0x28, 0x04, 0x52, 0x14, 0x63, 0x6f,
	0x75, 0x70, 0x6f, 0x6e, 0x4d, 0x69, 0x6e, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x41, 0x6d, 0x6f, 0x75,
	0x6e, 0x74, 0x12, 0x27, 0x0a, 0x0f, 0x63, 0x6f, 0x75, 0x70, 0x6f, 0x6e, 0x5f, 0x64, 0x69, 0x73,
	0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x1d, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0e, 0x63, 0x6f, 0x75,
	0x70, 0x6f, 0x6e, 0x44, 0x69, 0x73, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x32, 0x0a, 0x15, 0x63,
	0x6f, 0x75, 0x70, 0x6f, 0x6e, 0x5f, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x5f, 0x71, 0x75, 0x61, 0x6e,
	0x74, 0x69, 0x74, 0x79, 0x18, 0x1e, 0x20, 0x01, 0x28, 0x04, 0x52, 0x13, 0x63, 0x6f, 0x75, 0x70,
	0x6f, 0x6e, 0x54, 0x6f, 0x74, 0x61, 0x6c, 0x51, 0x75, 0x61, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x12,
	0x34, 0x0a, 0x16, 0x63, 0x6f, 0x75, 0x70, 0x6f, 0x6e, 0x5f, 0x72, 0x65, 0x6d, 0x61, 0x69, 0x6e,
	0x5f, 0x71, 0x75, 0x61, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x18, 0x1f, 0x20, 0x01, 0x28, 0x04, 0x52,
	0x14, 0x63, 0x6f, 0x75, 0x70, 0x6f, 0x6e, 0x52, 0x65, 0x6d, 0x61, 0x69, 0x6e, 0x51, 0x75, 0x61,
	0x6e, 0x74, 0x69, 0x74, 0x79, 0x12, 0x2a, 0x0a, 0x11, 0x63, 0x6f, 0x75, 0x70, 0x6f, 0x6e, 0x5f,
	0x73, 0x74, 0x61, 0x72, 0x74, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x20, 0x20, 0x01, 0x28, 0x04,
	0x52, 0x0f, 0x63, 0x6f, 0x75, 0x70, 0x6f, 0x6e, 0x53, 0x74, 0x61, 0x72, 0x74, 0x54, 0x69, 0x6d,
	0x65, 0x12, 0x26, 0x0a, 0x0f, 0x63, 0x6f, 0x75, 0x70, 0x6f, 0x6e, 0x5f, 0x65, 0x6e, 0x64, 0x5f,
	0x74, 0x69, 0x6d, 0x65, 0x18, 0x21, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0d, 0x63, 0x6f, 0x75, 0x70,
	0x6f, 0x6e, 0x45, 0x6e, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x25, 0x0a, 0x0e, 0x70, 0x72, 0x6f,
	0x6d, 0x6f, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x72, 0x61, 0x74, 0x65, 0x18, 0x22, 0x20, 0x01, 0x28,
	0x04, 0x52, 0x0d, 0x70, 0x72, 0x6f, 0x6d, 0x6f, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x61, 0x74, 0x65,
	0x12, 0x1b, 0x0a, 0x09, 0x73, 0x61, 0x6c, 0x65, 0x73, 0x5f, 0x74, 0x69, 0x70, 0x18, 0x23, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x08, 0x73, 0x61, 0x6c, 0x65, 0x73, 0x54, 0x69, 0x70, 0x12, 0x23, 0x0a,
	0x0d, 0x61, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x24,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x0c, 0x61, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x54, 0x79,
	0x70, 0x65, 0x12, 0x27, 0x0a, 0x10, 0x63, 0x6c, 0x74, 0x5f, 0x63, 0x70, 0x6e, 0x5f, 0x62, 0x61,
	0x74, 0x63, 0x68, 0x5f, 0x73, 0x6e, 0x18, 0x25, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x63, 0x6c,
	0x74, 0x43, 0x70, 0x6e, 0x42, 0x61, 0x74, 0x63, 0x68, 0x53, 0x6e, 0x12, 0x2b, 0x0a, 0x12, 0x63,
	0x6c, 0x74, 0x5f, 0x63, 0x70, 0x6e, 0x5f, 0x73, 0x74, 0x61, 0x72, 0x74, 0x5f, 0x74, 0x69, 0x6d,
	0x65, 0x18, 0x26, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0f, 0x63, 0x6c, 0x74, 0x43, 0x70, 0x6e, 0x53,
	0x74, 0x61, 0x72, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x27, 0x0a, 0x10, 0x63, 0x6c, 0x74, 0x5f,
	0x63, 0x70, 0x6e, 0x5f, 0x65, 0x6e, 0x64, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x27, 0x20, 0x01,
	0x28, 0x04, 0x52, 0x0d, 0x63, 0x6c, 0x74, 0x43, 0x70, 0x6e, 0x45, 0x6e, 0x64, 0x54, 0x69, 0x6d,
	0x65, 0x12, 0x28, 0x0a, 0x10, 0x63, 0x6c, 0x74, 0x5f, 0x63, 0x70, 0x6e, 0x5f, 0x71, 0x75, 0x61,
	0x6e, 0x74, 0x69, 0x74, 0x79, 0x18, 0x28, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0e, 0x63, 0x6c, 0x74,
	0x43, 0x70, 0x6e, 0x51, 0x75, 0x61, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x12, 0x35, 0x0a, 0x17, 0x63,
	0x6c, 0x74, 0x5f, 0x63, 0x70, 0x6e, 0x5f, 0x72, 0x65, 0x6d, 0x61, 0x69, 0x6e, 0x5f, 0x71, 0x75,
	0x61, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x18, 0x29, 0x20, 0x01, 0x28, 0x04, 0x52, 0x14, 0x63, 0x6c,
	0x74, 0x43, 0x70, 0x6e, 0x52, 0x65, 0x6d, 0x61, 0x69, 0x6e, 0x51, 0x75, 0x61, 0x6e, 0x74, 0x69,
	0x74, 0x79, 0x12, 0x28, 0x0a, 0x10, 0x63, 0x6c, 0x74, 0x5f, 0x63, 0x70, 0x6e, 0x5f, 0x64, 0x69,
	0x73, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x2a, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0e, 0x63, 0x6c,
	0x74, 0x43, 0x70, 0x6e, 0x44, 0x69, 0x73, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x25, 0x0a, 0x0f,
	0x63, 0x6c, 0x74, 0x5f, 0x63, 0x70, 0x6e, 0x5f, 0x6d, 0x69, 0x6e, 0x5f, 0x61, 0x6d, 0x74, 0x18,
	0x2b, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0c, 0x63, 0x6c, 0x74, 0x43, 0x70, 0x6e, 0x4d, 0x69, 0x6e,
	0x41, 0x6d, 0x74, 0x12, 0x19, 0x0a, 0x08, 0x64, 0x65, 0x73, 0x63, 0x5f, 0x74, 0x78, 0x74, 0x18,
	0x2c, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x64, 0x65, 0x73, 0x63, 0x54, 0x78, 0x74, 0x12, 0x19,
	0x0a, 0x08, 0x73, 0x65, 0x72, 0x76, 0x5f, 0x74, 0x78, 0x74, 0x18, 0x2d, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x07, 0x73, 0x65, 0x72, 0x76, 0x54, 0x78, 0x74, 0x12, 0x19, 0x0a, 0x08, 0x6c, 0x67, 0x73,
	0x74, 0x5f, 0x74, 0x78, 0x74, 0x18, 0x2e, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6c, 0x67, 0x73,
	0x74, 0x54, 0x78, 0x74, 0x12, 0x1b, 0x0a, 0x09, 0x70, 0x6c, 0x61, 0x6e, 0x5f, 0x74, 0x79, 0x70,
	0x65, 0x18, 0x2f, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x70, 0x6c, 0x61, 0x6e, 0x54, 0x79, 0x70,
	0x65, 0x12, 0x1a, 0x0a, 0x09, 0x7a, 0x73, 0x5f, 0x64, 0x75, 0x6f, 0x5f, 0x69, 0x64, 0x18, 0x30,
	0x20, 0x01, 0x28, 0x04, 0x52, 0x07, 0x7a, 0x73, 0x44, 0x75, 0x6f, 0x49, 0x64, 0x12, 0x26, 0x0a,
	0x0f, 0x6f, 0x6e, 0x6c, 0x79, 0x5f, 0x73, 0x63, 0x65, 0x6e, 0x65, 0x5f, 0x61, 0x75, 0x74, 0x68,
	0x18, 0x31, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0d, 0x6f, 0x6e, 0x6c, 0x79, 0x53, 0x63, 0x65, 0x6e,
	0x65, 0x41, 0x75, 0x74, 0x68, 0x12, 0x17, 0x0a, 0x07, 0x6d, 0x61, 0x6c, 0x6c, 0x5f, 0x69, 0x64,
	0x18, 0x32, 0x20, 0x01, 0x28, 0x04, 0x52, 0x06, 0x6d, 0x61, 0x6c, 0x6c, 0x49, 0x64, 0x12, 0x34,
	0x0a, 0x16, 0x70, 0x72, 0x65, 0x64, 0x69, 0x63, 0x74, 0x5f, 0x70, 0x72, 0x6f, 0x6d, 0x6f, 0x74,
	0x69, 0x6f, 0x6e, 0x5f, 0x72, 0x61, 0x74, 0x65, 0x18, 0x33, 0x20, 0x01, 0x28, 0x04, 0x52, 0x14,
	0x70, 0x72, 0x65, 0x64, 0x69, 0x63, 0x74, 0x50, 0x72, 0x6f, 0x6d, 0x6f, 0x74, 0x69, 0x6f, 0x6e,
	0x52, 0x61, 0x74, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x67, 0x6f, 0x6f, 0x64, 0x73, 0x5f, 0x73, 0x69,
	0x67, 0x6e, 0x18, 0x34, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x67, 0x6f, 0x6f, 0x64, 0x73, 0x53,
	0x69, 0x67, 0x6e, 0x12, 0x23, 0x0a, 0x0d, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x5f, 0x72, 0x65, 0x73,
	0x75, 0x6c, 0x74, 0x73, 0x18, 0x35, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0c, 0x74, 0x6f, 0x74, 0x61,
	0x6c, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x73, 0x22, 0xb2, 0x06, 0x0a, 0x0d, 0x53, 0x65, 0x61,
	0x72, 0x63, 0x68, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1d, 0x0a, 0x07, 0x6b, 0x65,
	0x79, 0x77, 0x6f, 0x72, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x07, 0x6b,
	0x65, 0x79, 0x77, 0x6f, 0x72, 0x64, 0x88, 0x01, 0x01, 0x12, 0x1a, 0x0a, 0x06, 0x6f, 0x70, 0x74,
	0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x48, 0x01, 0x52, 0x05, 0x6f, 0x70, 0x74,
	0x49, 0x64, 0x88, 0x01, 0x01, 0x12, 0x17, 0x0a, 0x04, 0x70, 0x61, 0x67, 0x65, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x05, 0x48, 0x02, 0x52, 0x04, 0x70, 0x61, 0x67, 0x65, 0x88, 0x01, 0x01, 0x12, 0x20,
	0x0a, 0x09, 0x70, 0x61, 0x67, 0x65, 0x5f, 0x73, 0x69, 0x7a, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x05, 0x48, 0x03, 0x52, 0x08, 0x70, 0x61, 0x67, 0x65, 0x53, 0x69, 0x7a, 0x65, 0x88, 0x01, 0x01,
	0x12, 0x20, 0x0a, 0x09, 0x73, 0x6f, 0x72, 0x74, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x05, 0x20,
	0x01, 0x28, 0x05, 0x48, 0x04, 0x52, 0x08, 0x73, 0x6f, 0x72, 0x74, 0x54, 0x79, 0x70, 0x65, 0x88,
	0x01, 0x01, 0x12, 0x24, 0x0a, 0x0b, 0x77, 0x69, 0x74, 0x68, 0x5f, 0x63, 0x6f, 0x75, 0x70, 0x6f,
	0x6e, 0x18, 0x06, 0x20, 0x01, 0x28, 0x08, 0x48, 0x05, 0x52, 0x0a, 0x77, 0x69, 0x74, 0x68, 0x43,
	0x6f, 0x75, 0x70, 0x6f, 0x6e, 0x88, 0x01, 0x01, 0x12, 0x22, 0x0a, 0x0a, 0x72, 0x61, 0x6e, 0x67,
	0x65, 0x5f, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x48, 0x06, 0x52, 0x09,
	0x72, 0x61, 0x6e, 0x67, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x88, 0x01, 0x01, 0x12, 0x1a, 0x0a, 0x06,
	0x63, 0x61, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x08, 0x20, 0x01, 0x28, 0x04, 0x48, 0x07, 0x52, 0x05,
	0x63, 0x61, 0x74, 0x49, 0x64, 0x88, 0x01, 0x01, 0x12, 0x28, 0x0a, 0x0d, 0x6d, 0x65, 0x72, 0x63,
	0x68, 0x61, 0x6e, 0x74, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x09, 0x20, 0x01, 0x28, 0x05, 0x48,
	0x08, 0x52, 0x0c, 0x6d, 0x65, 0x72, 0x63, 0x68, 0x61, 0x6e, 0x74, 0x54, 0x79, 0x70, 0x65, 0x88,
	0x01, 0x01, 0x12, 0x15, 0x0a, 0x03, 0x70, 0x69, 0x64, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x48,
	0x09, 0x52, 0x03, 0x70, 0x69, 0x64, 0x88, 0x01, 0x01, 0x12, 0x30, 0x0a, 0x11, 0x63, 0x75, 0x73,
	0x74, 0x6f, 0x6d, 0x5f, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x65, 0x74, 0x65, 0x72, 0x73, 0x18, 0x0b,
	0x20, 0x01, 0x28, 0x09, 0x48, 0x0a, 0x52, 0x10, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x50, 0x61,
	0x72, 0x61, 0x6d, 0x65, 0x74, 0x65, 0x72, 0x73, 0x88, 0x01, 0x01, 0x12, 0x2c, 0x0a, 0x12, 0x6d,
	0x65, 0x72, 0x63, 0x68, 0x61, 0x6e, 0x74, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x5f, 0x6c, 0x69, 0x73,
	0x74, 0x18, 0x0c, 0x20, 0x03, 0x28, 0x05, 0x52, 0x10, 0x6d, 0x65, 0x72, 0x63, 0x68, 0x61, 0x6e,
	0x74, 0x54, 0x79, 0x70, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x29, 0x0a, 0x0e, 0x69, 0x73, 0x5f,
	0x62, 0x72, 0x61, 0x6e, 0x64, 0x5f, 0x67, 0x6f, 0x6f, 0x64, 0x73, 0x18, 0x0d, 0x20, 0x01, 0x28,
	0x08, 0x48, 0x0b, 0x52, 0x0c, 0x69, 0x73, 0x42, 0x72, 0x61, 0x6e, 0x64, 0x47, 0x6f, 0x6f, 0x64,
	0x73, 0x88, 0x01, 0x01, 0x12, 0x23, 0x0a, 0x0d, 0x61, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79,
	0x5f, 0x74, 0x61, 0x67, 0x73, 0x18, 0x0e, 0x20, 0x03, 0x28, 0x05, 0x52, 0x0c, 0x61, 0x63, 0x74,
	0x69, 0x76, 0x69, 0x74, 0x79, 0x54, 0x61, 0x67, 0x73, 0x12, 0x2c, 0x0a, 0x12, 0x62, 0x6c, 0x6f,
	0x63, 0x6b, 0x5f, 0x63, 0x61, 0x74, 0x5f, 0x70, 0x61, 0x63, 0x6b, 0x61, 0x67, 0x65, 0x73, 0x18,
	0x0f, 0x20, 0x03, 0x28, 0x05, 0x52, 0x10, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x43, 0x61, 0x74, 0x50,
	0x61, 0x63, 0x6b, 0x61, 0x67, 0x65, 0x73, 0x12, 0x26, 0x0a, 0x0f, 0x67, 0x6f, 0x6f, 0x64, 0x73,
	0x5f, 0x73, 0x69, 0x67, 0x6e, 0x5f, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x10, 0x20, 0x03, 0x28, 0x09,
	0x52, 0x0d, 0x67, 0x6f, 0x6f, 0x64, 0x73, 0x53, 0x69, 0x67, 0x6e, 0x4c, 0x69, 0x73, 0x74, 0x12,
	0x23, 0x0a, 0x0b, 0x70, 0x64, 0x64, 0x5f, 0x61, 0x75, 0x74, 0x68, 0x5f, 0x69, 0x64, 0x18, 0x11,
	0x20, 0x01, 0x28, 0x09, 0x48, 0x0c, 0x52, 0x09, 0x70, 0x64, 0x64, 0x41, 0x75, 0x74, 0x68, 0x49,
	0x64, 0x88, 0x01, 0x01, 0x42, 0x0a, 0x0a, 0x08, 0x5f, 0x6b, 0x65, 0x79, 0x77, 0x6f, 0x72, 0x64,
	0x42, 0x09, 0x0a, 0x07, 0x5f, 0x6f, 0x70, 0x74, 0x5f, 0x69, 0x64, 0x42, 0x07, 0x0a, 0x05, 0x5f,
	0x70, 0x61, 0x67, 0x65, 0x42, 0x0c, 0x0a, 0x0a, 0x5f, 0x70, 0x61, 0x67, 0x65, 0x5f, 0x73, 0x69,
	0x7a, 0x65, 0x42, 0x0c, 0x0a, 0x0a, 0x5f, 0x73, 0x6f, 0x72, 0x74, 0x5f, 0x74, 0x79, 0x70, 0x65,
	0x42, 0x0e, 0x0a, 0x0c, 0x5f, 0x77, 0x69, 0x74, 0x68, 0x5f, 0x63, 0x6f, 0x75, 0x70, 0x6f, 0x6e,
	0x42, 0x0d, 0x0a, 0x0b, 0x5f, 0x72, 0x61, 0x6e, 0x67, 0x65, 0x5f, 0x6c, 0x69, 0x73, 0x74, 0x42,
	0x09, 0x0a, 0x07, 0x5f, 0x63, 0x61, 0x74, 0x5f, 0x69, 0x64, 0x42, 0x10, 0x0a, 0x0e, 0x5f, 0x6d,
	0x65, 0x72, 0x63, 0x68, 0x61, 0x6e, 0x74, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x42, 0x06, 0x0a, 0x04,
	0x5f, 0x70, 0x69, 0x64, 0x42, 0x14, 0x0a, 0x12, 0x5f, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x5f,
	0x70, 0x61, 0x72, 0x61, 0x6d, 0x65, 0x74, 0x65, 0x72, 0x73, 0x42, 0x11, 0x0a, 0x0f, 0x5f, 0x69,
	0x73, 0x5f, 0x62, 0x72, 0x61, 0x6e, 0x64, 0x5f, 0x67, 0x6f, 0x6f, 0x64, 0x73, 0x42, 0x0e, 0x0a,
	0x0c, 0x5f, 0x70, 0x64, 0x64, 0x5f, 0x61, 0x75, 0x74, 0x68, 0x5f, 0x69, 0x64, 0x22, 0x5e, 0x0a,
	0x0e, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x63,
	0x6f, 0x64, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x6d, 0x73, 0x67, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x03, 0x6d, 0x73, 0x67, 0x12, 0x26, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x70, 0x64, 0x64, 0x78, 0x70, 0x62, 0x2e, 0x53, 0x65, 0x61,
	0x72, 0x63, 0x68, 0x44, 0x61, 0x74, 0x61, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x22, 0xe0, 0x03,
	0x0a, 0x0c, 0x50, 0x72, 0x6f, 0x6d, 0x6f, 0x74, 0x65, 0x64, 0x44, 0x61, 0x74, 0x61, 0x12, 0x37,
	0x0a, 0x19, 0x77, 0x65, 0x5f, 0x61, 0x70, 0x70, 0x5f, 0x77, 0x65, 0x62, 0x5f, 0x76, 0x69, 0x65,
	0x77, 0x5f, 0x73, 0x68, 0x6f, 0x72, 0x74, 0x5f, 0x75, 0x72, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x14, 0x77, 0x65, 0x41, 0x70, 0x70, 0x57, 0x65, 0x62, 0x56, 0x69, 0x65, 0x77, 0x53,
	0x68, 0x6f, 0x72, 0x74, 0x55, 0x72, 0x6c, 0x12, 0x2c, 0x0a, 0x13, 0x77, 0x65, 0x5f, 0x61, 0x70,
	0x70, 0x5f, 0x77, 0x65, 0x62, 0x5f, 0x76, 0x69, 0x65, 0x77, 0x5f, 0x75, 0x72, 0x6c, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x77, 0x65, 0x41, 0x70, 0x70, 0x57, 0x65, 0x62, 0x56, 0x69,
	0x65, 0x77, 0x55, 0x72, 0x6c, 0x12, 0x28, 0x0a, 0x10, 0x6d, 0x6f, 0x62, 0x69, 0x6c, 0x65, 0x5f,
	0x73, 0x68, 0x6f, 0x72, 0x74, 0x5f, 0x75, 0x72, 0x6c, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0e, 0x6d, 0x6f, 0x62, 0x69, 0x6c, 0x65, 0x53, 0x68, 0x6f, 0x72, 0x74, 0x55, 0x72, 0x6c, 0x12,
	0x1d, 0x0a, 0x0a, 0x6d, 0x6f, 0x62, 0x69, 0x6c, 0x65, 0x5f, 0x75, 0x72, 0x6c, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x09, 0x6d, 0x6f, 0x62, 0x69, 0x6c, 0x65, 0x55, 0x72, 0x6c, 0x12, 0x1b,
	0x0a, 0x09, 0x73, 0x68, 0x6f, 0x72, 0x74, 0x5f, 0x75, 0x72, 0x6c, 0x18, 0x05, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x08, 0x73, 0x68, 0x6f, 0x72, 0x74, 0x55, 0x72, 0x6c, 0x12, 0x10, 0x0a, 0x03, 0x75,
	0x72, 0x6c, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x75, 0x72, 0x6c, 0x12, 0x3d, 0x0a,
	0x1c, 0x77, 0x65, 0x69, 0x62, 0x6f, 0x5f, 0x61, 0x70, 0x70, 0x5f, 0x77, 0x65, 0x62, 0x5f, 0x76,
	0x69, 0x65, 0x77, 0x5f, 0x73, 0x68, 0x6f, 0x72, 0x74, 0x5f, 0x75, 0x72, 0x6c, 0x18, 0x07, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x17, 0x77, 0x65, 0x69, 0x62, 0x6f, 0x41, 0x70, 0x70, 0x57, 0x65, 0x62,
	0x56, 0x69, 0x65, 0x77, 0x53, 0x68, 0x6f, 0x72, 0x74, 0x55, 0x72, 0x6c, 0x12, 0x32, 0x0a, 0x16,
	0x77, 0x65, 0x69, 0x62, 0x6f, 0x5f, 0x61, 0x70, 0x70, 0x5f, 0x77, 0x65, 0x62, 0x5f, 0x76, 0x69,
	0x65, 0x77, 0x5f, 0x75, 0x72, 0x6c, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x12, 0x77, 0x65,
	0x69, 0x62, 0x6f, 0x41, 0x70, 0x70, 0x57, 0x65, 0x62, 0x56, 0x69, 0x65, 0x77, 0x55, 0x72, 0x6c,
	0x12, 0x1d, 0x0a, 0x0a, 0x73, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x5f, 0x75, 0x72, 0x6c, 0x18, 0x09,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x73, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x55, 0x72, 0x6c, 0x12,
	0x31, 0x0a, 0x0b, 0x77, 0x65, 0x5f, 0x61, 0x70, 0x70, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x18, 0x0a,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x70, 0x64, 0x64, 0x78, 0x70, 0x62, 0x2e, 0x57, 0x65,
	0x41, 0x70, 0x70, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x09, 0x77, 0x65, 0x41, 0x70, 0x70, 0x49, 0x6e,
	0x66, 0x6f, 0x12, 0x2c, 0x0a, 0x08, 0x69, 0x74, 0x65, 0x6d, 0x49, 0x6e, 0x66, 0x6f, 0x18, 0x0b,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x70, 0x64, 0x64, 0x78, 0x70, 0x62, 0x2e, 0x49, 0x74,
	0x65, 0x6d, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x08, 0x69, 0x74, 0x65, 0x6d, 0x49, 0x6e, 0x66, 0x6f,
	0x22, 0x84, 0x0a, 0x0a, 0x10, 0x50, 0x72, 0x6f, 0x6d, 0x6f, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x67, 0x6f, 0x6f, 0x64, 0x73, 0x5f, 0x73,
	0x69, 0x67, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x67, 0x6f, 0x6f, 0x64, 0x73,
	0x53, 0x69, 0x67, 0x6e, 0x12, 0x15, 0x0a, 0x03, 0x70, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x48, 0x00, 0x52, 0x03, 0x70, 0x69, 0x64, 0x88, 0x01, 0x01, 0x12, 0x30, 0x0a, 0x11, 0x63,
	0x75, 0x73, 0x74, 0x6f, 0x6d, 0x5f, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x65, 0x74, 0x65, 0x72, 0x73,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x48, 0x01, 0x52, 0x10, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d,
	0x50, 0x61, 0x72, 0x61, 0x6d, 0x65, 0x74, 0x65, 0x72, 0x73, 0x88, 0x01, 0x01, 0x12, 0x25, 0x0a,
	0x0c, 0x63, 0x61, 0x73, 0x68, 0x5f, 0x67, 0x69, 0x66, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x04, 0x48, 0x02, 0x52, 0x0a, 0x63, 0x61, 0x73, 0x68, 0x47, 0x69, 0x66, 0x74, 0x49,
	0x64, 0x88, 0x01, 0x01, 0x12, 0x29, 0x0a, 0x0e, 0x63, 0x61, 0x73, 0x68, 0x5f, 0x67, 0x69, 0x66,
	0x74, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x48, 0x03, 0x52, 0x0c,
	0x63, 0x61, 0x73, 0x68, 0x47, 0x69, 0x66, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x88, 0x01, 0x01, 0x12,
	0x1f, 0x0a, 0x08, 0x69, 0x74, 0x65, 0x6d, 0x49, 0x6e, 0x66, 0x6f, 0x18, 0x06, 0x20, 0x01, 0x28,
	0x08, 0x48, 0x04, 0x52, 0x08, 0x69, 0x74, 0x65, 0x6d, 0x49, 0x6e, 0x66, 0x6f, 0x88, 0x01, 0x01,
	0x12, 0x39, 0x0a, 0x16, 0x67, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x74, 0x65, 0x5f, 0x61, 0x75, 0x74,
	0x68, 0x6f, 0x72, 0x69, 0x74, 0x79, 0x5f, 0x75, 0x72, 0x6c, 0x18, 0x07, 0x20, 0x01, 0x28, 0x08,
	0x48, 0x05, 0x52, 0x14, 0x67, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x74, 0x65, 0x41, 0x75, 0x74, 0x68,
	0x6f, 0x72, 0x69, 0x74, 0x79, 0x55, 0x72, 0x6c, 0x88, 0x01, 0x01, 0x12, 0x31, 0x0a, 0x12, 0x67,
	0x65, 0x6e, 0x65, 0x72, 0x61, 0x74, 0x65, 0x5f, 0x73, 0x68, 0x6f, 0x72, 0x74, 0x5f, 0x75, 0x72,
	0x6c, 0x18, 0x08, 0x20, 0x01, 0x28, 0x08, 0x48, 0x06, 0x52, 0x10, 0x67, 0x65, 0x6e, 0x65, 0x72,
	0x61, 0x74, 0x65, 0x53, 0x68, 0x6f, 0x72, 0x74, 0x55, 0x72, 0x6c, 0x88, 0x01, 0x01, 0x12, 0x24,
	0x0a, 0x0b, 0x6d, 0x75, 0x6c, 0x74, 0x69, 0x5f, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x18, 0x09, 0x20,
	0x01, 0x28, 0x08, 0x48, 0x07, 0x52, 0x0a, 0x6d, 0x75, 0x6c, 0x74, 0x69, 0x47, 0x72, 0x6f, 0x75,
	0x70, 0x88, 0x01, 0x01, 0x12, 0x39, 0x0a, 0x16, 0x67, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x74, 0x65,
	0x5f, 0x77, 0x65, 0x61, 0x70, 0x70, 0x5f, 0x77, 0x65, 0x62, 0x76, 0x69, 0x65, 0x77, 0x18, 0x0a,
	0x20, 0x01, 0x28, 0x08, 0x48, 0x08, 0x52, 0x14, 0x67, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x74, 0x65,
	0x57, 0x65, 0x61, 0x70, 0x70, 0x57, 0x65, 0x62, 0x76, 0x69, 0x65, 0x77, 0x88, 0x01, 0x01, 0x12,
	0x1f, 0x0a, 0x09, 0x7a, 0x73, 0x5f, 0x64, 0x75, 0x6f, 0x5f, 0x69, 0x64, 0x18, 0x0b, 0x20, 0x01,
	0x28, 0x09, 0x48, 0x09, 0x52, 0x07, 0x7a, 0x73, 0x44, 0x75, 0x6f, 0x49, 0x64, 0x88, 0x01, 0x01,
	0x12, 0x2b, 0x0a, 0x0f, 0x67, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x74, 0x65, 0x5f, 0x77, 0x65, 0x5f,
	0x61, 0x70, 0x70, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x08, 0x48, 0x0a, 0x52, 0x0d, 0x67, 0x65, 0x6e,
	0x65, 0x72, 0x61, 0x74, 0x65, 0x57, 0x65, 0x41, 0x70, 0x70, 0x88, 0x01, 0x01, 0x12, 0x3f, 0x0a,
	0x19, 0x67, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x74, 0x65, 0x5f, 0x77, 0x65, 0x69, 0x62, 0x6f, 0x61,
	0x70, 0x70, 0x5f, 0x77, 0x65, 0x62, 0x76, 0x69, 0x65, 0x77, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x08,
	0x48, 0x0b, 0x52, 0x17, 0x67, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x74, 0x65, 0x57, 0x65, 0x69, 0x62,
	0x6f, 0x61, 0x70, 0x70, 0x57, 0x65, 0x62, 0x76, 0x69, 0x65, 0x77, 0x88, 0x01, 0x01, 0x12, 0x44,
	0x0a, 0x1c, 0x67, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x74, 0x65, 0x5f, 0x6d, 0x61, 0x6c, 0x6c, 0x5f,
	0x63, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x5f, 0x63, 0x6f, 0x75, 0x70, 0x6f, 0x6e, 0x18, 0x0e,
	0x20, 0x01, 0x28, 0x08, 0x48, 0x0c, 0x52, 0x19, 0x67, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x74, 0x65,
	0x4d, 0x61, 0x6c, 0x6c, 0x43, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x43, 0x6f, 0x75, 0x70, 0x6f,
	0x6e, 0x88, 0x01, 0x01, 0x12, 0x2b, 0x0a, 0x0f, 0x67, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x74, 0x65,
	0x5f, 0x71, 0x71, 0x5f, 0x61, 0x70, 0x70, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x08, 0x48, 0x0d, 0x52,
	0x0d, 0x67, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x74, 0x65, 0x51, 0x71, 0x41, 0x70, 0x70, 0x88, 0x01,
	0x01, 0x12, 0x33, 0x0a, 0x13, 0x67, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x74, 0x65, 0x5f, 0x73, 0x63,
	0x68, 0x65, 0x6d, 0x61, 0x5f, 0x75, 0x72, 0x6c, 0x18, 0x10, 0x20, 0x01, 0x28, 0x08, 0x48, 0x0e,
	0x52, 0x11, 0x67, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x74, 0x65, 0x53, 0x63, 0x68, 0x65, 0x6d, 0x61,
	0x55, 0x72, 0x6c, 0x88, 0x01, 0x01, 0x12, 0x20, 0x0a, 0x09, 0x73, 0x65, 0x61, 0x72, 0x63, 0x68,
	0x5f, 0x69, 0x64, 0x18, 0x11, 0x20, 0x01, 0x28, 0x09, 0x48, 0x0f, 0x52, 0x08, 0x73, 0x65, 0x61,
	0x72, 0x63, 0x68, 0x49, 0x64, 0x88, 0x01, 0x01, 0x12, 0x25, 0x0a, 0x0c, 0x66, 0x6f, 0x72, 0x63,
	0x65, 0x5f, 0x64, 0x75, 0x6f, 0x5f, 0x69, 0x64, 0x18, 0x12, 0x20, 0x01, 0x28, 0x08, 0x48, 0x10,
	0x52, 0x0a, 0x66, 0x6f, 0x72, 0x63, 0x65, 0x44, 0x75, 0x6f, 0x49, 0x64, 0x88, 0x01, 0x01, 0x12,
	0x27, 0x0a, 0x0d, 0x67, 0x6f, 0x6f, 0x64, 0x73, 0x5f, 0x69, 0x64, 0x5f, 0x6c, 0x69, 0x73, 0x74,
	0x18, 0x13, 0x20, 0x01, 0x28, 0x09, 0x48, 0x11, 0x52, 0x0b, 0x67, 0x6f, 0x6f, 0x64, 0x73, 0x49,
	0x64, 0x4c, 0x69, 0x73, 0x74, 0x88, 0x01, 0x01, 0x12, 0x23, 0x0a, 0x0b, 0x70, 0x64, 0x64, 0x5f,
	0x61, 0x75, 0x74, 0x68, 0x5f, 0x69, 0x64, 0x18, 0x14, 0x20, 0x01, 0x28, 0x09, 0x48, 0x12, 0x52,
	0x09, 0x70, 0x64, 0x64, 0x41, 0x75, 0x74, 0x68, 0x49, 0x64, 0x88, 0x01, 0x01, 0x42, 0x06, 0x0a,
	0x04, 0x5f, 0x70, 0x69, 0x64, 0x42, 0x14, 0x0a, 0x12, 0x5f, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d,
	0x5f, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x65, 0x74, 0x65, 0x72, 0x73, 0x42, 0x0f, 0x0a, 0x0d, 0x5f,
	0x63, 0x61, 0x73, 0x68, 0x5f, 0x67, 0x69, 0x66, 0x74, 0x5f, 0x69, 0x64, 0x42, 0x11, 0x0a, 0x0f,
	0x5f, 0x63, 0x61, 0x73, 0x68, 0x5f, 0x67, 0x69, 0x66, 0x74, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x42,
	0x0b, 0x0a, 0x09, 0x5f, 0x69, 0x74, 0x65, 0x6d, 0x49, 0x6e, 0x66, 0x6f, 0x42, 0x19, 0x0a, 0x17,
	0x5f, 0x67, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x74, 0x65, 0x5f, 0x61, 0x75, 0x74, 0x68, 0x6f, 0x72,
	0x69, 0x74, 0x79, 0x5f, 0x75, 0x72, 0x6c, 0x42, 0x15, 0x0a, 0x13, 0x5f, 0x67, 0x65, 0x6e, 0x65,
	0x72, 0x61, 0x74, 0x65, 0x5f, 0x73, 0x68, 0x6f, 0x72, 0x74, 0x5f, 0x75, 0x72, 0x6c, 0x42, 0x0e,
	0x0a, 0x0c, 0x5f, 0x6d, 0x75, 0x6c, 0x74, 0x69, 0x5f, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x42, 0x19,
	0x0a, 0x17, 0x5f, 0x67, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x74, 0x65, 0x5f, 0x77, 0x65, 0x61, 0x70,
	0x70, 0x5f, 0x77, 0x65, 0x62, 0x76, 0x69, 0x65, 0x77, 0x42, 0x0c, 0x0a, 0x0a, 0x5f, 0x7a, 0x73,
	0x5f, 0x64, 0x75, 0x6f, 0x5f, 0x69, 0x64, 0x42, 0x12, 0x0a, 0x10, 0x5f, 0x67, 0x65, 0x6e, 0x65,
	0x72, 0x61, 0x74, 0x65, 0x5f, 0x77, 0x65, 0x5f, 0x61, 0x70, 0x70, 0x42, 0x1c, 0x0a, 0x1a, 0x5f,
	0x67, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x74, 0x65, 0x5f, 0x77, 0x65, 0x69, 0x62, 0x6f, 0x61, 0x70,
	0x70, 0x5f, 0x77, 0x65, 0x62, 0x76, 0x69, 0x65, 0x77, 0x42, 0x1f, 0x0a, 0x1d, 0x5f, 0x67, 0x65,
	0x6e, 0x65, 0x72, 0x61, 0x74, 0x65, 0x5f, 0x6d, 0x61, 0x6c, 0x6c, 0x5f, 0x63, 0x6f, 0x6c, 0x6c,
	0x65, 0x63, 0x74, 0x5f, 0x63, 0x6f, 0x75, 0x70, 0x6f, 0x6e, 0x42, 0x12, 0x0a, 0x10, 0x5f, 0x67,
	0x65, 0x6e, 0x65, 0x72, 0x61, 0x74, 0x65, 0x5f, 0x71, 0x71, 0x5f, 0x61, 0x70, 0x70, 0x42, 0x16,
	0x0a, 0x14, 0x5f, 0x67, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x74, 0x65, 0x5f, 0x73, 0x63, 0x68, 0x65,
	0x6d, 0x61, 0x5f, 0x75, 0x72, 0x6c, 0x42, 0x0c, 0x0a, 0x0a, 0x5f, 0x73, 0x65, 0x61, 0x72, 0x63,
	0x68, 0x5f, 0x69, 0x64, 0x42, 0x0f, 0x0a, 0x0d, 0x5f, 0x66, 0x6f, 0x72, 0x63, 0x65, 0x5f, 0x64,
	0x75, 0x6f, 0x5f, 0x69, 0x64, 0x42, 0x10, 0x0a, 0x0e, 0x5f, 0x67, 0x6f, 0x6f, 0x64, 0x73, 0x5f,
	0x69, 0x64, 0x5f, 0x6c, 0x69, 0x73, 0x74, 0x42, 0x0e, 0x0a, 0x0c, 0x5f, 0x70, 0x64, 0x64, 0x5f,
	0x61, 0x75, 0x74, 0x68, 0x5f, 0x69, 0x64, 0x22, 0x63, 0x0a, 0x11, 0x50, 0x72, 0x6f, 0x6d, 0x6f,
	0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x12, 0x0a, 0x04,
	0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65,
	0x12, 0x10, 0x0a, 0x03, 0x6d, 0x73, 0x67, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6d,
	0x73, 0x67, 0x12, 0x28, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x14, 0x2e, 0x70, 0x64, 0x64, 0x78, 0x70, 0x62, 0x2e, 0x50, 0x72, 0x6f, 0x6d, 0x6f, 0x74,
	0x65, 0x64, 0x44, 0x61, 0x74, 0x61, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x32, 0x8c, 0x03, 0x0a,
	0x0d, 0x50, 0x64, 0x64, 0x41, 0x70, 0x69, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x51,
	0x0a, 0x0e, 0x41, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x69, 0x74, 0x79, 0x51, 0x75, 0x65, 0x72, 0x79,
	0x12, 0x1d, 0x2e, 0x70, 0x64, 0x64, 0x78, 0x70, 0x62, 0x2e, 0x41, 0x75, 0x74, 0x68, 0x6f, 0x72,
	0x69, 0x74, 0x79, 0x51, 0x75, 0x65, 0x72, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x1e, 0x2e, 0x70, 0x64, 0x64, 0x78, 0x70, 0x62, 0x2e, 0x41, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x69,
	0x74, 0x79, 0x51, 0x75, 0x65, 0x72, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22,
	0x00, 0x12, 0x5d, 0x0a, 0x12, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x4d, 0x61, 0x72, 0x6b, 0x65,
	0x74, 0x69, 0x6e, 0x67, 0x55, 0x52, 0x4c, 0x12, 0x21, 0x2e, 0x70, 0x64, 0x64, 0x78, 0x70, 0x62,
	0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x4d, 0x61, 0x72, 0x6b, 0x65, 0x74, 0x69, 0x6e, 0x67,
	0x55, 0x52, 0x4c, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x22, 0x2e, 0x70, 0x64, 0x64,
	0x78, 0x70, 0x62, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x4d, 0x61, 0x72, 0x6b, 0x65, 0x74,
	0x69, 0x6e, 0x67, 0x55, 0x52, 0x4c, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00,
	0x12, 0x45, 0x0a, 0x0a, 0x55, 0x52, 0x4c, 0x43, 0x6f, 0x6e, 0x76, 0x65, 0x72, 0x74, 0x12, 0x19,
	0x2e, 0x70, 0x64, 0x64, 0x78, 0x70, 0x62, 0x2e, 0x55, 0x52, 0x4c, 0x43, 0x6f, 0x6e, 0x76, 0x65,
	0x72, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1a, 0x2e, 0x70, 0x64, 0x64, 0x78,
	0x70, 0x62, 0x2e, 0x55, 0x52, 0x4c, 0x43, 0x6f, 0x6e, 0x76, 0x65, 0x72, 0x74, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x42, 0x0a, 0x09, 0x50, 0x72, 0x6f, 0x6d, 0x6f,
	0x74, 0x69, 0x6f, 0x6e, 0x12, 0x18, 0x2e, 0x70, 0x64, 0x64, 0x78, 0x70, 0x62, 0x2e, 0x50, 0x72,
	0x6f, 0x6d, 0x6f, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x19,
	0x2e, 0x70, 0x64, 0x64, 0x78, 0x70, 0x62, 0x2e, 0x50, 0x72, 0x6f, 0x6d, 0x6f, 0x74, 0x69, 0x6f,
	0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x3e, 0x0a, 0x0b, 0x47,
	0x6f, 0x6f, 0x64, 0x73, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x12, 0x15, 0x2e, 0x70, 0x64, 0x64,
	0x78, 0x70, 0x62, 0x2e, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x16, 0x2e, 0x70, 0x64, 0x64, 0x78, 0x70, 0x62, 0x2e, 0x53, 0x65, 0x61, 0x72, 0x63,
	0x68, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x42, 0x09, 0x5a, 0x07, 0x2f,
	0x70, 0x64, 0x64, 0x78, 0x70, 0x62, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_api_pdd_ddx_proto_rawDescOnce sync.Once
	file_api_pdd_ddx_proto_rawDescData = file_api_pdd_ddx_proto_rawDesc
)

func file_api_pdd_ddx_proto_rawDescGZIP() []byte {
	file_api_pdd_ddx_proto_rawDescOnce.Do(func() {
		file_api_pdd_ddx_proto_rawDescData = protoimpl.X.CompressGZIP(file_api_pdd_ddx_proto_rawDescData)
	})
	return file_api_pdd_ddx_proto_rawDescData
}

var file_api_pdd_ddx_proto_msgTypes = make([]protoimpl.MessageInfo, 20)
var file_api_pdd_ddx_proto_goTypes = []interface{}{
	(*AuthorityQueryData)(nil),         // 0: pddxpb.AuthorityQueryData
	(*AuthorityQueryRequest)(nil),      // 1: pddxpb.AuthorityQueryRequest
	(*AuthorityQueryResponse)(nil),     // 2: pddxpb.AuthorityQueryResponse
	(*Resource)(nil),                   // 3: pddxpb.Resource
	(*QQAppInfo)(nil),                  // 4: pddxpb.QQAppInfo
	(*WeAppInfo)(nil),                  // 5: pddxpb.WeAppInfo
	(*URLInfo)(nil),                    // 6: pddxpb.URLInfo
	(*MarketingURLData)(nil),           // 7: pddxpb.MarketingURLData
	(*CreateMarketingURLRequest)(nil),  // 8: pddxpb.CreateMarketingURLRequest
	(*CreateMarketingURLResponse)(nil), // 9: pddxpb.CreateMarketingURLResponse
	(*ItemInfo)(nil),                   // 10: pddxpb.ItemInfo
	(*URLConvertData)(nil),             // 11: pddxpb.URLConvertData
	(*URLConvertRequest)(nil),          // 12: pddxpb.URLConvertRequest
	(*URLConvertResponse)(nil),         // 13: pddxpb.URLConvertResponse
	(*SearchData)(nil),                 // 14: pddxpb.SearchData
	(*SearchRequest)(nil),              // 15: pddxpb.SearchRequest
	(*SearchResponse)(nil),             // 16: pddxpb.SearchResponse
	(*PromotedData)(nil),               // 17: pddxpb.PromotedData
	(*PromotionRequest)(nil),           // 18: pddxpb.PromotionRequest
	(*PromotionResponse)(nil),          // 19: pddxpb.PromotionResponse
}
var file_api_pdd_ddx_proto_depIdxs = []int32{
	0,  // 0: pddxpb.AuthorityQueryResponse.data:type_name -> pddxpb.AuthorityQueryData
	4,  // 1: pddxpb.URLInfo.qq_app_info:type_name -> pddxpb.QQAppInfo
	5,  // 2: pddxpb.URLInfo.we_app_info:type_name -> pddxpb.WeAppInfo
	3,  // 3: pddxpb.MarketingURLData.resource_list:type_name -> pddxpb.Resource
	6,  // 4: pddxpb.MarketingURLData.url_list:type_name -> pddxpb.URLInfo
	7,  // 5: pddxpb.CreateMarketingURLResponse.data:type_name -> pddxpb.MarketingURLData
	10, // 6: pddxpb.URLConvertData.itemInfo:type_name -> pddxpb.ItemInfo
	11, // 7: pddxpb.URLConvertResponse.data:type_name -> pddxpb.URLConvertData
	14, // 8: pddxpb.SearchResponse.data:type_name -> pddxpb.SearchData
	5,  // 9: pddxpb.PromotedData.we_app_info:type_name -> pddxpb.WeAppInfo
	10, // 10: pddxpb.PromotedData.itemInfo:type_name -> pddxpb.ItemInfo
	17, // 11: pddxpb.PromotionResponse.data:type_name -> pddxpb.PromotedData
	1,  // 12: pddxpb.PddApiService.AuthorityQuery:input_type -> pddxpb.AuthorityQueryRequest
	8,  // 13: pddxpb.PddApiService.CreateMarketingURL:input_type -> pddxpb.CreateMarketingURLRequest
	12, // 14: pddxpb.PddApiService.URLConvert:input_type -> pddxpb.URLConvertRequest
	18, // 15: pddxpb.PddApiService.Promotion:input_type -> pddxpb.PromotionRequest
	15, // 16: pddxpb.PddApiService.GoodsSearch:input_type -> pddxpb.SearchRequest
	2,  // 17: pddxpb.PddApiService.AuthorityQuery:output_type -> pddxpb.AuthorityQueryResponse
	9,  // 18: pddxpb.PddApiService.CreateMarketingURL:output_type -> pddxpb.CreateMarketingURLResponse
	13, // 19: pddxpb.PddApiService.URLConvert:output_type -> pddxpb.URLConvertResponse
	19, // 20: pddxpb.PddApiService.Promotion:output_type -> pddxpb.PromotionResponse
	16, // 21: pddxpb.PddApiService.GoodsSearch:output_type -> pddxpb.SearchResponse
	17, // [17:22] is the sub-list for method output_type
	12, // [12:17] is the sub-list for method input_type
	12, // [12:12] is the sub-list for extension type_name
	12, // [12:12] is the sub-list for extension extendee
	0,  // [0:12] is the sub-list for field type_name
}

func init() { file_api_pdd_ddx_proto_init() }
func file_api_pdd_ddx_proto_init() {
	if File_api_pdd_ddx_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_api_pdd_ddx_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AuthorityQueryData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_pdd_ddx_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AuthorityQueryRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_pdd_ddx_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AuthorityQueryResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_pdd_ddx_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Resource); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_pdd_ddx_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*QQAppInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_pdd_ddx_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*WeAppInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_pdd_ddx_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*URLInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_pdd_ddx_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MarketingURLData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_pdd_ddx_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateMarketingURLRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_pdd_ddx_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateMarketingURLResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_pdd_ddx_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ItemInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_pdd_ddx_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*URLConvertData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_pdd_ddx_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*URLConvertRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_pdd_ddx_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*URLConvertResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_pdd_ddx_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SearchData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_pdd_ddx_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SearchRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_pdd_ddx_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SearchResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_pdd_ddx_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PromotedData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_pdd_ddx_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PromotionRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_pdd_ddx_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PromotionResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_api_pdd_ddx_proto_msgTypes[1].OneofWrappers = []interface{}{}
	file_api_pdd_ddx_proto_msgTypes[8].OneofWrappers = []interface{}{}
	file_api_pdd_ddx_proto_msgTypes[11].OneofWrappers = []interface{}{}
	file_api_pdd_ddx_proto_msgTypes[12].OneofWrappers = []interface{}{}
	file_api_pdd_ddx_proto_msgTypes[15].OneofWrappers = []interface{}{}
	file_api_pdd_ddx_proto_msgTypes[18].OneofWrappers = []interface{}{}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_api_pdd_ddx_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   20,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_api_pdd_ddx_proto_goTypes,
		DependencyIndexes: file_api_pdd_ddx_proto_depIdxs,
		MessageInfos:      file_api_pdd_ddx_proto_msgTypes,
	}.Build()
	File_api_pdd_ddx_proto = out.File
	file_api_pdd_ddx_proto_rawDesc = nil
	file_api_pdd_ddx_proto_goTypes = nil
	file_api_pdd_ddx_proto_depIdxs = nil
}
