// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.26.0
// 	protoc        v3.15.8
// source: api.pdd.ddx.proto

package pddxpb

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// API: http://api.tbk.dingdanxia.com/pdd/authority_query
type AuthorityQueryData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Bind string `protobuf:"bytes,1,opt,name=bind,proto3" json:"bind,omitempty"` // 1-已绑定；0-未绑定
}

func (x *AuthorityQueryData) Reset() {
	*x = AuthorityQueryData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_pdd_ddx_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AuthorityQueryData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AuthorityQueryData) ProtoMessage() {}

func (x *AuthorityQueryData) ProtoReflect() protoreflect.Message {
	mi := &file_api_pdd_ddx_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AuthorityQueryData.ProtoReflect.Descriptor instead.
func (*AuthorityQueryData) Descriptor() ([]byte, []int) {
	return file_api_pdd_ddx_proto_rawDescGZIP(), []int{0}
}

func (x *AuthorityQueryData) GetBind() string {
	if x != nil {
		return x.Bind
	}
	return ""
}

type AuthorityQueryRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Pid              string  `protobuf:"bytes,1,opt,name=pid,proto3" json:"pid,omitempty"`                                                         // 推广位id
	CustomParameters *string `protobuf:"bytes,2,opt,name=custom_parameters,json=customParameters,proto3,oneof" json:"custom_parameters,omitempty"` // 自定义参数，为链接打上自定义标签；自定义参数最长限制64个字节；格式为： {"uid":"11111","sid":"22222"} ，其中 uid 用户唯一标识，可自行加密后传入，每个用户仅且对应一个标识，必填； sid 上下文信息标识，例如sessionId等，非必填。该json字符串中也可以加入其他自定义的key
	PddAuthId        *string `protobuf:"bytes,3,opt,name=pdd_auth_id,json=pddAuthId,proto3,oneof" json:"pdd_auth_id,omitempty"`                    // 切换授权参数
}

func (x *AuthorityQueryRequest) Reset() {
	*x = AuthorityQueryRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_pdd_ddx_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AuthorityQueryRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AuthorityQueryRequest) ProtoMessage() {}

func (x *AuthorityQueryRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_pdd_ddx_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AuthorityQueryRequest.ProtoReflect.Descriptor instead.
func (*AuthorityQueryRequest) Descriptor() ([]byte, []int) {
	return file_api_pdd_ddx_proto_rawDescGZIP(), []int{1}
}

func (x *AuthorityQueryRequest) GetPid() string {
	if x != nil {
		return x.Pid
	}
	return ""
}

func (x *AuthorityQueryRequest) GetCustomParameters() string {
	if x != nil && x.CustomParameters != nil {
		return *x.CustomParameters
	}
	return ""
}

func (x *AuthorityQueryRequest) GetPddAuthId() string {
	if x != nil && x.PddAuthId != nil {
		return *x.PddAuthId
	}
	return ""
}

type AuthorityQueryResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code int32               `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Msg  string              `protobuf:"bytes,2,opt,name=msg,proto3" json:"msg,omitempty"`
	Data *AuthorityQueryData `protobuf:"bytes,3,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *AuthorityQueryResponse) Reset() {
	*x = AuthorityQueryResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_pdd_ddx_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AuthorityQueryResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AuthorityQueryResponse) ProtoMessage() {}

func (x *AuthorityQueryResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_pdd_ddx_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AuthorityQueryResponse.ProtoReflect.Descriptor instead.
func (*AuthorityQueryResponse) Descriptor() ([]byte, []int) {
	return file_api_pdd_ddx_proto_rawDescGZIP(), []int{2}
}

func (x *AuthorityQueryResponse) GetCode() int32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *AuthorityQueryResponse) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

func (x *AuthorityQueryResponse) GetData() *AuthorityQueryData {
	if x != nil {
		return x.Data
	}
	return nil
}

// API: http://api.tbk.dingdanxia.com/pdd/prom_url_generate
type Resource struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Desc string `protobuf:"bytes,1,opt,name=desc,proto3" json:"desc,omitempty"` // 活动描述
	Url  string `protobuf:"bytes,2,opt,name=url,proto3" json:"url,omitempty"`   // 活动地址
}

func (x *Resource) Reset() {
	*x = Resource{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_pdd_ddx_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Resource) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Resource) ProtoMessage() {}

func (x *Resource) ProtoReflect() protoreflect.Message {
	mi := &file_api_pdd_ddx_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Resource.ProtoReflect.Descriptor instead.
func (*Resource) Descriptor() ([]byte, []int) {
	return file_api_pdd_ddx_proto_rawDescGZIP(), []int{3}
}

func (x *Resource) GetDesc() string {
	if x != nil {
		return x.Desc
	}
	return ""
}

func (x *Resource) GetUrl() string {
	if x != nil {
		return x.Url
	}
	return ""
}

type QQAppInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AppId             string `protobuf:"bytes,1,opt,name=app_id,json=appId,proto3" json:"app_id,omitempty"`
	BannerUrl         string `protobuf:"bytes,2,opt,name=banner_url,json=bannerUrl,proto3" json:"banner_url,omitempty"`
	Desc              string `protobuf:"bytes,3,opt,name=desc,proto3" json:"desc,omitempty"`
	PagePath          string `protobuf:"bytes,4,opt,name=page_path,json=pagePath,proto3" json:"page_path,omitempty"`
	QqAppIconUrl      string `protobuf:"bytes,5,opt,name=qq_app_icon_url,json=qqAppIconUrl,proto3" json:"qq_app_icon_url,omitempty"`
	SourceDisplayName string `protobuf:"bytes,6,opt,name=source_display_name,json=sourceDisplayName,proto3" json:"source_display_name,omitempty"`
	Title             string `protobuf:"bytes,7,opt,name=title,proto3" json:"title,omitempty"`
	UserName          string `protobuf:"bytes,8,opt,name=user_name,json=userName,proto3" json:"user_name,omitempty"`
}

func (x *QQAppInfo) Reset() {
	*x = QQAppInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_pdd_ddx_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *QQAppInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QQAppInfo) ProtoMessage() {}

func (x *QQAppInfo) ProtoReflect() protoreflect.Message {
	mi := &file_api_pdd_ddx_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QQAppInfo.ProtoReflect.Descriptor instead.
func (*QQAppInfo) Descriptor() ([]byte, []int) {
	return file_api_pdd_ddx_proto_rawDescGZIP(), []int{4}
}

func (x *QQAppInfo) GetAppId() string {
	if x != nil {
		return x.AppId
	}
	return ""
}

func (x *QQAppInfo) GetBannerUrl() string {
	if x != nil {
		return x.BannerUrl
	}
	return ""
}

func (x *QQAppInfo) GetDesc() string {
	if x != nil {
		return x.Desc
	}
	return ""
}

func (x *QQAppInfo) GetPagePath() string {
	if x != nil {
		return x.PagePath
	}
	return ""
}

func (x *QQAppInfo) GetQqAppIconUrl() string {
	if x != nil {
		return x.QqAppIconUrl
	}
	return ""
}

func (x *QQAppInfo) GetSourceDisplayName() string {
	if x != nil {
		return x.SourceDisplayName
	}
	return ""
}

func (x *QQAppInfo) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *QQAppInfo) GetUserName() string {
	if x != nil {
		return x.UserName
	}
	return ""
}

type WeAppInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AppId             string `protobuf:"bytes,1,opt,name=app_id,json=appId,proto3" json:"app_id,omitempty"`
	BannerUrl         string `protobuf:"bytes,2,opt,name=banner_url,json=bannerUrl,proto3" json:"banner_url,omitempty"`
	Desc              string `protobuf:"bytes,3,opt,name=desc,proto3" json:"desc,omitempty"`
	PagePath          string `protobuf:"bytes,4,opt,name=page_path,json=pagePath,proto3" json:"page_path,omitempty"`
	WeAppIconUrl      string `protobuf:"bytes,5,opt,name=we_app_icon_url,json=weAppIconUrl,proto3" json:"we_app_icon_url,omitempty"`
	SourceDisplayName string `protobuf:"bytes,6,opt,name=source_display_name,json=sourceDisplayName,proto3" json:"source_display_name,omitempty"`
	Title             string `protobuf:"bytes,7,opt,name=title,proto3" json:"title,omitempty"`
	UserName          string `protobuf:"bytes,8,opt,name=user_name,json=userName,proto3" json:"user_name,omitempty"`
}

func (x *WeAppInfo) Reset() {
	*x = WeAppInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_pdd_ddx_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WeAppInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WeAppInfo) ProtoMessage() {}

func (x *WeAppInfo) ProtoReflect() protoreflect.Message {
	mi := &file_api_pdd_ddx_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WeAppInfo.ProtoReflect.Descriptor instead.
func (*WeAppInfo) Descriptor() ([]byte, []int) {
	return file_api_pdd_ddx_proto_rawDescGZIP(), []int{5}
}

func (x *WeAppInfo) GetAppId() string {
	if x != nil {
		return x.AppId
	}
	return ""
}

func (x *WeAppInfo) GetBannerUrl() string {
	if x != nil {
		return x.BannerUrl
	}
	return ""
}

func (x *WeAppInfo) GetDesc() string {
	if x != nil {
		return x.Desc
	}
	return ""
}

func (x *WeAppInfo) GetPagePath() string {
	if x != nil {
		return x.PagePath
	}
	return ""
}

func (x *WeAppInfo) GetWeAppIconUrl() string {
	if x != nil {
		return x.WeAppIconUrl
	}
	return ""
}

func (x *WeAppInfo) GetSourceDisplayName() string {
	if x != nil {
		return x.SourceDisplayName
	}
	return ""
}

func (x *WeAppInfo) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *WeAppInfo) GetUserName() string {
	if x != nil {
		return x.UserName
	}
	return ""
}

type URLInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MobileShortUrl           string     `protobuf:"bytes,1,opt,name=mobile_short_url,json=mobileShortUrl,proto3" json:"mobile_short_url,omitempty"`
	MobileUrl                string     `protobuf:"bytes,2,opt,name=mobile_url,json=mobileUrl,proto3" json:"mobile_url,omitempty"`
	MultiGroupMobileShortUrl string     `protobuf:"bytes,3,opt,name=multi_group_mobile_short_url,json=multiGroupMobileShortUrl,proto3" json:"multi_group_mobile_short_url,omitempty"`
	MultiGroupMobileUrl      string     `protobuf:"bytes,4,opt,name=multi_group_mobile_url,json=multiGroupMobileUrl,proto3" json:"multi_group_mobile_url,omitempty"`
	MultiGroupShortUrl       string     `protobuf:"bytes,5,opt,name=multi_group_short_url,json=multiGroupShortUrl,proto3" json:"multi_group_short_url,omitempty"`
	MultiGroupUrl            string     `protobuf:"bytes,6,opt,name=multi_group_url,json=multiGroupUrl,proto3" json:"multi_group_url,omitempty"`
	QqAppInfo                *QQAppInfo `protobuf:"bytes,7,opt,name=qq_app_info,json=qqAppInfo,proto3" json:"qq_app_info,omitempty"`
	SchemaUrl                string     `protobuf:"bytes,8,opt,name=schema_url,json=schemaUrl,proto3" json:"schema_url,omitempty"`
	ShortUrl                 string     `protobuf:"bytes,9,opt,name=short_url,json=shortUrl,proto3" json:"short_url,omitempty"`
	Url                      string     `protobuf:"bytes,10,opt,name=url,proto3" json:"url,omitempty"`
	WeAppInfo                *WeAppInfo `protobuf:"bytes,11,opt,name=we_app_info,json=weAppInfo,proto3" json:"we_app_info,omitempty"`
}

func (x *URLInfo) Reset() {
	*x = URLInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_pdd_ddx_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *URLInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*URLInfo) ProtoMessage() {}

func (x *URLInfo) ProtoReflect() protoreflect.Message {
	mi := &file_api_pdd_ddx_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use URLInfo.ProtoReflect.Descriptor instead.
func (*URLInfo) Descriptor() ([]byte, []int) {
	return file_api_pdd_ddx_proto_rawDescGZIP(), []int{6}
}

func (x *URLInfo) GetMobileShortUrl() string {
	if x != nil {
		return x.MobileShortUrl
	}
	return ""
}

func (x *URLInfo) GetMobileUrl() string {
	if x != nil {
		return x.MobileUrl
	}
	return ""
}

func (x *URLInfo) GetMultiGroupMobileShortUrl() string {
	if x != nil {
		return x.MultiGroupMobileShortUrl
	}
	return ""
}

func (x *URLInfo) GetMultiGroupMobileUrl() string {
	if x != nil {
		return x.MultiGroupMobileUrl
	}
	return ""
}

func (x *URLInfo) GetMultiGroupShortUrl() string {
	if x != nil {
		return x.MultiGroupShortUrl
	}
	return ""
}

func (x *URLInfo) GetMultiGroupUrl() string {
	if x != nil {
		return x.MultiGroupUrl
	}
	return ""
}

func (x *URLInfo) GetQqAppInfo() *QQAppInfo {
	if x != nil {
		return x.QqAppInfo
	}
	return nil
}

func (x *URLInfo) GetSchemaUrl() string {
	if x != nil {
		return x.SchemaUrl
	}
	return ""
}

func (x *URLInfo) GetShortUrl() string {
	if x != nil {
		return x.ShortUrl
	}
	return ""
}

func (x *URLInfo) GetUrl() string {
	if x != nil {
		return x.Url
	}
	return ""
}

func (x *URLInfo) GetWeAppInfo() *WeAppInfo {
	if x != nil {
		return x.WeAppInfo
	}
	return nil
}

type MarketingURLData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ResourceList []*Resource `protobuf:"bytes,1,rep,name=resource_list,json=resourceList,proto3" json:"resource_list,omitempty"`
	UrlList      []*URLInfo  `protobuf:"bytes,2,rep,name=url_list,json=urlList,proto3" json:"url_list,omitempty"`
}

func (x *MarketingURLData) Reset() {
	*x = MarketingURLData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_pdd_ddx_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MarketingURLData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MarketingURLData) ProtoMessage() {}

func (x *MarketingURLData) ProtoReflect() protoreflect.Message {
	mi := &file_api_pdd_ddx_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MarketingURLData.ProtoReflect.Descriptor instead.
func (*MarketingURLData) Descriptor() ([]byte, []int) {
	return file_api_pdd_ddx_proto_rawDescGZIP(), []int{7}
}

func (x *MarketingURLData) GetResourceList() []*Resource {
	if x != nil {
		return x.ResourceList
	}
	return nil
}

func (x *MarketingURLData) GetUrlList() []*URLInfo {
	if x != nil {
		return x.UrlList
	}
	return nil
}

type CreateMarketingURLRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PIdList           string  `protobuf:"bytes,1,opt,name=p_id_list,json=pIdList,proto3" json:"p_id_list,omitempty"`                                      // 推广位，例如：8735184_70977074
	CustomParameters  *string `protobuf:"bytes,2,opt,name=custom_parameters,json=customParameters,proto3,oneof" json:"custom_parameters,omitempty"`       // 自定义参数，为链接打上自定义标签；自定义参数最长限制64个字节；
	GenerateQqApp     *bool   `protobuf:"varint,3,opt,name=generate_qq_app,json=generateQqApp,proto3,oneof" json:"generate_qq_app,omitempty"`             // 是否生成qq小程序
	GenerateSchemaUrl *bool   `protobuf:"varint,4,opt,name=generate_schema_url,json=generateSchemaUrl,proto3,oneof" json:"generate_schema_url,omitempty"` // 是否返回 schema URL
	GenerateShortUrl  *bool   `protobuf:"varint,5,opt,name=generate_short_url,json=generateShortUrl,proto3,oneof" json:"generate_short_url,omitempty"`    // 是否生成短链接。true-是，false-否，默认false
	GenerateWeApp     *bool   `protobuf:"varint,6,opt,name=generate_we_app,json=generateWeApp,proto3,oneof" json:"generate_we_app,omitempty"`             // 是否生成小程序推广
	ChannelType       int32   `protobuf:"varint,7,opt,name=channel_type,json=channelType,proto3" json:"channel_type,omitempty"`                           // 营销工具类型，必填：-1-活动列表，0-红包(需申请推广权限)，2–新人红包，3-刮刮卡，5-员工内购，6-购物车，10-生成绑定备案链接，12-砸金蛋，13-一元购，14-千万补贴B端页面，15-充值中心B端页面
	ScratchCardAmount *uint64 `protobuf:"varint,8,opt,name=scratch_card_amount,json=scratchCardAmount,proto3,oneof" json:"scratch_card_amount,omitempty"` // 刮刮卡指定金额（单位分），可指定2-100元间数值，即有效区间为：[200,10000]
	PddAuthId         *string `protobuf:"bytes,9,opt,name=pdd_auth_id,json=pddAuthId,proto3,oneof" json:"pdd_auth_id,omitempty"`                          // 切换授权参数
}

func (x *CreateMarketingURLRequest) Reset() {
	*x = CreateMarketingURLRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_pdd_ddx_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateMarketingURLRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateMarketingURLRequest) ProtoMessage() {}

func (x *CreateMarketingURLRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_pdd_ddx_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateMarketingURLRequest.ProtoReflect.Descriptor instead.
func (*CreateMarketingURLRequest) Descriptor() ([]byte, []int) {
	return file_api_pdd_ddx_proto_rawDescGZIP(), []int{8}
}

func (x *CreateMarketingURLRequest) GetPIdList() string {
	if x != nil {
		return x.PIdList
	}
	return ""
}

func (x *CreateMarketingURLRequest) GetCustomParameters() string {
	if x != nil && x.CustomParameters != nil {
		return *x.CustomParameters
	}
	return ""
}

func (x *CreateMarketingURLRequest) GetGenerateQqApp() bool {
	if x != nil && x.GenerateQqApp != nil {
		return *x.GenerateQqApp
	}
	return false
}

func (x *CreateMarketingURLRequest) GetGenerateSchemaUrl() bool {
	if x != nil && x.GenerateSchemaUrl != nil {
		return *x.GenerateSchemaUrl
	}
	return false
}

func (x *CreateMarketingURLRequest) GetGenerateShortUrl() bool {
	if x != nil && x.GenerateShortUrl != nil {
		return *x.GenerateShortUrl
	}
	return false
}

func (x *CreateMarketingURLRequest) GetGenerateWeApp() bool {
	if x != nil && x.GenerateWeApp != nil {
		return *x.GenerateWeApp
	}
	return false
}

func (x *CreateMarketingURLRequest) GetChannelType() int32 {
	if x != nil {
		return x.ChannelType
	}
	return 0
}

func (x *CreateMarketingURLRequest) GetScratchCardAmount() uint64 {
	if x != nil && x.ScratchCardAmount != nil {
		return *x.ScratchCardAmount
	}
	return 0
}

func (x *CreateMarketingURLRequest) GetPddAuthId() string {
	if x != nil && x.PddAuthId != nil {
		return *x.PddAuthId
	}
	return ""
}

type CreateMarketingURLResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code int32             `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Msg  string            `protobuf:"bytes,2,opt,name=msg,proto3" json:"msg,omitempty"`
	Data *MarketingURLData `protobuf:"bytes,3,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *CreateMarketingURLResponse) Reset() {
	*x = CreateMarketingURLResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_pdd_ddx_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateMarketingURLResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateMarketingURLResponse) ProtoMessage() {}

func (x *CreateMarketingURLResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_pdd_ddx_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateMarketingURLResponse.ProtoReflect.Descriptor instead.
func (*CreateMarketingURLResponse) Descriptor() ([]byte, []int) {
	return file_api_pdd_ddx_proto_rawDescGZIP(), []int{9}
}

func (x *CreateMarketingURLResponse) GetCode() int32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *CreateMarketingURLResponse) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

func (x *CreateMarketingURLResponse) GetData() *MarketingURLData {
	if x != nil {
		return x.Data
	}
	return nil
}

// API: http://api.tbk.dingdanxia.com/pdd/url_convert
type ItemInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	GoodsName            string `protobuf:"bytes,1,opt,name=goods_name,json=goodsName,proto3" json:"goods_name,omitempty"`                                       // 商品名称
	GoodsId              uint64 `protobuf:"varint,2,opt,name=goods_id,json=goodsId,proto3" json:"goods_id,omitempty"`                                            // 商品ID
	MinNormalPrice       uint64 `protobuf:"varint,3,opt,name=min_normal_price,json=minNormalPrice,proto3" json:"min_normal_price,omitempty"`                     // 最小单买价格（单位为分）
	MinGroupPrice        uint64 `protobuf:"varint,4,opt,name=min_group_price,json=minGroupPrice,proto3" json:"min_group_price,omitempty"`                        // 最小拼团价（单位为分）
	PromotionRate        uint64 `protobuf:"varint,5,opt,name=promotion_rate,json=promotionRate,proto3" json:"promotion_rate,omitempty"`                          // 佣金比例，千分比
	PredictPromotionRate uint64 `protobuf:"varint,6,opt,name=predict_promotion_rate,json=predictPromotionRate,proto3" json:"predict_promotion_rate,omitempty"`   // 比价行为预判定佣金，需要用户备案
	CouponMinOrderAmount uint64 `protobuf:"varint,7,opt,name=coupon_min_order_amount,json=couponMinOrderAmount,proto3" json:"coupon_min_order_amount,omitempty"` // 优惠券门槛价格，单位为分
	CouponDiscount       uint64 `protobuf:"varint,8,opt,name=coupon_discount,json=couponDiscount,proto3" json:"coupon_discount,omitempty"`                       // 优惠券面额，单位为分
	CouponTotalQuantity  uint64 `protobuf:"varint,9,opt,name=coupon_total_quantity,json=couponTotalQuantity,proto3" json:"coupon_total_quantity,omitempty"`      // 优惠券总数量
	CouponRemainQuantity uint64 `protobuf:"varint,10,opt,name=coupon_remain_quantity,json=couponRemainQuantity,proto3" json:"coupon_remain_quantity,omitempty"`  // 优惠券剩余数量
	CouponStartTime      uint64 `protobuf:"varint,11,opt,name=coupon_start_time,json=couponStartTime,proto3" json:"coupon_start_time,omitempty"`                 // 优惠券生效时间，UNIX时间戳
	CouponEndTime        uint64 `protobuf:"varint,12,opt,name=coupon_end_time,json=couponEndTime,proto3" json:"coupon_end_time,omitempty"`                       // 优惠券失效时间，UNIX时间戳
	HasCoupon            bool   `protobuf:"varint,13,opt,name=has_coupon,json=hasCoupon,proto3" json:"has_coupon,omitempty"`                                     // 商品是否有优惠券 true-有，false-没有
}

func (x *ItemInfo) Reset() {
	*x = ItemInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_pdd_ddx_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ItemInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ItemInfo) ProtoMessage() {}

func (x *ItemInfo) ProtoReflect() protoreflect.Message {
	mi := &file_api_pdd_ddx_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ItemInfo.ProtoReflect.Descriptor instead.
func (*ItemInfo) Descriptor() ([]byte, []int) {
	return file_api_pdd_ddx_proto_rawDescGZIP(), []int{10}
}

func (x *ItemInfo) GetGoodsName() string {
	if x != nil {
		return x.GoodsName
	}
	return ""
}

func (x *ItemInfo) GetGoodsId() uint64 {
	if x != nil {
		return x.GoodsId
	}
	return 0
}

func (x *ItemInfo) GetMinNormalPrice() uint64 {
	if x != nil {
		return x.MinNormalPrice
	}
	return 0
}

func (x *ItemInfo) GetMinGroupPrice() uint64 {
	if x != nil {
		return x.MinGroupPrice
	}
	return 0
}

func (x *ItemInfo) GetPromotionRate() uint64 {
	if x != nil {
		return x.PromotionRate
	}
	return 0
}

func (x *ItemInfo) GetPredictPromotionRate() uint64 {
	if x != nil {
		return x.PredictPromotionRate
	}
	return 0
}

func (x *ItemInfo) GetCouponMinOrderAmount() uint64 {
	if x != nil {
		return x.CouponMinOrderAmount
	}
	return 0
}

func (x *ItemInfo) GetCouponDiscount() uint64 {
	if x != nil {
		return x.CouponDiscount
	}
	return 0
}

func (x *ItemInfo) GetCouponTotalQuantity() uint64 {
	if x != nil {
		return x.CouponTotalQuantity
	}
	return 0
}

func (x *ItemInfo) GetCouponRemainQuantity() uint64 {
	if x != nil {
		return x.CouponRemainQuantity
	}
	return 0
}

func (x *ItemInfo) GetCouponStartTime() uint64 {
	if x != nil {
		return x.CouponStartTime
	}
	return 0
}

func (x *ItemInfo) GetCouponEndTime() uint64 {
	if x != nil {
		return x.CouponEndTime
	}
	return 0
}

func (x *ItemInfo) GetHasCoupon() bool {
	if x != nil {
		return x.HasCoupon
	}
	return false
}

type URLConvertRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SourceUrl         string  `protobuf:"bytes,1,opt,name=source_url,json=sourceUrl,proto3" json:"source_url,omitempty"`                                 // 需转链/解析ID的链
	Pid               string  `protobuf:"bytes,2,opt,name=pid,proto3" json:"pid,omitempty"`                                                              // 渠道ID
	CustomParameters  *string `protobuf:"bytes,3,opt,name=custom_parameters,json=customParameters,proto3,oneof" json:"custom_parameters,omitempty"`      // 自定义参数，为链接打上自定义标签；自定义参数最长限制64个字节；格式为： {"uid":"11111","sid":"22222"} ，其中 uid 用户唯一标识，可自行加密后传入，每个用户仅且对应一个标识，必填； sid 上下文信息标识，例如sessionId等，非必填。该json字符串中也可以加入其他自定义的key
	GenerateSchemaUrl *string `protobuf:"bytes,4,opt,name=generate_schema_url,json=generateSchemaUrl,proto3,oneof" json:"generate_schema_url,omitempty"` // 是否返回 schema URL
	ItemInfo          *bool   `protobuf:"varint,5,opt,name=itemInfo,proto3,oneof" json:"itemInfo,omitempty"`                                             // 是否返回商品信息 包含商品标题、ID、价格、佣金、优惠券信息
}

func (x *URLConvertRequest) Reset() {
	*x = URLConvertRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_pdd_ddx_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *URLConvertRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*URLConvertRequest) ProtoMessage() {}

func (x *URLConvertRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_pdd_ddx_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use URLConvertRequest.ProtoReflect.Descriptor instead.
func (*URLConvertRequest) Descriptor() ([]byte, []int) {
	return file_api_pdd_ddx_proto_rawDescGZIP(), []int{11}
}

func (x *URLConvertRequest) GetSourceUrl() string {
	if x != nil {
		return x.SourceUrl
	}
	return ""
}

func (x *URLConvertRequest) GetPid() string {
	if x != nil {
		return x.Pid
	}
	return ""
}

func (x *URLConvertRequest) GetCustomParameters() string {
	if x != nil && x.CustomParameters != nil {
		return *x.CustomParameters
	}
	return ""
}

func (x *URLConvertRequest) GetGenerateSchemaUrl() string {
	if x != nil && x.GenerateSchemaUrl != nil {
		return *x.GenerateSchemaUrl
	}
	return ""
}

func (x *URLConvertRequest) GetItemInfo() bool {
	if x != nil && x.ItemInfo != nil {
		return *x.ItemInfo
	}
	return false
}

type URLConvertResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MobileShortUrl           string    `protobuf:"bytes,1,opt,name=mobile_short_url,json=mobileShortUrl,proto3" json:"mobile_short_url,omitempty"`                                   // 推广短链接（可唤起拼多多app）
	MobileUrl                string    `protobuf:"bytes,2,opt,name=mobile_url,json=mobileUrl,proto3" json:"mobile_url,omitempty"`                                                    // 推广长链接（唤起拼多多app）
	MultiGroupMobileShortUrl string    `protobuf:"bytes,3,opt,name=multi_group_mobile_short_url,json=multiGroupMobileShortUrl,proto3" json:"multi_group_mobile_short_url,omitempty"` // 推广短链接（唤起拼多多app）
	MultiGroupMobileUrl      string    `protobuf:"bytes,4,opt,name=multi_group_mobile_url,json=multiGroupMobileUrl,proto3" json:"multi_group_mobile_url,omitempty"`                  // 推广长链接（可唤起拼多多app）
	MultiGroupShortUrl       string    `protobuf:"bytes,5,opt,name=multi_group_short_url,json=multiGroupShortUrl,proto3" json:"multi_group_short_url,omitempty"`                     // 双人团推广短链接
	MultiGroupUrl            string    `protobuf:"bytes,6,opt,name=multi_group_url,json=multiGroupUrl,proto3" json:"multi_group_url,omitempty"`                                      // 双人团推广长链接
	SchemaUrl                string    `protobuf:"bytes,7,opt,name=schema_url,json=schemaUrl,proto3" json:"schema_url,omitempty"`                                                    // schema的链接
	ShortUrl                 string    `protobuf:"bytes,8,opt,name=short_url,json=shortUrl,proto3" json:"short_url,omitempty"`                                                       // 单人团推广短链接
	Url                      string    `protobuf:"bytes,9,opt,name=url,proto3" json:"url,omitempty"`                                                                                 // 单人团推广长链接
	GoodsId                  string    `protobuf:"bytes,10,opt,name=goods_id,json=goodsId,proto3" json:"goods_id,omitempty"`                                                         // 商品ID
	ItemInfo                 *ItemInfo `protobuf:"bytes,11,opt,name=itemInfo,proto3,oneof" json:"itemInfo,omitempty"`                                                                // 商品基本信息 itemInfo＝true 才会出
}

func (x *URLConvertResponse) Reset() {
	*x = URLConvertResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_pdd_ddx_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *URLConvertResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*URLConvertResponse) ProtoMessage() {}

func (x *URLConvertResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_pdd_ddx_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use URLConvertResponse.ProtoReflect.Descriptor instead.
func (*URLConvertResponse) Descriptor() ([]byte, []int) {
	return file_api_pdd_ddx_proto_rawDescGZIP(), []int{12}
}

func (x *URLConvertResponse) GetMobileShortUrl() string {
	if x != nil {
		return x.MobileShortUrl
	}
	return ""
}

func (x *URLConvertResponse) GetMobileUrl() string {
	if x != nil {
		return x.MobileUrl
	}
	return ""
}

func (x *URLConvertResponse) GetMultiGroupMobileShortUrl() string {
	if x != nil {
		return x.MultiGroupMobileShortUrl
	}
	return ""
}

func (x *URLConvertResponse) GetMultiGroupMobileUrl() string {
	if x != nil {
		return x.MultiGroupMobileUrl
	}
	return ""
}

func (x *URLConvertResponse) GetMultiGroupShortUrl() string {
	if x != nil {
		return x.MultiGroupShortUrl
	}
	return ""
}

func (x *URLConvertResponse) GetMultiGroupUrl() string {
	if x != nil {
		return x.MultiGroupUrl
	}
	return ""
}

func (x *URLConvertResponse) GetSchemaUrl() string {
	if x != nil {
		return x.SchemaUrl
	}
	return ""
}

func (x *URLConvertResponse) GetShortUrl() string {
	if x != nil {
		return x.ShortUrl
	}
	return ""
}

func (x *URLConvertResponse) GetUrl() string {
	if x != nil {
		return x.Url
	}
	return ""
}

func (x *URLConvertResponse) GetGoodsId() string {
	if x != nil {
		return x.GoodsId
	}
	return ""
}

func (x *URLConvertResponse) GetItemInfo() *ItemInfo {
	if x != nil {
		return x.ItemInfo
	}
	return nil
}

var File_api_pdd_ddx_proto protoreflect.FileDescriptor

var file_api_pdd_ddx_proto_rawDesc = []byte{
	0x0a, 0x11, 0x61, 0x70, 0x69, 0x2e, 0x70, 0x64, 0x64, 0x2e, 0x64, 0x64, 0x78, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x12, 0x06, 0x70, 0x64, 0x64, 0x78, 0x70, 0x62, 0x22, 0x28, 0x0a, 0x12, 0x41,
	0x75, 0x74, 0x68, 0x6f, 0x72, 0x69, 0x74, 0x79, 0x51, 0x75, 0x65, 0x72, 0x79, 0x44, 0x61, 0x74,
	0x61, 0x12, 0x12, 0x0a, 0x04, 0x62, 0x69, 0x6e, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x04, 0x62, 0x69, 0x6e, 0x64, 0x22, 0xa6, 0x01, 0x0a, 0x15, 0x41, 0x75, 0x74, 0x68, 0x6f, 0x72,
	0x69, 0x74, 0x79, 0x51, 0x75, 0x65, 0x72, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x10, 0x0a, 0x03, 0x70, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x70, 0x69,
	0x64, 0x12, 0x30, 0x0a, 0x11, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x5f, 0x70, 0x61, 0x72, 0x61,
	0x6d, 0x65, 0x74, 0x65, 0x72, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x10,
	0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x65, 0x74, 0x65, 0x72, 0x73,
	0x88, 0x01, 0x01, 0x12, 0x23, 0x0a, 0x0b, 0x70, 0x64, 0x64, 0x5f, 0x61, 0x75, 0x74, 0x68, 0x5f,
	0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x48, 0x01, 0x52, 0x09, 0x70, 0x64, 0x64, 0x41,
	0x75, 0x74, 0x68, 0x49, 0x64, 0x88, 0x01, 0x01, 0x42, 0x14, 0x0a, 0x12, 0x5f, 0x63, 0x75, 0x73,
	0x74, 0x6f, 0x6d, 0x5f, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x65, 0x74, 0x65, 0x72, 0x73, 0x42, 0x0e,
	0x0a, 0x0c, 0x5f, 0x70, 0x64, 0x64, 0x5f, 0x61, 0x75, 0x74, 0x68, 0x5f, 0x69, 0x64, 0x22, 0x6e,
	0x0a, 0x16, 0x41, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x69, 0x74, 0x79, 0x51, 0x75, 0x65, 0x72, 0x79,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x10, 0x0a, 0x03,
	0x6d, 0x73, 0x67, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6d, 0x73, 0x67, 0x12, 0x2e,
	0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x70,
	0x64, 0x64, 0x78, 0x70, 0x62, 0x2e, 0x41, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x69, 0x74, 0x79, 0x51,
	0x75, 0x65, 0x72, 0x79, 0x44, 0x61, 0x74, 0x61, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x22, 0x30,
	0x0a, 0x08, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x64, 0x65,
	0x73, 0x63, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x64, 0x65, 0x73, 0x63, 0x12, 0x10,
	0x0a, 0x03, 0x75, 0x72, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x75, 0x72, 0x6c,
	0x22, 0xfc, 0x01, 0x0a, 0x09, 0x51, 0x51, 0x41, 0x70, 0x70, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x15,
	0x0a, 0x06, 0x61, 0x70, 0x70, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05,
	0x61, 0x70, 0x70, 0x49, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x62, 0x61, 0x6e, 0x6e, 0x65, 0x72, 0x5f,
	0x75, 0x72, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x62, 0x61, 0x6e, 0x6e, 0x65,
	0x72, 0x55, 0x72, 0x6c, 0x12, 0x12, 0x0a, 0x04, 0x64, 0x65, 0x73, 0x63, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x04, 0x64, 0x65, 0x73, 0x63, 0x12, 0x1b, 0x0a, 0x09, 0x70, 0x61, 0x67, 0x65,
	0x5f, 0x70, 0x61, 0x74, 0x68, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x70, 0x61, 0x67,
	0x65, 0x50, 0x61, 0x74, 0x68, 0x12, 0x25, 0x0a, 0x0f, 0x71, 0x71, 0x5f, 0x61, 0x70, 0x70, 0x5f,
	0x69, 0x63, 0x6f, 0x6e, 0x5f, 0x75, 0x72, 0x6c, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c,
	0x71, 0x71, 0x41, 0x70, 0x70, 0x49, 0x63, 0x6f, 0x6e, 0x55, 0x72, 0x6c, 0x12, 0x2e, 0x0a, 0x13,
	0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x5f, 0x64, 0x69, 0x73, 0x70, 0x6c, 0x61, 0x79, 0x5f, 0x6e,
	0x61, 0x6d, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x11, 0x73, 0x6f, 0x75, 0x72, 0x63,
	0x65, 0x44, 0x69, 0x73, 0x70, 0x6c, 0x61, 0x79, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x14, 0x0a, 0x05,
	0x74, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x69, 0x74,
	0x6c, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18,
	0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x75, 0x73, 0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x22,
	0xfc, 0x01, 0x0a, 0x09, 0x57, 0x65, 0x41, 0x70, 0x70, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x15, 0x0a,
	0x06, 0x61, 0x70, 0x70, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x61,
	0x70, 0x70, 0x49, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x62, 0x61, 0x6e, 0x6e, 0x65, 0x72, 0x5f, 0x75,
	0x72, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x62, 0x61, 0x6e, 0x6e, 0x65, 0x72,
	0x55, 0x72, 0x6c, 0x12, 0x12, 0x0a, 0x04, 0x64, 0x65, 0x73, 0x63, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x04, 0x64, 0x65, 0x73, 0x63, 0x12, 0x1b, 0x0a, 0x09, 0x70, 0x61, 0x67, 0x65, 0x5f,
	0x70, 0x61, 0x74, 0x68, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x70, 0x61, 0x67, 0x65,
	0x50, 0x61, 0x74, 0x68, 0x12, 0x25, 0x0a, 0x0f, 0x77, 0x65, 0x5f, 0x61, 0x70, 0x70, 0x5f, 0x69,
	0x63, 0x6f, 0x6e, 0x5f, 0x75, 0x72, 0x6c, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x77,
	0x65, 0x41, 0x70, 0x70, 0x49, 0x63, 0x6f, 0x6e, 0x55, 0x72, 0x6c, 0x12, 0x2e, 0x0a, 0x13, 0x73,
	0x6f, 0x75, 0x72, 0x63, 0x65, 0x5f, 0x64, 0x69, 0x73, 0x70, 0x6c, 0x61, 0x79, 0x5f, 0x6e, 0x61,
	0x6d, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x11, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65,
	0x44, 0x69, 0x73, 0x70, 0x6c, 0x61, 0x79, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x74,
	0x69, 0x74, 0x6c, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x69, 0x74, 0x6c,
	0x65, 0x12, 0x1b, 0x0a, 0x09, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x08,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x75, 0x73, 0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x22, 0xd6,
	0x03, 0x0a, 0x07, 0x55, 0x52, 0x4c, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x28, 0x0a, 0x10, 0x6d, 0x6f,
	0x62, 0x69, 0x6c, 0x65, 0x5f, 0x73, 0x68, 0x6f, 0x72, 0x74, 0x5f, 0x75, 0x72, 0x6c, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x6d, 0x6f, 0x62, 0x69, 0x6c, 0x65, 0x53, 0x68, 0x6f, 0x72,
	0x74, 0x55, 0x72, 0x6c, 0x12, 0x1d, 0x0a, 0x0a, 0x6d, 0x6f, 0x62, 0x69, 0x6c, 0x65, 0x5f, 0x75,
	0x72, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x6d, 0x6f, 0x62, 0x69, 0x6c, 0x65,
	0x55, 0x72, 0x6c, 0x12, 0x3e, 0x0a, 0x1c, 0x6d, 0x75, 0x6c, 0x74, 0x69, 0x5f, 0x67, 0x72, 0x6f,
	0x75, 0x70, 0x5f, 0x6d, 0x6f, 0x62, 0x69, 0x6c, 0x65, 0x5f, 0x73, 0x68, 0x6f, 0x72, 0x74, 0x5f,
	0x75, 0x72, 0x6c, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x18, 0x6d, 0x75, 0x6c, 0x74, 0x69,
	0x47, 0x72, 0x6f, 0x75, 0x70, 0x4d, 0x6f, 0x62, 0x69, 0x6c, 0x65, 0x53, 0x68, 0x6f, 0x72, 0x74,
	0x55, 0x72, 0x6c, 0x12, 0x33, 0x0a, 0x16, 0x6d, 0x75, 0x6c, 0x74, 0x69, 0x5f, 0x67, 0x72, 0x6f,
	0x75, 0x70, 0x5f, 0x6d, 0x6f, 0x62, 0x69, 0x6c, 0x65, 0x5f, 0x75, 0x72, 0x6c, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x13, 0x6d, 0x75, 0x6c, 0x74, 0x69, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x4d,
	0x6f, 0x62, 0x69, 0x6c, 0x65, 0x55, 0x72, 0x6c, 0x12, 0x31, 0x0a, 0x15, 0x6d, 0x75, 0x6c, 0x74,
	0x69, 0x5f, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x5f, 0x73, 0x68, 0x6f, 0x72, 0x74, 0x5f, 0x75, 0x72,
	0x6c, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x12, 0x6d, 0x75, 0x6c, 0x74, 0x69, 0x47, 0x72,
	0x6f, 0x75, 0x70, 0x53, 0x68, 0x6f, 0x72, 0x74, 0x55, 0x72, 0x6c, 0x12, 0x26, 0x0a, 0x0f, 0x6d,
	0x75, 0x6c, 0x74, 0x69, 0x5f, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x5f, 0x75, 0x72, 0x6c, 0x18, 0x06,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x6d, 0x75, 0x6c, 0x74, 0x69, 0x47, 0x72, 0x6f, 0x75, 0x70,
	0x55, 0x72, 0x6c, 0x12, 0x31, 0x0a, 0x0b, 0x71, 0x71, 0x5f, 0x61, 0x70, 0x70, 0x5f, 0x69, 0x6e,
	0x66, 0x6f, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x70, 0x64, 0x64, 0x78, 0x70,
	0x62, 0x2e, 0x51, 0x51, 0x41, 0x70, 0x70, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x09, 0x71, 0x71, 0x41,
	0x70, 0x70, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x1d, 0x0a, 0x0a, 0x73, 0x63, 0x68, 0x65, 0x6d, 0x61,
	0x5f, 0x75, 0x72, 0x6c, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x73, 0x63, 0x68, 0x65,
	0x6d, 0x61, 0x55, 0x72, 0x6c, 0x12, 0x1b, 0x0a, 0x09, 0x73, 0x68, 0x6f, 0x72, 0x74, 0x5f, 0x75,
	0x72, 0x6c, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x73, 0x68, 0x6f, 0x72, 0x74, 0x55,
	0x72, 0x6c, 0x12, 0x10, 0x0a, 0x03, 0x75, 0x72, 0x6c, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x03, 0x75, 0x72, 0x6c, 0x12, 0x31, 0x0a, 0x0b, 0x77, 0x65, 0x5f, 0x61, 0x70, 0x70, 0x5f, 0x69,
	0x6e, 0x66, 0x6f, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x70, 0x64, 0x64, 0x78,
	0x70, 0x62, 0x2e, 0x57, 0x65, 0x41, 0x70, 0x70, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x09, 0x77, 0x65,
	0x41, 0x70, 0x70, 0x49, 0x6e, 0x66, 0x6f, 0x22, 0x75, 0x0a, 0x10, 0x4d, 0x61, 0x72, 0x6b, 0x65,
	0x74, 0x69, 0x6e, 0x67, 0x55, 0x52, 0x4c, 0x44, 0x61, 0x74, 0x61, 0x12, 0x35, 0x0a, 0x0d, 0x72,
	0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x5f, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x01, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x10, 0x2e, 0x70, 0x64, 0x64, 0x78, 0x70, 0x62, 0x2e, 0x52, 0x65, 0x73, 0x6f,
	0x75, 0x72, 0x63, 0x65, 0x52, 0x0c, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x4c, 0x69,
	0x73, 0x74, 0x12, 0x2a, 0x0a, 0x08, 0x75, 0x72, 0x6c, 0x5f, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x02,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x70, 0x64, 0x64, 0x78, 0x70, 0x62, 0x2e, 0x55, 0x52,
	0x4c, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x07, 0x75, 0x72, 0x6c, 0x4c, 0x69, 0x73, 0x74, 0x22, 0xbd,
	0x04, 0x0a, 0x19, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x4d, 0x61, 0x72, 0x6b, 0x65, 0x74, 0x69,
	0x6e, 0x67, 0x55, 0x52, 0x4c, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1a, 0x0a, 0x09,
	0x70, 0x5f, 0x69, 0x64, 0x5f, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x07, 0x70, 0x49, 0x64, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x30, 0x0a, 0x11, 0x63, 0x75, 0x73, 0x74,
	0x6f, 0x6d, 0x5f, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x65, 0x74, 0x65, 0x72, 0x73, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x10, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x50, 0x61, 0x72,
	0x61, 0x6d, 0x65, 0x74, 0x65, 0x72, 0x73, 0x88, 0x01, 0x01, 0x12, 0x2b, 0x0a, 0x0f, 0x67, 0x65,
	0x6e, 0x65, 0x72, 0x61, 0x74, 0x65, 0x5f, 0x71, 0x71, 0x5f, 0x61, 0x70, 0x70, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x08, 0x48, 0x01, 0x52, 0x0d, 0x67, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x74, 0x65, 0x51,
	0x71, 0x41, 0x70, 0x70, 0x88, 0x01, 0x01, 0x12, 0x33, 0x0a, 0x13, 0x67, 0x65, 0x6e, 0x65, 0x72,
	0x61, 0x74, 0x65, 0x5f, 0x73, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x5f, 0x75, 0x72, 0x6c, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x08, 0x48, 0x02, 0x52, 0x11, 0x67, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x74, 0x65,
	0x53, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x55, 0x72, 0x6c, 0x88, 0x01, 0x01, 0x12, 0x31, 0x0a, 0x12,
	0x67, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x74, 0x65, 0x5f, 0x73, 0x68, 0x6f, 0x72, 0x74, 0x5f, 0x75,
	0x72, 0x6c, 0x18, 0x05, 0x20, 0x01, 0x28, 0x08, 0x48, 0x03, 0x52, 0x10, 0x67, 0x65, 0x6e, 0x65,
	0x72, 0x61, 0x74, 0x65, 0x53, 0x68, 0x6f, 0x72, 0x74, 0x55, 0x72, 0x6c, 0x88, 0x01, 0x01, 0x12,
	0x2b, 0x0a, 0x0f, 0x67, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x74, 0x65, 0x5f, 0x77, 0x65, 0x5f, 0x61,
	0x70, 0x70, 0x18, 0x06, 0x20, 0x01, 0x28, 0x08, 0x48, 0x04, 0x52, 0x0d, 0x67, 0x65, 0x6e, 0x65,
	0x72, 0x61, 0x74, 0x65, 0x57, 0x65, 0x41, 0x70, 0x70, 0x88, 0x01, 0x01, 0x12, 0x21, 0x0a, 0x0c,
	0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x07, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x0b, 0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x54, 0x79, 0x70, 0x65, 0x12,
	0x33, 0x0a, 0x13, 0x73, 0x63, 0x72, 0x61, 0x74, 0x63, 0x68, 0x5f, 0x63, 0x61, 0x72, 0x64, 0x5f,
	0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x08, 0x20, 0x01, 0x28, 0x04, 0x48, 0x05, 0x52, 0x11,
	0x73, 0x63, 0x72, 0x61, 0x74, 0x63, 0x68, 0x43, 0x61, 0x72, 0x64, 0x41, 0x6d, 0x6f, 0x75, 0x6e,
	0x74, 0x88, 0x01, 0x01, 0x12, 0x23, 0x0a, 0x0b, 0x70, 0x64, 0x64, 0x5f, 0x61, 0x75, 0x74, 0x68,
	0x5f, 0x69, 0x64, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x48, 0x06, 0x52, 0x09, 0x70, 0x64, 0x64,
	0x41, 0x75, 0x74, 0x68, 0x49, 0x64, 0x88, 0x01, 0x01, 0x42, 0x14, 0x0a, 0x12, 0x5f, 0x63, 0x75,
	0x73, 0x74, 0x6f, 0x6d, 0x5f, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x65, 0x74, 0x65, 0x72, 0x73, 0x42,
	0x12, 0x0a, 0x10, 0x5f, 0x67, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x74, 0x65, 0x5f, 0x71, 0x71, 0x5f,
	0x61, 0x70, 0x70, 0x42, 0x16, 0x0a, 0x14, 0x5f, 0x67, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x74, 0x65,
	0x5f, 0x73, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x5f, 0x75, 0x72, 0x6c, 0x42, 0x15, 0x0a, 0x13, 0x5f,
	0x67, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x74, 0x65, 0x5f, 0x73, 0x68, 0x6f, 0x72, 0x74, 0x5f, 0x75,
	0x72, 0x6c, 0x42, 0x12, 0x0a, 0x10, 0x5f, 0x67, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x74, 0x65, 0x5f,
	0x77, 0x65, 0x5f, 0x61, 0x70, 0x70, 0x42, 0x16, 0x0a, 0x14, 0x5f, 0x73, 0x63, 0x72, 0x61, 0x74,
	0x63, 0x68, 0x5f, 0x63, 0x61, 0x72, 0x64, 0x5f, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x42, 0x0e,
	0x0a, 0x0c, 0x5f, 0x70, 0x64, 0x64, 0x5f, 0x61, 0x75, 0x74, 0x68, 0x5f, 0x69, 0x64, 0x22, 0x70,
	0x0a, 0x1a, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x4d, 0x61, 0x72, 0x6b, 0x65, 0x74, 0x69, 0x6e,
	0x67, 0x55, 0x52, 0x4c, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x12, 0x0a, 0x04,
	0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65,
	0x12, 0x10, 0x0a, 0x03, 0x6d, 0x73, 0x67, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6d,
	0x73, 0x67, 0x12, 0x2c, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x18, 0x2e, 0x70, 0x64, 0x64, 0x78, 0x70, 0x62, 0x2e, 0x4d, 0x61, 0x72, 0x6b, 0x65, 0x74,
	0x69, 0x6e, 0x67, 0x55, 0x52, 0x4c, 0x44, 0x61, 0x74, 0x61, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61,
	0x22, 0xb0, 0x04, 0x0a, 0x08, 0x49, 0x74, 0x65, 0x6d, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x1d, 0x0a,
	0x0a, 0x67, 0x6f, 0x6f, 0x64, 0x73, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x09, 0x67, 0x6f, 0x6f, 0x64, 0x73, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x19, 0x0a, 0x08,
	0x67, 0x6f, 0x6f, 0x64, 0x73, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x07,
	0x67, 0x6f, 0x6f, 0x64, 0x73, 0x49, 0x64, 0x12, 0x28, 0x0a, 0x10, 0x6d, 0x69, 0x6e, 0x5f, 0x6e,
	0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x5f, 0x70, 0x72, 0x69, 0x63, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x04, 0x52, 0x0e, 0x6d, 0x69, 0x6e, 0x4e, 0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x50, 0x72, 0x69, 0x63,
	0x65, 0x12, 0x26, 0x0a, 0x0f, 0x6d, 0x69, 0x6e, 0x5f, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x5f, 0x70,
	0x72, 0x69, 0x63, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0d, 0x6d, 0x69, 0x6e, 0x47,
	0x72, 0x6f, 0x75, 0x70, 0x50, 0x72, 0x69, 0x63, 0x65, 0x12, 0x25, 0x0a, 0x0e, 0x70, 0x72, 0x6f,
	0x6d, 0x6f, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x72, 0x61, 0x74, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28,
	0x04, 0x52, 0x0d, 0x70, 0x72, 0x6f, 0x6d, 0x6f, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x61, 0x74, 0x65,
	0x12, 0x34, 0x0a, 0x16, 0x70, 0x72, 0x65, 0x64, 0x69, 0x63, 0x74, 0x5f, 0x70, 0x72, 0x6f, 0x6d,
	0x6f, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x72, 0x61, 0x74, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x04,
	0x52, 0x14, 0x70, 0x72, 0x65, 0x64, 0x69, 0x63, 0x74, 0x50, 0x72, 0x6f, 0x6d, 0x6f, 0x74, 0x69,
	0x6f, 0x6e, 0x52, 0x61, 0x74, 0x65, 0x12, 0x35, 0x0a, 0x17, 0x63, 0x6f, 0x75, 0x70, 0x6f, 0x6e,
	0x5f, 0x6d, 0x69, 0x6e, 0x5f, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x5f, 0x61, 0x6d, 0x6f, 0x75, 0x6e,
	0x74, 0x18, 0x07, 0x20, 0x01, 0x28, 0x04, 0x52, 0x14, 0x63, 0x6f, 0x75, 0x70, 0x6f, 0x6e, 0x4d,
	0x69, 0x6e, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x27, 0x0a,
	0x0f, 0x63, 0x6f, 0x75, 0x70, 0x6f, 0x6e, 0x5f, 0x64, 0x69, 0x73, 0x63, 0x6f, 0x75, 0x6e, 0x74,
	0x18, 0x08, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0e, 0x63, 0x6f, 0x75, 0x70, 0x6f, 0x6e, 0x44, 0x69,
	0x73, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x32, 0x0a, 0x15, 0x63, 0x6f, 0x75, 0x70, 0x6f, 0x6e,
	0x5f, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x5f, 0x71, 0x75, 0x61, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x18,
	0x09, 0x20, 0x01, 0x28, 0x04, 0x52, 0x13, 0x63, 0x6f, 0x75, 0x70, 0x6f, 0x6e, 0x54, 0x6f, 0x74,
	0x61, 0x6c, 0x51, 0x75, 0x61, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x12, 0x34, 0x0a, 0x16, 0x63, 0x6f,
	0x75, 0x70, 0x6f, 0x6e, 0x5f, 0x72, 0x65, 0x6d, 0x61, 0x69, 0x6e, 0x5f, 0x71, 0x75, 0x61, 0x6e,
	0x74, 0x69, 0x74, 0x79, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x04, 0x52, 0x14, 0x63, 0x6f, 0x75, 0x70,
	0x6f, 0x6e, 0x52, 0x65, 0x6d, 0x61, 0x69, 0x6e, 0x51, 0x75, 0x61, 0x6e, 0x74, 0x69, 0x74, 0x79,
	0x12, 0x2a, 0x0a, 0x11, 0x63, 0x6f, 0x75, 0x70, 0x6f, 0x6e, 0x5f, 0x73, 0x74, 0x61, 0x72, 0x74,
	0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0f, 0x63, 0x6f, 0x75,
	0x70, 0x6f, 0x6e, 0x53, 0x74, 0x61, 0x72, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x26, 0x0a, 0x0f,
	0x63, 0x6f, 0x75, 0x70, 0x6f, 0x6e, 0x5f, 0x65, 0x6e, 0x64, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18,
	0x0c, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0d, 0x63, 0x6f, 0x75, 0x70, 0x6f, 0x6e, 0x45, 0x6e, 0x64,
	0x54, 0x69, 0x6d, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x68, 0x61, 0x73, 0x5f, 0x63, 0x6f, 0x75, 0x70,
	0x6f, 0x6e, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x08, 0x52, 0x09, 0x68, 0x61, 0x73, 0x43, 0x6f, 0x75,
	0x70, 0x6f, 0x6e, 0x22, 0x87, 0x02, 0x0a, 0x11, 0x55, 0x52, 0x4c, 0x43, 0x6f, 0x6e, 0x76, 0x65,
	0x72, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x73, 0x6f, 0x75,
	0x72, 0x63, 0x65, 0x5f, 0x75, 0x72, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x73,
	0x6f, 0x75, 0x72, 0x63, 0x65, 0x55, 0x72, 0x6c, 0x12, 0x10, 0x0a, 0x03, 0x70, 0x69, 0x64, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x70, 0x69, 0x64, 0x12, 0x30, 0x0a, 0x11, 0x63, 0x75,
	0x73, 0x74, 0x6f, 0x6d, 0x5f, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x65, 0x74, 0x65, 0x72, 0x73, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x10, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x50,
	0x61, 0x72, 0x61, 0x6d, 0x65, 0x74, 0x65, 0x72, 0x73, 0x88, 0x01, 0x01, 0x12, 0x33, 0x0a, 0x13,
	0x67, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x74, 0x65, 0x5f, 0x73, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x5f,
	0x75, 0x72, 0x6c, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x48, 0x01, 0x52, 0x11, 0x67, 0x65, 0x6e,
	0x65, 0x72, 0x61, 0x74, 0x65, 0x53, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x55, 0x72, 0x6c, 0x88, 0x01,
	0x01, 0x12, 0x1f, 0x0a, 0x08, 0x69, 0x74, 0x65, 0x6d, 0x49, 0x6e, 0x66, 0x6f, 0x18, 0x05, 0x20,
	0x01, 0x28, 0x08, 0x48, 0x02, 0x52, 0x08, 0x69, 0x74, 0x65, 0x6d, 0x49, 0x6e, 0x66, 0x6f, 0x88,
	0x01, 0x01, 0x42, 0x14, 0x0a, 0x12, 0x5f, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x5f, 0x70, 0x61,
	0x72, 0x61, 0x6d, 0x65, 0x74, 0x65, 0x72, 0x73, 0x42, 0x16, 0x0a, 0x14, 0x5f, 0x67, 0x65, 0x6e,
	0x65, 0x72, 0x61, 0x74, 0x65, 0x5f, 0x73, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x5f, 0x75, 0x72, 0x6c,
	0x42, 0x0b, 0x0a, 0x09, 0x5f, 0x69, 0x74, 0x65, 0x6d, 0x49, 0x6e, 0x66, 0x6f, 0x22, 0xd6, 0x03,
	0x0a, 0x12, 0x55, 0x52, 0x4c, 0x43, 0x6f, 0x6e, 0x76, 0x65, 0x72, 0x74, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x28, 0x0a, 0x10, 0x6d, 0x6f, 0x62, 0x69, 0x6c, 0x65, 0x5f, 0x73,
	0x68, 0x6f, 0x72, 0x74, 0x5f, 0x75, 0x72, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e,
	0x6d, 0x6f, 0x62, 0x69, 0x6c, 0x65, 0x53, 0x68, 0x6f, 0x72, 0x74, 0x55, 0x72, 0x6c, 0x12, 0x1d,
	0x0a, 0x0a, 0x6d, 0x6f, 0x62, 0x69, 0x6c, 0x65, 0x5f, 0x75, 0x72, 0x6c, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x09, 0x6d, 0x6f, 0x62, 0x69, 0x6c, 0x65, 0x55, 0x72, 0x6c, 0x12, 0x3e, 0x0a,
	0x1c, 0x6d, 0x75, 0x6c, 0x74, 0x69, 0x5f, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x5f, 0x6d, 0x6f, 0x62,
	0x69, 0x6c, 0x65, 0x5f, 0x73, 0x68, 0x6f, 0x72, 0x74, 0x5f, 0x75, 0x72, 0x6c, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x18, 0x6d, 0x75, 0x6c, 0x74, 0x69, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x4d,
	0x6f, 0x62, 0x69, 0x6c, 0x65, 0x53, 0x68, 0x6f, 0x72, 0x74, 0x55, 0x72, 0x6c, 0x12, 0x33, 0x0a,
	0x16, 0x6d, 0x75, 0x6c, 0x74, 0x69, 0x5f, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x5f, 0x6d, 0x6f, 0x62,
	0x69, 0x6c, 0x65, 0x5f, 0x75, 0x72, 0x6c, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x13, 0x6d,
	0x75, 0x6c, 0x74, 0x69, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x4d, 0x6f, 0x62, 0x69, 0x6c, 0x65, 0x55,
	0x72, 0x6c, 0x12, 0x31, 0x0a, 0x15, 0x6d, 0x75, 0x6c, 0x74, 0x69, 0x5f, 0x67, 0x72, 0x6f, 0x75,
	0x70, 0x5f, 0x73, 0x68, 0x6f, 0x72, 0x74, 0x5f, 0x75, 0x72, 0x6c, 0x18, 0x05, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x12, 0x6d, 0x75, 0x6c, 0x74, 0x69, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x53, 0x68, 0x6f,
	0x72, 0x74, 0x55, 0x72, 0x6c, 0x12, 0x26, 0x0a, 0x0f, 0x6d, 0x75, 0x6c, 0x74, 0x69, 0x5f, 0x67,
	0x72, 0x6f, 0x75, 0x70, 0x5f, 0x75, 0x72, 0x6c, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d,
	0x6d, 0x75, 0x6c, 0x74, 0x69, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x55, 0x72, 0x6c, 0x12, 0x1d, 0x0a,
	0x0a, 0x73, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x5f, 0x75, 0x72, 0x6c, 0x18, 0x07, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x09, 0x73, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x55, 0x72, 0x6c, 0x12, 0x1b, 0x0a, 0x09,
	0x73, 0x68, 0x6f, 0x72, 0x74, 0x5f, 0x75, 0x72, 0x6c, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x08, 0x73, 0x68, 0x6f, 0x72, 0x74, 0x55, 0x72, 0x6c, 0x12, 0x10, 0x0a, 0x03, 0x75, 0x72, 0x6c,
	0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x75, 0x72, 0x6c, 0x12, 0x19, 0x0a, 0x08, 0x67,
	0x6f, 0x6f, 0x64, 0x73, 0x5f, 0x69, 0x64, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x67,
	0x6f, 0x6f, 0x64, 0x73, 0x49, 0x64, 0x12, 0x31, 0x0a, 0x08, 0x69, 0x74, 0x65, 0x6d, 0x49, 0x6e,
	0x66, 0x6f, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x70, 0x64, 0x64, 0x78, 0x70,
	0x62, 0x2e, 0x49, 0x74, 0x65, 0x6d, 0x49, 0x6e, 0x66, 0x6f, 0x48, 0x00, 0x52, 0x08, 0x69, 0x74,
	0x65, 0x6d, 0x49, 0x6e, 0x66, 0x6f, 0x88, 0x01, 0x01, 0x42, 0x0b, 0x0a, 0x09, 0x5f, 0x69, 0x74,
	0x65, 0x6d, 0x49, 0x6e, 0x66, 0x6f, 0x32, 0x88, 0x02, 0x0a, 0x0d, 0x50, 0x64, 0x64, 0x41, 0x70,
	0x69, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x51, 0x0a, 0x0e, 0x41, 0x75, 0x74, 0x68,
	0x6f, 0x72, 0x69, 0x74, 0x79, 0x51, 0x75, 0x65, 0x72, 0x79, 0x12, 0x1d, 0x2e, 0x70, 0x64, 0x64,
	0x78, 0x70, 0x62, 0x2e, 0x41, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x69, 0x74, 0x79, 0x51, 0x75, 0x65,
	0x72, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1e, 0x2e, 0x70, 0x64, 0x64, 0x78,
	0x70, 0x62, 0x2e, 0x41, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x69, 0x74, 0x79, 0x51, 0x75, 0x65, 0x72,
	0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x5d, 0x0a, 0x12, 0x43,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x4d, 0x61, 0x72, 0x6b, 0x65, 0x74, 0x69, 0x6e, 0x67, 0x55, 0x52,
	0x4c, 0x12, 0x21, 0x2e, 0x70, 0x64, 0x64, 0x78, 0x70, 0x62, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x4d, 0x61, 0x72, 0x6b, 0x65, 0x74, 0x69, 0x6e, 0x67, 0x55, 0x52, 0x4c, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x22, 0x2e, 0x70, 0x64, 0x64, 0x78, 0x70, 0x62, 0x2e, 0x43, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x4d, 0x61, 0x72, 0x6b, 0x65, 0x74, 0x69, 0x6e, 0x67, 0x55, 0x52, 0x4c,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x45, 0x0a, 0x0a, 0x55, 0x52,
	0x4c, 0x43, 0x6f, 0x6e, 0x76, 0x65, 0x72, 0x74, 0x12, 0x19, 0x2e, 0x70, 0x64, 0x64, 0x78, 0x70,
	0x62, 0x2e, 0x55, 0x52, 0x4c, 0x43, 0x6f, 0x6e, 0x76, 0x65, 0x72, 0x74, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x1a, 0x2e, 0x70, 0x64, 0x64, 0x78, 0x70, 0x62, 0x2e, 0x55, 0x52, 0x4c,
	0x43, 0x6f, 0x6e, 0x76, 0x65, 0x72, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22,
	0x00, 0x42, 0x09, 0x5a, 0x07, 0x2f, 0x70, 0x64, 0x64, 0x78, 0x70, 0x62, 0x62, 0x06, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_api_pdd_ddx_proto_rawDescOnce sync.Once
	file_api_pdd_ddx_proto_rawDescData = file_api_pdd_ddx_proto_rawDesc
)

func file_api_pdd_ddx_proto_rawDescGZIP() []byte {
	file_api_pdd_ddx_proto_rawDescOnce.Do(func() {
		file_api_pdd_ddx_proto_rawDescData = protoimpl.X.CompressGZIP(file_api_pdd_ddx_proto_rawDescData)
	})
	return file_api_pdd_ddx_proto_rawDescData
}

var file_api_pdd_ddx_proto_msgTypes = make([]protoimpl.MessageInfo, 13)
var file_api_pdd_ddx_proto_goTypes = []interface{}{
	(*AuthorityQueryData)(nil),         // 0: pddxpb.AuthorityQueryData
	(*AuthorityQueryRequest)(nil),      // 1: pddxpb.AuthorityQueryRequest
	(*AuthorityQueryResponse)(nil),     // 2: pddxpb.AuthorityQueryResponse
	(*Resource)(nil),                   // 3: pddxpb.Resource
	(*QQAppInfo)(nil),                  // 4: pddxpb.QQAppInfo
	(*WeAppInfo)(nil),                  // 5: pddxpb.WeAppInfo
	(*URLInfo)(nil),                    // 6: pddxpb.URLInfo
	(*MarketingURLData)(nil),           // 7: pddxpb.MarketingURLData
	(*CreateMarketingURLRequest)(nil),  // 8: pddxpb.CreateMarketingURLRequest
	(*CreateMarketingURLResponse)(nil), // 9: pddxpb.CreateMarketingURLResponse
	(*ItemInfo)(nil),                   // 10: pddxpb.ItemInfo
	(*URLConvertRequest)(nil),          // 11: pddxpb.URLConvertRequest
	(*URLConvertResponse)(nil),         // 12: pddxpb.URLConvertResponse
}
var file_api_pdd_ddx_proto_depIdxs = []int32{
	0,  // 0: pddxpb.AuthorityQueryResponse.data:type_name -> pddxpb.AuthorityQueryData
	4,  // 1: pddxpb.URLInfo.qq_app_info:type_name -> pddxpb.QQAppInfo
	5,  // 2: pddxpb.URLInfo.we_app_info:type_name -> pddxpb.WeAppInfo
	3,  // 3: pddxpb.MarketingURLData.resource_list:type_name -> pddxpb.Resource
	6,  // 4: pddxpb.MarketingURLData.url_list:type_name -> pddxpb.URLInfo
	7,  // 5: pddxpb.CreateMarketingURLResponse.data:type_name -> pddxpb.MarketingURLData
	10, // 6: pddxpb.URLConvertResponse.itemInfo:type_name -> pddxpb.ItemInfo
	1,  // 7: pddxpb.PddApiService.AuthorityQuery:input_type -> pddxpb.AuthorityQueryRequest
	8,  // 8: pddxpb.PddApiService.CreateMarketingURL:input_type -> pddxpb.CreateMarketingURLRequest
	11, // 9: pddxpb.PddApiService.URLConvert:input_type -> pddxpb.URLConvertRequest
	2,  // 10: pddxpb.PddApiService.AuthorityQuery:output_type -> pddxpb.AuthorityQueryResponse
	9,  // 11: pddxpb.PddApiService.CreateMarketingURL:output_type -> pddxpb.CreateMarketingURLResponse
	12, // 12: pddxpb.PddApiService.URLConvert:output_type -> pddxpb.URLConvertResponse
	10, // [10:13] is the sub-list for method output_type
	7,  // [7:10] is the sub-list for method input_type
	7,  // [7:7] is the sub-list for extension type_name
	7,  // [7:7] is the sub-list for extension extendee
	0,  // [0:7] is the sub-list for field type_name
}

func init() { file_api_pdd_ddx_proto_init() }
func file_api_pdd_ddx_proto_init() {
	if File_api_pdd_ddx_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_api_pdd_ddx_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AuthorityQueryData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_pdd_ddx_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AuthorityQueryRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_pdd_ddx_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AuthorityQueryResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_pdd_ddx_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Resource); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_pdd_ddx_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*QQAppInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_pdd_ddx_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*WeAppInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_pdd_ddx_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*URLInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_pdd_ddx_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MarketingURLData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_pdd_ddx_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateMarketingURLRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_pdd_ddx_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateMarketingURLResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_pdd_ddx_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ItemInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_pdd_ddx_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*URLConvertRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_pdd_ddx_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*URLConvertResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_api_pdd_ddx_proto_msgTypes[1].OneofWrappers = []interface{}{}
	file_api_pdd_ddx_proto_msgTypes[8].OneofWrappers = []interface{}{}
	file_api_pdd_ddx_proto_msgTypes[11].OneofWrappers = []interface{}{}
	file_api_pdd_ddx_proto_msgTypes[12].OneofWrappers = []interface{}{}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_api_pdd_ddx_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   13,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_api_pdd_ddx_proto_goTypes,
		DependencyIndexes: file_api_pdd_ddx_proto_depIdxs,
		MessageInfos:      file_api_pdd_ddx_proto_msgTypes,
	}.Build()
	File_api_pdd_ddx_proto = out.File
	file_api_pdd_ddx_proto_rawDesc = nil
	file_api_pdd_ddx_proto_goTypes = nil
	file_api_pdd_ddx_proto_depIdxs = nil
}
