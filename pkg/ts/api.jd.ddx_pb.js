// source: api.jd.ddx.proto
/**
 * @fileoverview
 * @enhanceable
 * @suppress {missingRequire} reports error on implicit type usages.
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!
/* eslint-disable */
// @ts-nocheck

var jspb = require('google-protobuf');
var goog = jspb;
var global = Function('return this')();

goog.exportSymbol('proto.pb.CommissionInfo', null, global);
goog.exportSymbol('proto.pb.CouponInfo', null, global);
goog.exportSymbol('proto.pb.ImageInfo', null, global);
goog.exportSymbol('proto.pb.ImageURL', null, global);
goog.exportSymbol('proto.pb.PinGouInfo', null, global);
goog.exportSymbol('proto.pb.PriceInfo', null, global);
goog.exportSymbol('proto.pb.PromotedData', null, global);
goog.exportSymbol('proto.pb.PromotionByUnionIDRequest', null, global);
goog.exportSymbol('proto.pb.PromotionByUnionIDResponse', null, global);
goog.exportSymbol('proto.pb.ShopInfo', null, global);
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.pb.CouponInfo = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.pb.CouponInfo, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.pb.CouponInfo.displayName = 'proto.pb.CouponInfo';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.pb.CommissionInfo = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.pb.CommissionInfo, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.pb.CommissionInfo.displayName = 'proto.pb.CommissionInfo';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.pb.ImageURL = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.pb.ImageURL, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.pb.ImageURL.displayName = 'proto.pb.ImageURL';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.pb.ImageInfo = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.pb.ImageInfo.repeatedFields_, null);
};
goog.inherits(proto.pb.ImageInfo, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.pb.ImageInfo.displayName = 'proto.pb.ImageInfo';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.pb.PriceInfo = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.pb.PriceInfo, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.pb.PriceInfo.displayName = 'proto.pb.PriceInfo';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.pb.PinGouInfo = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.pb.PinGouInfo, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.pb.PinGouInfo.displayName = 'proto.pb.PinGouInfo';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.pb.ShopInfo = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.pb.ShopInfo, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.pb.ShopInfo.displayName = 'proto.pb.ShopInfo';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.pb.PromotedData = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.pb.PromotedData, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.pb.PromotedData.displayName = 'proto.pb.PromotedData';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.pb.PromotionByUnionIDRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.pb.PromotionByUnionIDRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.pb.PromotionByUnionIDRequest.displayName = 'proto.pb.PromotionByUnionIDRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.pb.PromotionByUnionIDResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.pb.PromotionByUnionIDResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.pb.PromotionByUnionIDResponse.displayName = 'proto.pb.PromotionByUnionIDResponse';
}



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.pb.CouponInfo.prototype.toObject = function(opt_includeInstance) {
  return proto.pb.CouponInfo.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.pb.CouponInfo} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.pb.CouponInfo.toObject = function(includeInstance, msg) {
  var f, obj = {
    takeendtime: jspb.Message.getFieldWithDefault(msg, 1, 0),
    takebegintime: jspb.Message.getFieldWithDefault(msg, 2, 0),
    remainnum: jspb.Message.getFieldWithDefault(msg, 3, 0),
    yn: jspb.Message.getFieldWithDefault(msg, 4, ""),
    num: jspb.Message.getFieldWithDefault(msg, 5, 0),
    quota: jspb.Message.getFloatingPointFieldWithDefault(msg, 6, 0.0),
    link: jspb.Message.getFieldWithDefault(msg, 7, ""),
    discount: jspb.Message.getFloatingPointFieldWithDefault(msg, 8, 0.0),
    begintime: jspb.Message.getFieldWithDefault(msg, 9, 0),
    endtime: jspb.Message.getFieldWithDefault(msg, 10, 0),
    platform: jspb.Message.getFieldWithDefault(msg, 11, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.pb.CouponInfo}
 */
proto.pb.CouponInfo.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.pb.CouponInfo;
  return proto.pb.CouponInfo.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.pb.CouponInfo} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.pb.CouponInfo}
 */
proto.pb.CouponInfo.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setTakeendtime(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setTakebegintime(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setRemainnum(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setYn(value);
      break;
    case 5:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setNum(value);
      break;
    case 6:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setQuota(value);
      break;
    case 7:
      var value = /** @type {string} */ (reader.readString());
      msg.setLink(value);
      break;
    case 8:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setDiscount(value);
      break;
    case 9:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setBegintime(value);
      break;
    case 10:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setEndtime(value);
      break;
    case 11:
      var value = /** @type {string} */ (reader.readString());
      msg.setPlatform(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.pb.CouponInfo.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.pb.CouponInfo.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.pb.CouponInfo} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.pb.CouponInfo.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getTakeendtime();
  if (f !== 0) {
    writer.writeUint64(
      1,
      f
    );
  }
  f = message.getTakebegintime();
  if (f !== 0) {
    writer.writeUint64(
      2,
      f
    );
  }
  f = message.getRemainnum();
  if (f !== 0) {
    writer.writeUint64(
      3,
      f
    );
  }
  f = message.getYn();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
  f = message.getNum();
  if (f !== 0) {
    writer.writeUint64(
      5,
      f
    );
  }
  f = message.getQuota();
  if (f !== 0.0) {
    writer.writeDouble(
      6,
      f
    );
  }
  f = message.getLink();
  if (f.length > 0) {
    writer.writeString(
      7,
      f
    );
  }
  f = message.getDiscount();
  if (f !== 0.0) {
    writer.writeDouble(
      8,
      f
    );
  }
  f = message.getBegintime();
  if (f !== 0) {
    writer.writeUint64(
      9,
      f
    );
  }
  f = message.getEndtime();
  if (f !== 0) {
    writer.writeUint64(
      10,
      f
    );
  }
  f = message.getPlatform();
  if (f.length > 0) {
    writer.writeString(
      11,
      f
    );
  }
};


/**
 * optional uint64 takeEndTime = 1;
 * @return {number}
 */
proto.pb.CouponInfo.prototype.getTakeendtime = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.pb.CouponInfo} returns this
 */
proto.pb.CouponInfo.prototype.setTakeendtime = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional uint64 takeBeginTime = 2;
 * @return {number}
 */
proto.pb.CouponInfo.prototype.getTakebegintime = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.pb.CouponInfo} returns this
 */
proto.pb.CouponInfo.prototype.setTakebegintime = function(value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};


/**
 * optional uint64 remainNum = 3;
 * @return {number}
 */
proto.pb.CouponInfo.prototype.getRemainnum = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {number} value
 * @return {!proto.pb.CouponInfo} returns this
 */
proto.pb.CouponInfo.prototype.setRemainnum = function(value) {
  return jspb.Message.setProto3IntField(this, 3, value);
};


/**
 * optional string yn = 4;
 * @return {string}
 */
proto.pb.CouponInfo.prototype.getYn = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.pb.CouponInfo} returns this
 */
proto.pb.CouponInfo.prototype.setYn = function(value) {
  return jspb.Message.setProto3StringField(this, 4, value);
};


/**
 * optional uint64 num = 5;
 * @return {number}
 */
proto.pb.CouponInfo.prototype.getNum = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 5, 0));
};


/**
 * @param {number} value
 * @return {!proto.pb.CouponInfo} returns this
 */
proto.pb.CouponInfo.prototype.setNum = function(value) {
  return jspb.Message.setProto3IntField(this, 5, value);
};


/**
 * optional double quota = 6;
 * @return {number}
 */
proto.pb.CouponInfo.prototype.getQuota = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 6, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.pb.CouponInfo} returns this
 */
proto.pb.CouponInfo.prototype.setQuota = function(value) {
  return jspb.Message.setProto3FloatField(this, 6, value);
};


/**
 * optional string link = 7;
 * @return {string}
 */
proto.pb.CouponInfo.prototype.getLink = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 7, ""));
};


/**
 * @param {string} value
 * @return {!proto.pb.CouponInfo} returns this
 */
proto.pb.CouponInfo.prototype.setLink = function(value) {
  return jspb.Message.setProto3StringField(this, 7, value);
};


/**
 * optional double discount = 8;
 * @return {number}
 */
proto.pb.CouponInfo.prototype.getDiscount = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 8, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.pb.CouponInfo} returns this
 */
proto.pb.CouponInfo.prototype.setDiscount = function(value) {
  return jspb.Message.setProto3FloatField(this, 8, value);
};


/**
 * optional uint64 beginTime = 9;
 * @return {number}
 */
proto.pb.CouponInfo.prototype.getBegintime = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 9, 0));
};


/**
 * @param {number} value
 * @return {!proto.pb.CouponInfo} returns this
 */
proto.pb.CouponInfo.prototype.setBegintime = function(value) {
  return jspb.Message.setProto3IntField(this, 9, value);
};


/**
 * optional uint64 endTime = 10;
 * @return {number}
 */
proto.pb.CouponInfo.prototype.getEndtime = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 10, 0));
};


/**
 * @param {number} value
 * @return {!proto.pb.CouponInfo} returns this
 */
proto.pb.CouponInfo.prototype.setEndtime = function(value) {
  return jspb.Message.setProto3IntField(this, 10, value);
};


/**
 * optional string platform = 11;
 * @return {string}
 */
proto.pb.CouponInfo.prototype.getPlatform = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 11, ""));
};


/**
 * @param {string} value
 * @return {!proto.pb.CouponInfo} returns this
 */
proto.pb.CouponInfo.prototype.setPlatform = function(value) {
  return jspb.Message.setProto3StringField(this, 11, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.pb.CommissionInfo.prototype.toObject = function(opt_includeInstance) {
  return proto.pb.CommissionInfo.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.pb.CommissionInfo} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.pb.CommissionInfo.toObject = function(includeInstance, msg) {
  var f, obj = {
    commission: jspb.Message.getFloatingPointFieldWithDefault(msg, 1, 0.0),
    commissionshare: jspb.Message.getFloatingPointFieldWithDefault(msg, 2, 0.0),
    couponcommission: jspb.Message.getFloatingPointFieldWithDefault(msg, 3, 0.0),
    pluscommissionshare: jspb.Message.getFloatingPointFieldWithDefault(msg, 4, 0.0),
    endtime: jspb.Message.getFieldWithDefault(msg, 5, 0),
    starttime: jspb.Message.getFieldWithDefault(msg, 6, 0),
    islock: jspb.Message.getFieldWithDefault(msg, 7, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.pb.CommissionInfo}
 */
proto.pb.CommissionInfo.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.pb.CommissionInfo;
  return proto.pb.CommissionInfo.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.pb.CommissionInfo} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.pb.CommissionInfo}
 */
proto.pb.CommissionInfo.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setCommission(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setCommissionshare(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setCouponcommission(value);
      break;
    case 4:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setPluscommissionshare(value);
      break;
    case 5:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setEndtime(value);
      break;
    case 6:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setStarttime(value);
      break;
    case 7:
      var value = /** @type {string} */ (reader.readString());
      msg.setIslock(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.pb.CommissionInfo.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.pb.CommissionInfo.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.pb.CommissionInfo} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.pb.CommissionInfo.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getCommission();
  if (f !== 0.0) {
    writer.writeDouble(
      1,
      f
    );
  }
  f = message.getCommissionshare();
  if (f !== 0.0) {
    writer.writeDouble(
      2,
      f
    );
  }
  f = message.getCouponcommission();
  if (f !== 0.0) {
    writer.writeDouble(
      3,
      f
    );
  }
  f = message.getPluscommissionshare();
  if (f !== 0.0) {
    writer.writeDouble(
      4,
      f
    );
  }
  f = message.getEndtime();
  if (f !== 0) {
    writer.writeUint64(
      5,
      f
    );
  }
  f = message.getStarttime();
  if (f !== 0) {
    writer.writeUint64(
      6,
      f
    );
  }
  f = message.getIslock();
  if (f.length > 0) {
    writer.writeString(
      7,
      f
    );
  }
};


/**
 * optional double commission = 1;
 * @return {number}
 */
proto.pb.CommissionInfo.prototype.getCommission = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 1, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.pb.CommissionInfo} returns this
 */
proto.pb.CommissionInfo.prototype.setCommission = function(value) {
  return jspb.Message.setProto3FloatField(this, 1, value);
};


/**
 * optional double commissionShare = 2;
 * @return {number}
 */
proto.pb.CommissionInfo.prototype.getCommissionshare = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 2, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.pb.CommissionInfo} returns this
 */
proto.pb.CommissionInfo.prototype.setCommissionshare = function(value) {
  return jspb.Message.setProto3FloatField(this, 2, value);
};


/**
 * optional double couponCommission = 3;
 * @return {number}
 */
proto.pb.CommissionInfo.prototype.getCouponcommission = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 3, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.pb.CommissionInfo} returns this
 */
proto.pb.CommissionInfo.prototype.setCouponcommission = function(value) {
  return jspb.Message.setProto3FloatField(this, 3, value);
};


/**
 * optional double plusCommissionShare = 4;
 * @return {number}
 */
proto.pb.CommissionInfo.prototype.getPluscommissionshare = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 4, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.pb.CommissionInfo} returns this
 */
proto.pb.CommissionInfo.prototype.setPluscommissionshare = function(value) {
  return jspb.Message.setProto3FloatField(this, 4, value);
};


/**
 * optional uint64 endTime = 5;
 * @return {number}
 */
proto.pb.CommissionInfo.prototype.getEndtime = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 5, 0));
};


/**
 * @param {number} value
 * @return {!proto.pb.CommissionInfo} returns this
 */
proto.pb.CommissionInfo.prototype.setEndtime = function(value) {
  return jspb.Message.setProto3IntField(this, 5, value);
};


/**
 * optional uint64 startTime = 6;
 * @return {number}
 */
proto.pb.CommissionInfo.prototype.getStarttime = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 6, 0));
};


/**
 * @param {number} value
 * @return {!proto.pb.CommissionInfo} returns this
 */
proto.pb.CommissionInfo.prototype.setStarttime = function(value) {
  return jspb.Message.setProto3IntField(this, 6, value);
};


/**
 * optional string isLock = 7;
 * @return {string}
 */
proto.pb.CommissionInfo.prototype.getIslock = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 7, ""));
};


/**
 * @param {string} value
 * @return {!proto.pb.CommissionInfo} returns this
 */
proto.pb.CommissionInfo.prototype.setIslock = function(value) {
  return jspb.Message.setProto3StringField(this, 7, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.pb.ImageURL.prototype.toObject = function(opt_includeInstance) {
  return proto.pb.ImageURL.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.pb.ImageURL} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.pb.ImageURL.toObject = function(includeInstance, msg) {
  var f, obj = {
    url: jspb.Message.getFieldWithDefault(msg, 1, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.pb.ImageURL}
 */
proto.pb.ImageURL.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.pb.ImageURL;
  return proto.pb.ImageURL.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.pb.ImageURL} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.pb.ImageURL}
 */
proto.pb.ImageURL.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setUrl(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.pb.ImageURL.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.pb.ImageURL.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.pb.ImageURL} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.pb.ImageURL.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getUrl();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
};


/**
 * optional string url = 1;
 * @return {string}
 */
proto.pb.ImageURL.prototype.getUrl = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.pb.ImageURL} returns this
 */
proto.pb.ImageURL.prototype.setUrl = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.pb.ImageInfo.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.pb.ImageInfo.prototype.toObject = function(opt_includeInstance) {
  return proto.pb.ImageInfo.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.pb.ImageInfo} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.pb.ImageInfo.toObject = function(includeInstance, msg) {
  var f, obj = {
    imagelistList: jspb.Message.toObjectList(msg.getImagelistList(),
    proto.pb.ImageURL.toObject, includeInstance),
    whiteimage: jspb.Message.getFieldWithDefault(msg, 2, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.pb.ImageInfo}
 */
proto.pb.ImageInfo.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.pb.ImageInfo;
  return proto.pb.ImageInfo.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.pb.ImageInfo} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.pb.ImageInfo}
 */
proto.pb.ImageInfo.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.pb.ImageURL;
      reader.readMessage(value,proto.pb.ImageURL.deserializeBinaryFromReader);
      msg.addImagelist(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setWhiteimage(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.pb.ImageInfo.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.pb.ImageInfo.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.pb.ImageInfo} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.pb.ImageInfo.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getImagelistList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      proto.pb.ImageURL.serializeBinaryToWriter
    );
  }
  f = message.getWhiteimage();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
};


/**
 * repeated ImageURL imageList = 1;
 * @return {!Array<!proto.pb.ImageURL>}
 */
proto.pb.ImageInfo.prototype.getImagelistList = function() {
  return /** @type{!Array<!proto.pb.ImageURL>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.pb.ImageURL, 1));
};


/**
 * @param {!Array<!proto.pb.ImageURL>} value
 * @return {!proto.pb.ImageInfo} returns this
*/
proto.pb.ImageInfo.prototype.setImagelistList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.pb.ImageURL=} opt_value
 * @param {number=} opt_index
 * @return {!proto.pb.ImageURL}
 */
proto.pb.ImageInfo.prototype.addImagelist = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.pb.ImageURL, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.pb.ImageInfo} returns this
 */
proto.pb.ImageInfo.prototype.clearImagelistList = function() {
  return this.setImagelistList([]);
};


/**
 * optional string whiteImage = 2;
 * @return {string}
 */
proto.pb.ImageInfo.prototype.getWhiteimage = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.pb.ImageInfo} returns this
 */
proto.pb.ImageInfo.prototype.setWhiteimage = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.pb.PriceInfo.prototype.toObject = function(opt_includeInstance) {
  return proto.pb.PriceInfo.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.pb.PriceInfo} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.pb.PriceInfo.toObject = function(includeInstance, msg) {
  var f, obj = {
    price: jspb.Message.getFloatingPointFieldWithDefault(msg, 1, 0.0),
    historypriceday: jspb.Message.getFieldWithDefault(msg, 2, 0),
    lowestcouponprice: jspb.Message.getFloatingPointFieldWithDefault(msg, 3, 0.0),
    lowestprice: jspb.Message.getFloatingPointFieldWithDefault(msg, 4, 0.0),
    lowestpricetype: jspb.Message.getFieldWithDefault(msg, 5, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.pb.PriceInfo}
 */
proto.pb.PriceInfo.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.pb.PriceInfo;
  return proto.pb.PriceInfo.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.pb.PriceInfo} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.pb.PriceInfo}
 */
proto.pb.PriceInfo.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setPrice(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setHistorypriceday(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setLowestcouponprice(value);
      break;
    case 4:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setLowestprice(value);
      break;
    case 5:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setLowestpricetype(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.pb.PriceInfo.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.pb.PriceInfo.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.pb.PriceInfo} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.pb.PriceInfo.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getPrice();
  if (f !== 0.0) {
    writer.writeDouble(
      1,
      f
    );
  }
  f = message.getHistorypriceday();
  if (f !== 0) {
    writer.writeInt32(
      2,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 3));
  if (f != null) {
    writer.writeDouble(
      3,
      f
    );
  }
  f = message.getLowestprice();
  if (f !== 0.0) {
    writer.writeDouble(
      4,
      f
    );
  }
  f = message.getLowestpricetype();
  if (f !== 0) {
    writer.writeInt32(
      5,
      f
    );
  }
};


/**
 * optional double price = 1;
 * @return {number}
 */
proto.pb.PriceInfo.prototype.getPrice = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 1, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.pb.PriceInfo} returns this
 */
proto.pb.PriceInfo.prototype.setPrice = function(value) {
  return jspb.Message.setProto3FloatField(this, 1, value);
};


/**
 * optional int32 historyPriceDay = 2;
 * @return {number}
 */
proto.pb.PriceInfo.prototype.getHistorypriceday = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.pb.PriceInfo} returns this
 */
proto.pb.PriceInfo.prototype.setHistorypriceday = function(value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};


/**
 * optional double lowestCouponPrice = 3;
 * @return {number}
 */
proto.pb.PriceInfo.prototype.getLowestcouponprice = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 3, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.pb.PriceInfo} returns this
 */
proto.pb.PriceInfo.prototype.setLowestcouponprice = function(value) {
  return jspb.Message.setField(this, 3, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.pb.PriceInfo} returns this
 */
proto.pb.PriceInfo.prototype.clearLowestcouponprice = function() {
  return jspb.Message.setField(this, 3, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.pb.PriceInfo.prototype.hasLowestcouponprice = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional double lowestPrice = 4;
 * @return {number}
 */
proto.pb.PriceInfo.prototype.getLowestprice = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 4, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.pb.PriceInfo} returns this
 */
proto.pb.PriceInfo.prototype.setLowestprice = function(value) {
  return jspb.Message.setProto3FloatField(this, 4, value);
};


/**
 * optional int32 lowestPriceType = 5;
 * @return {number}
 */
proto.pb.PriceInfo.prototype.getLowestpricetype = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 5, 0));
};


/**
 * @param {number} value
 * @return {!proto.pb.PriceInfo} returns this
 */
proto.pb.PriceInfo.prototype.setLowestpricetype = function(value) {
  return jspb.Message.setProto3IntField(this, 5, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.pb.PinGouInfo.prototype.toObject = function(opt_includeInstance) {
  return proto.pb.PinGouInfo.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.pb.PinGouInfo} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.pb.PinGouInfo.toObject = function(includeInstance, msg) {
  var f, obj = {
    pingouprice: jspb.Message.getFloatingPointFieldWithDefault(msg, 1, 0.0),
    pingoutmcount: jspb.Message.getFieldWithDefault(msg, 2, 0),
    pingouurl: jspb.Message.getFieldWithDefault(msg, 3, ""),
    pingoustarttime: jspb.Message.getFieldWithDefault(msg, 4, 0),
    pingouendtime: jspb.Message.getFieldWithDefault(msg, 5, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.pb.PinGouInfo}
 */
proto.pb.PinGouInfo.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.pb.PinGouInfo;
  return proto.pb.PinGouInfo.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.pb.PinGouInfo} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.pb.PinGouInfo}
 */
proto.pb.PinGouInfo.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setPingouprice(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setPingoutmcount(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setPingouurl(value);
      break;
    case 4:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setPingoustarttime(value);
      break;
    case 5:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setPingouendtime(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.pb.PinGouInfo.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.pb.PinGouInfo.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.pb.PinGouInfo} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.pb.PinGouInfo.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getPingouprice();
  if (f !== 0.0) {
    writer.writeDouble(
      1,
      f
    );
  }
  f = message.getPingoutmcount();
  if (f !== 0) {
    writer.writeUint64(
      2,
      f
    );
  }
  f = message.getPingouurl();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getPingoustarttime();
  if (f !== 0) {
    writer.writeUint64(
      4,
      f
    );
  }
  f = message.getPingouendtime();
  if (f !== 0) {
    writer.writeUint64(
      5,
      f
    );
  }
};


/**
 * optional double pingouPrice = 1;
 * @return {number}
 */
proto.pb.PinGouInfo.prototype.getPingouprice = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 1, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.pb.PinGouInfo} returns this
 */
proto.pb.PinGouInfo.prototype.setPingouprice = function(value) {
  return jspb.Message.setProto3FloatField(this, 1, value);
};


/**
 * optional uint64 pingouTmCount = 2;
 * @return {number}
 */
proto.pb.PinGouInfo.prototype.getPingoutmcount = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.pb.PinGouInfo} returns this
 */
proto.pb.PinGouInfo.prototype.setPingoutmcount = function(value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};


/**
 * optional string pingouUrl = 3;
 * @return {string}
 */
proto.pb.PinGouInfo.prototype.getPingouurl = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.pb.PinGouInfo} returns this
 */
proto.pb.PinGouInfo.prototype.setPingouurl = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional uint64 pingouStartTime = 4;
 * @return {number}
 */
proto.pb.PinGouInfo.prototype.getPingoustarttime = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 4, 0));
};


/**
 * @param {number} value
 * @return {!proto.pb.PinGouInfo} returns this
 */
proto.pb.PinGouInfo.prototype.setPingoustarttime = function(value) {
  return jspb.Message.setProto3IntField(this, 4, value);
};


/**
 * optional uint64 pingouEndTime = 5;
 * @return {number}
 */
proto.pb.PinGouInfo.prototype.getPingouendtime = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 5, 0));
};


/**
 * @param {number} value
 * @return {!proto.pb.PinGouInfo} returns this
 */
proto.pb.PinGouInfo.prototype.setPingouendtime = function(value) {
  return jspb.Message.setProto3IntField(this, 5, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.pb.ShopInfo.prototype.toObject = function(opt_includeInstance) {
  return proto.pb.ShopInfo.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.pb.ShopInfo} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.pb.ShopInfo.toObject = function(includeInstance, msg) {
  var f, obj = {
    shopid: jspb.Message.getFieldWithDefault(msg, 1, 0),
    shoplabel: jspb.Message.getFieldWithDefault(msg, 2, ""),
    shoplevel: jspb.Message.getFloatingPointFieldWithDefault(msg, 3, 0.0),
    shopname: jspb.Message.getFieldWithDefault(msg, 4, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.pb.ShopInfo}
 */
proto.pb.ShopInfo.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.pb.ShopInfo;
  return proto.pb.ShopInfo.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.pb.ShopInfo} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.pb.ShopInfo}
 */
proto.pb.ShopInfo.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setShopid(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setShoplabel(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setShoplevel(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setShopname(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.pb.ShopInfo.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.pb.ShopInfo.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.pb.ShopInfo} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.pb.ShopInfo.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getShopid();
  if (f !== 0) {
    writer.writeUint64(
      1,
      f
    );
  }
  f = message.getShoplabel();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getShoplevel();
  if (f !== 0.0) {
    writer.writeDouble(
      3,
      f
    );
  }
  f = message.getShopname();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
};


/**
 * optional uint64 shopId = 1;
 * @return {number}
 */
proto.pb.ShopInfo.prototype.getShopid = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.pb.ShopInfo} returns this
 */
proto.pb.ShopInfo.prototype.setShopid = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional string shopLabel = 2;
 * @return {string}
 */
proto.pb.ShopInfo.prototype.getShoplabel = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.pb.ShopInfo} returns this
 */
proto.pb.ShopInfo.prototype.setShoplabel = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional double shopLevel = 3;
 * @return {number}
 */
proto.pb.ShopInfo.prototype.getShoplevel = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 3, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.pb.ShopInfo} returns this
 */
proto.pb.ShopInfo.prototype.setShoplevel = function(value) {
  return jspb.Message.setProto3FloatField(this, 3, value);
};


/**
 * optional string shopName = 4;
 * @return {string}
 */
proto.pb.ShopInfo.prototype.getShopname = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.pb.ShopInfo} returns this
 */
proto.pb.ShopInfo.prototype.setShopname = function(value) {
  return jspb.Message.setProto3StringField(this, 4, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.pb.PromotedData.prototype.toObject = function(opt_includeInstance) {
  return proto.pb.PromotedData.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.pb.PromotedData} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.pb.PromotedData.toObject = function(includeInstance, msg) {
  var f, obj = {
    shorturl: jspb.Message.getFieldWithDefault(msg, 1, ""),
    clickurl: jspb.Message.getFieldWithDefault(msg, 2, ""),
    jcommand: jspb.Message.getFieldWithDefault(msg, 3, ""),
    note: jspb.Message.getFieldWithDefault(msg, 4, ""),
    isCoupon: jspb.Message.getFieldWithDefault(msg, 5, 0),
    couponinfo: (f = msg.getCouponinfo()) && proto.pb.CouponInfo.toObject(includeInstance, f),
    commissioninfo: (f = msg.getCommissioninfo()) && proto.pb.CommissionInfo.toObject(includeInstance, f),
    imageinfo: (f = msg.getImageinfo()) && proto.pb.ImageInfo.toObject(includeInstance, f),
    priceinfo: (f = msg.getPriceinfo()) && proto.pb.PriceInfo.toObject(includeInstance, f),
    pingouinfo: (f = msg.getPingouinfo()) && proto.pb.PinGouInfo.toObject(includeInstance, f),
    shopinfo: (f = msg.getShopinfo()) && proto.pb.ShopInfo.toObject(includeInstance, f),
    skuid: jspb.Message.getFieldWithDefault(msg, 12, 0),
    skuname: jspb.Message.getFieldWithDefault(msg, 13, ""),
    owner: jspb.Message.getFieldWithDefault(msg, 14, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.pb.PromotedData}
 */
proto.pb.PromotedData.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.pb.PromotedData;
  return proto.pb.PromotedData.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.pb.PromotedData} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.pb.PromotedData}
 */
proto.pb.PromotedData.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setShorturl(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setClickurl(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setJcommand(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setNote(value);
      break;
    case 5:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setIsCoupon(value);
      break;
    case 6:
      var value = new proto.pb.CouponInfo;
      reader.readMessage(value,proto.pb.CouponInfo.deserializeBinaryFromReader);
      msg.setCouponinfo(value);
      break;
    case 7:
      var value = new proto.pb.CommissionInfo;
      reader.readMessage(value,proto.pb.CommissionInfo.deserializeBinaryFromReader);
      msg.setCommissioninfo(value);
      break;
    case 8:
      var value = new proto.pb.ImageInfo;
      reader.readMessage(value,proto.pb.ImageInfo.deserializeBinaryFromReader);
      msg.setImageinfo(value);
      break;
    case 9:
      var value = new proto.pb.PriceInfo;
      reader.readMessage(value,proto.pb.PriceInfo.deserializeBinaryFromReader);
      msg.setPriceinfo(value);
      break;
    case 10:
      var value = new proto.pb.PinGouInfo;
      reader.readMessage(value,proto.pb.PinGouInfo.deserializeBinaryFromReader);
      msg.setPingouinfo(value);
      break;
    case 11:
      var value = new proto.pb.ShopInfo;
      reader.readMessage(value,proto.pb.ShopInfo.deserializeBinaryFromReader);
      msg.setShopinfo(value);
      break;
    case 12:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setSkuid(value);
      break;
    case 13:
      var value = /** @type {string} */ (reader.readString());
      msg.setSkuname(value);
      break;
    case 14:
      var value = /** @type {string} */ (reader.readString());
      msg.setOwner(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.pb.PromotedData.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.pb.PromotedData.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.pb.PromotedData} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.pb.PromotedData.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getShorturl();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getClickurl();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 3));
  if (f != null) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getNote();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
  f = message.getIsCoupon();
  if (f !== 0) {
    writer.writeInt32(
      5,
      f
    );
  }
  f = message.getCouponinfo();
  if (f != null) {
    writer.writeMessage(
      6,
      f,
      proto.pb.CouponInfo.serializeBinaryToWriter
    );
  }
  f = message.getCommissioninfo();
  if (f != null) {
    writer.writeMessage(
      7,
      f,
      proto.pb.CommissionInfo.serializeBinaryToWriter
    );
  }
  f = message.getImageinfo();
  if (f != null) {
    writer.writeMessage(
      8,
      f,
      proto.pb.ImageInfo.serializeBinaryToWriter
    );
  }
  f = message.getPriceinfo();
  if (f != null) {
    writer.writeMessage(
      9,
      f,
      proto.pb.PriceInfo.serializeBinaryToWriter
    );
  }
  f = message.getPingouinfo();
  if (f != null) {
    writer.writeMessage(
      10,
      f,
      proto.pb.PinGouInfo.serializeBinaryToWriter
    );
  }
  f = message.getShopinfo();
  if (f != null) {
    writer.writeMessage(
      11,
      f,
      proto.pb.ShopInfo.serializeBinaryToWriter
    );
  }
  f = message.getSkuid();
  if (f !== 0) {
    writer.writeUint64(
      12,
      f
    );
  }
  f = message.getSkuname();
  if (f.length > 0) {
    writer.writeString(
      13,
      f
    );
  }
  f = message.getOwner();
  if (f.length > 0) {
    writer.writeString(
      14,
      f
    );
  }
};


/**
 * optional string shortURL = 1;
 * @return {string}
 */
proto.pb.PromotedData.prototype.getShorturl = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.pb.PromotedData} returns this
 */
proto.pb.PromotedData.prototype.setShorturl = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string clickURL = 2;
 * @return {string}
 */
proto.pb.PromotedData.prototype.getClickurl = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.pb.PromotedData} returns this
 */
proto.pb.PromotedData.prototype.setClickurl = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string jCommand = 3;
 * @return {string}
 */
proto.pb.PromotedData.prototype.getJcommand = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.pb.PromotedData} returns this
 */
proto.pb.PromotedData.prototype.setJcommand = function(value) {
  return jspb.Message.setField(this, 3, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.pb.PromotedData} returns this
 */
proto.pb.PromotedData.prototype.clearJcommand = function() {
  return jspb.Message.setField(this, 3, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.pb.PromotedData.prototype.hasJcommand = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional string note = 4;
 * @return {string}
 */
proto.pb.PromotedData.prototype.getNote = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.pb.PromotedData} returns this
 */
proto.pb.PromotedData.prototype.setNote = function(value) {
  return jspb.Message.setProto3StringField(this, 4, value);
};


/**
 * optional int32 is_coupon = 5;
 * @return {number}
 */
proto.pb.PromotedData.prototype.getIsCoupon = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 5, 0));
};


/**
 * @param {number} value
 * @return {!proto.pb.PromotedData} returns this
 */
proto.pb.PromotedData.prototype.setIsCoupon = function(value) {
  return jspb.Message.setProto3IntField(this, 5, value);
};


/**
 * optional CouponInfo couponInfo = 6;
 * @return {?proto.pb.CouponInfo}
 */
proto.pb.PromotedData.prototype.getCouponinfo = function() {
  return /** @type{?proto.pb.CouponInfo} */ (
    jspb.Message.getWrapperField(this, proto.pb.CouponInfo, 6));
};


/**
 * @param {?proto.pb.CouponInfo|undefined} value
 * @return {!proto.pb.PromotedData} returns this
*/
proto.pb.PromotedData.prototype.setCouponinfo = function(value) {
  return jspb.Message.setWrapperField(this, 6, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.pb.PromotedData} returns this
 */
proto.pb.PromotedData.prototype.clearCouponinfo = function() {
  return this.setCouponinfo(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.pb.PromotedData.prototype.hasCouponinfo = function() {
  return jspb.Message.getField(this, 6) != null;
};


/**
 * optional CommissionInfo commissionInfo = 7;
 * @return {?proto.pb.CommissionInfo}
 */
proto.pb.PromotedData.prototype.getCommissioninfo = function() {
  return /** @type{?proto.pb.CommissionInfo} */ (
    jspb.Message.getWrapperField(this, proto.pb.CommissionInfo, 7));
};


/**
 * @param {?proto.pb.CommissionInfo|undefined} value
 * @return {!proto.pb.PromotedData} returns this
*/
proto.pb.PromotedData.prototype.setCommissioninfo = function(value) {
  return jspb.Message.setWrapperField(this, 7, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.pb.PromotedData} returns this
 */
proto.pb.PromotedData.prototype.clearCommissioninfo = function() {
  return this.setCommissioninfo(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.pb.PromotedData.prototype.hasCommissioninfo = function() {
  return jspb.Message.getField(this, 7) != null;
};


/**
 * optional ImageInfo imageInfo = 8;
 * @return {?proto.pb.ImageInfo}
 */
proto.pb.PromotedData.prototype.getImageinfo = function() {
  return /** @type{?proto.pb.ImageInfo} */ (
    jspb.Message.getWrapperField(this, proto.pb.ImageInfo, 8));
};


/**
 * @param {?proto.pb.ImageInfo|undefined} value
 * @return {!proto.pb.PromotedData} returns this
*/
proto.pb.PromotedData.prototype.setImageinfo = function(value) {
  return jspb.Message.setWrapperField(this, 8, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.pb.PromotedData} returns this
 */
proto.pb.PromotedData.prototype.clearImageinfo = function() {
  return this.setImageinfo(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.pb.PromotedData.prototype.hasImageinfo = function() {
  return jspb.Message.getField(this, 8) != null;
};


/**
 * optional PriceInfo priceInfo = 9;
 * @return {?proto.pb.PriceInfo}
 */
proto.pb.PromotedData.prototype.getPriceinfo = function() {
  return /** @type{?proto.pb.PriceInfo} */ (
    jspb.Message.getWrapperField(this, proto.pb.PriceInfo, 9));
};


/**
 * @param {?proto.pb.PriceInfo|undefined} value
 * @return {!proto.pb.PromotedData} returns this
*/
proto.pb.PromotedData.prototype.setPriceinfo = function(value) {
  return jspb.Message.setWrapperField(this, 9, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.pb.PromotedData} returns this
 */
proto.pb.PromotedData.prototype.clearPriceinfo = function() {
  return this.setPriceinfo(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.pb.PromotedData.prototype.hasPriceinfo = function() {
  return jspb.Message.getField(this, 9) != null;
};


/**
 * optional PinGouInfo pinGouInfo = 10;
 * @return {?proto.pb.PinGouInfo}
 */
proto.pb.PromotedData.prototype.getPingouinfo = function() {
  return /** @type{?proto.pb.PinGouInfo} */ (
    jspb.Message.getWrapperField(this, proto.pb.PinGouInfo, 10));
};


/**
 * @param {?proto.pb.PinGouInfo|undefined} value
 * @return {!proto.pb.PromotedData} returns this
*/
proto.pb.PromotedData.prototype.setPingouinfo = function(value) {
  return jspb.Message.setWrapperField(this, 10, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.pb.PromotedData} returns this
 */
proto.pb.PromotedData.prototype.clearPingouinfo = function() {
  return this.setPingouinfo(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.pb.PromotedData.prototype.hasPingouinfo = function() {
  return jspb.Message.getField(this, 10) != null;
};


/**
 * optional ShopInfo shopInfo = 11;
 * @return {?proto.pb.ShopInfo}
 */
proto.pb.PromotedData.prototype.getShopinfo = function() {
  return /** @type{?proto.pb.ShopInfo} */ (
    jspb.Message.getWrapperField(this, proto.pb.ShopInfo, 11));
};


/**
 * @param {?proto.pb.ShopInfo|undefined} value
 * @return {!proto.pb.PromotedData} returns this
*/
proto.pb.PromotedData.prototype.setShopinfo = function(value) {
  return jspb.Message.setWrapperField(this, 11, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.pb.PromotedData} returns this
 */
proto.pb.PromotedData.prototype.clearShopinfo = function() {
  return this.setShopinfo(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.pb.PromotedData.prototype.hasShopinfo = function() {
  return jspb.Message.getField(this, 11) != null;
};


/**
 * optional uint64 skuId = 12;
 * @return {number}
 */
proto.pb.PromotedData.prototype.getSkuid = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 12, 0));
};


/**
 * @param {number} value
 * @return {!proto.pb.PromotedData} returns this
 */
proto.pb.PromotedData.prototype.setSkuid = function(value) {
  return jspb.Message.setProto3IntField(this, 12, value);
};


/**
 * optional string skuName = 13;
 * @return {string}
 */
proto.pb.PromotedData.prototype.getSkuname = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 13, ""));
};


/**
 * @param {string} value
 * @return {!proto.pb.PromotedData} returns this
 */
proto.pb.PromotedData.prototype.setSkuname = function(value) {
  return jspb.Message.setProto3StringField(this, 13, value);
};


/**
 * optional string owner = 14;
 * @return {string}
 */
proto.pb.PromotedData.prototype.getOwner = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 14, ""));
};


/**
 * @param {string} value
 * @return {!proto.pb.PromotedData} returns this
 */
proto.pb.PromotedData.prototype.setOwner = function(value) {
  return jspb.Message.setProto3StringField(this, 14, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.pb.PromotionByUnionIDRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.pb.PromotionByUnionIDRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.pb.PromotionByUnionIDRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.pb.PromotionByUnionIDRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    materialid: jspb.Message.getFieldWithDefault(msg, 1, ""),
    unionid: jspb.Message.getFieldWithDefault(msg, 2, 0),
    autosearch: jspb.Message.getBooleanFieldWithDefault(msg, 3, false),
    type: jspb.Message.getFieldWithDefault(msg, 4, 0),
    positionid: jspb.Message.getFieldWithDefault(msg, 5, 0),
    couponurl: jspb.Message.getFieldWithDefault(msg, 6, ""),
    chaintype: jspb.Message.getFieldWithDefault(msg, 7, 0),
    subunionid: jspb.Message.getFieldWithDefault(msg, 8, ""),
    giftcouponkey: jspb.Message.getFieldWithDefault(msg, 9, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.pb.PromotionByUnionIDRequest}
 */
proto.pb.PromotionByUnionIDRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.pb.PromotionByUnionIDRequest;
  return proto.pb.PromotionByUnionIDRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.pb.PromotionByUnionIDRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.pb.PromotionByUnionIDRequest}
 */
proto.pb.PromotionByUnionIDRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setMaterialid(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setUnionid(value);
      break;
    case 3:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setAutosearch(value);
      break;
    case 4:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setType(value);
      break;
    case 5:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setPositionid(value);
      break;
    case 6:
      var value = /** @type {string} */ (reader.readString());
      msg.setCouponurl(value);
      break;
    case 7:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setChaintype(value);
      break;
    case 8:
      var value = /** @type {string} */ (reader.readString());
      msg.setSubunionid(value);
      break;
    case 9:
      var value = /** @type {string} */ (reader.readString());
      msg.setGiftcouponkey(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.pb.PromotionByUnionIDRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.pb.PromotionByUnionIDRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.pb.PromotionByUnionIDRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.pb.PromotionByUnionIDRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getMaterialid();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getUnionid();
  if (f !== 0) {
    writer.writeUint64(
      2,
      f
    );
  }
  f = /** @type {boolean} */ (jspb.Message.getField(message, 3));
  if (f != null) {
    writer.writeBool(
      3,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 4));
  if (f != null) {
    writer.writeInt32(
      4,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 5));
  if (f != null) {
    writer.writeUint64(
      5,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 6));
  if (f != null) {
    writer.writeString(
      6,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 7));
  if (f != null) {
    writer.writeInt32(
      7,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 8));
  if (f != null) {
    writer.writeString(
      8,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 9));
  if (f != null) {
    writer.writeString(
      9,
      f
    );
  }
};


/**
 * optional string materialId = 1;
 * @return {string}
 */
proto.pb.PromotionByUnionIDRequest.prototype.getMaterialid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.pb.PromotionByUnionIDRequest} returns this
 */
proto.pb.PromotionByUnionIDRequest.prototype.setMaterialid = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional uint64 unionId = 2;
 * @return {number}
 */
proto.pb.PromotionByUnionIDRequest.prototype.getUnionid = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.pb.PromotionByUnionIDRequest} returns this
 */
proto.pb.PromotionByUnionIDRequest.prototype.setUnionid = function(value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};


/**
 * optional bool autoSearch = 3;
 * @return {boolean}
 */
proto.pb.PromotionByUnionIDRequest.prototype.getAutosearch = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 3, false));
};


/**
 * @param {boolean} value
 * @return {!proto.pb.PromotionByUnionIDRequest} returns this
 */
proto.pb.PromotionByUnionIDRequest.prototype.setAutosearch = function(value) {
  return jspb.Message.setField(this, 3, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.pb.PromotionByUnionIDRequest} returns this
 */
proto.pb.PromotionByUnionIDRequest.prototype.clearAutosearch = function() {
  return jspb.Message.setField(this, 3, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.pb.PromotionByUnionIDRequest.prototype.hasAutosearch = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional int32 type = 4;
 * @return {number}
 */
proto.pb.PromotionByUnionIDRequest.prototype.getType = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 4, 0));
};


/**
 * @param {number} value
 * @return {!proto.pb.PromotionByUnionIDRequest} returns this
 */
proto.pb.PromotionByUnionIDRequest.prototype.setType = function(value) {
  return jspb.Message.setField(this, 4, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.pb.PromotionByUnionIDRequest} returns this
 */
proto.pb.PromotionByUnionIDRequest.prototype.clearType = function() {
  return jspb.Message.setField(this, 4, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.pb.PromotionByUnionIDRequest.prototype.hasType = function() {
  return jspb.Message.getField(this, 4) != null;
};


/**
 * optional uint64 positionId = 5;
 * @return {number}
 */
proto.pb.PromotionByUnionIDRequest.prototype.getPositionid = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 5, 0));
};


/**
 * @param {number} value
 * @return {!proto.pb.PromotionByUnionIDRequest} returns this
 */
proto.pb.PromotionByUnionIDRequest.prototype.setPositionid = function(value) {
  return jspb.Message.setField(this, 5, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.pb.PromotionByUnionIDRequest} returns this
 */
proto.pb.PromotionByUnionIDRequest.prototype.clearPositionid = function() {
  return jspb.Message.setField(this, 5, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.pb.PromotionByUnionIDRequest.prototype.hasPositionid = function() {
  return jspb.Message.getField(this, 5) != null;
};


/**
 * optional string couponUrl = 6;
 * @return {string}
 */
proto.pb.PromotionByUnionIDRequest.prototype.getCouponurl = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 6, ""));
};


/**
 * @param {string} value
 * @return {!proto.pb.PromotionByUnionIDRequest} returns this
 */
proto.pb.PromotionByUnionIDRequest.prototype.setCouponurl = function(value) {
  return jspb.Message.setField(this, 6, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.pb.PromotionByUnionIDRequest} returns this
 */
proto.pb.PromotionByUnionIDRequest.prototype.clearCouponurl = function() {
  return jspb.Message.setField(this, 6, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.pb.PromotionByUnionIDRequest.prototype.hasCouponurl = function() {
  return jspb.Message.getField(this, 6) != null;
};


/**
 * optional int32 chainType = 7;
 * @return {number}
 */
proto.pb.PromotionByUnionIDRequest.prototype.getChaintype = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 7, 0));
};


/**
 * @param {number} value
 * @return {!proto.pb.PromotionByUnionIDRequest} returns this
 */
proto.pb.PromotionByUnionIDRequest.prototype.setChaintype = function(value) {
  return jspb.Message.setField(this, 7, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.pb.PromotionByUnionIDRequest} returns this
 */
proto.pb.PromotionByUnionIDRequest.prototype.clearChaintype = function() {
  return jspb.Message.setField(this, 7, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.pb.PromotionByUnionIDRequest.prototype.hasChaintype = function() {
  return jspb.Message.getField(this, 7) != null;
};


/**
 * optional string subUnionId = 8;
 * @return {string}
 */
proto.pb.PromotionByUnionIDRequest.prototype.getSubunionid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 8, ""));
};


/**
 * @param {string} value
 * @return {!proto.pb.PromotionByUnionIDRequest} returns this
 */
proto.pb.PromotionByUnionIDRequest.prototype.setSubunionid = function(value) {
  return jspb.Message.setField(this, 8, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.pb.PromotionByUnionIDRequest} returns this
 */
proto.pb.PromotionByUnionIDRequest.prototype.clearSubunionid = function() {
  return jspb.Message.setField(this, 8, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.pb.PromotionByUnionIDRequest.prototype.hasSubunionid = function() {
  return jspb.Message.getField(this, 8) != null;
};


/**
 * optional string giftCouponKey = 9;
 * @return {string}
 */
proto.pb.PromotionByUnionIDRequest.prototype.getGiftcouponkey = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 9, ""));
};


/**
 * @param {string} value
 * @return {!proto.pb.PromotionByUnionIDRequest} returns this
 */
proto.pb.PromotionByUnionIDRequest.prototype.setGiftcouponkey = function(value) {
  return jspb.Message.setField(this, 9, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.pb.PromotionByUnionIDRequest} returns this
 */
proto.pb.PromotionByUnionIDRequest.prototype.clearGiftcouponkey = function() {
  return jspb.Message.setField(this, 9, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.pb.PromotionByUnionIDRequest.prototype.hasGiftcouponkey = function() {
  return jspb.Message.getField(this, 9) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.pb.PromotionByUnionIDResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.pb.PromotionByUnionIDResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.pb.PromotionByUnionIDResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.pb.PromotionByUnionIDResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    code: jspb.Message.getFieldWithDefault(msg, 1, 0),
    msg: jspb.Message.getFieldWithDefault(msg, 2, ""),
    data: (f = msg.getData()) && proto.pb.PromotedData.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.pb.PromotionByUnionIDResponse}
 */
proto.pb.PromotionByUnionIDResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.pb.PromotionByUnionIDResponse;
  return proto.pb.PromotionByUnionIDResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.pb.PromotionByUnionIDResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.pb.PromotionByUnionIDResponse}
 */
proto.pb.PromotionByUnionIDResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setCode(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setMsg(value);
      break;
    case 3:
      var value = new proto.pb.PromotedData;
      reader.readMessage(value,proto.pb.PromotedData.deserializeBinaryFromReader);
      msg.setData(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.pb.PromotionByUnionIDResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.pb.PromotionByUnionIDResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.pb.PromotionByUnionIDResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.pb.PromotionByUnionIDResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getCode();
  if (f !== 0) {
    writer.writeInt32(
      1,
      f
    );
  }
  f = message.getMsg();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getData();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      proto.pb.PromotedData.serializeBinaryToWriter
    );
  }
};


/**
 * optional int32 code = 1;
 * @return {number}
 */
proto.pb.PromotionByUnionIDResponse.prototype.getCode = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.pb.PromotionByUnionIDResponse} returns this
 */
proto.pb.PromotionByUnionIDResponse.prototype.setCode = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional string msg = 2;
 * @return {string}
 */
proto.pb.PromotionByUnionIDResponse.prototype.getMsg = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.pb.PromotionByUnionIDResponse} returns this
 */
proto.pb.PromotionByUnionIDResponse.prototype.setMsg = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional PromotedData data = 3;
 * @return {?proto.pb.PromotedData}
 */
proto.pb.PromotionByUnionIDResponse.prototype.getData = function() {
  return /** @type{?proto.pb.PromotedData} */ (
    jspb.Message.getWrapperField(this, proto.pb.PromotedData, 3));
};


/**
 * @param {?proto.pb.PromotedData|undefined} value
 * @return {!proto.pb.PromotionByUnionIDResponse} returns this
*/
proto.pb.PromotionByUnionIDResponse.prototype.setData = function(value) {
  return jspb.Message.setWrapperField(this, 3, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.pb.PromotionByUnionIDResponse} returns this
 */
proto.pb.PromotionByUnionIDResponse.prototype.clearData = function() {
  return this.setData(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.pb.PromotionByUnionIDResponse.prototype.hasData = function() {
  return jspb.Message.getField(this, 3) != null;
};


goog.object.extend(exports, proto.pb);
